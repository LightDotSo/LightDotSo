name: Changesets
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  changesets-status:
    if: github.event_name == 'pull_request' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Check for changeset
        run: |
          pnpm changeset status
  changesets-pr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Create Pull Request
        uses: changesets/action@v1
        with:
          commit: "chore: changesets version package"
          title: "chore: changesets pr"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
  changesets-release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    env:
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Node Build
        run: |
          pnpm turbo run build
      - name: Publish to NPM
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  changesets-check:
    if: always()
    needs:
      - changesets-status
      - changesets-pr
      - changesets-release
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check All Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: changesets-status,changesets-pr,changesets-release
          jobs: ${{ toJSON(needs) }}
