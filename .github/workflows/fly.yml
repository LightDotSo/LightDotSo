name: Fly
on:
  push:
    branches:
      - main
  pull_request:
  pull_request_target:
    types:
      - labeled
  merge_group:
  release:
    types: created
  workflow_dispatch:
    inputs:
      group:
        type: choice
        default: consumer
        description: "Group to invoke (consumer, indexer, rpc, etc.)"
        options:
          - consumer
          - indexer
          - graph
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  fly-wait-docker:
    if: github.event_name == 'push' || startsWith(github.ref, 'refs/tags/@lightdotso/bin') && github.event_name == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Sleep for 30 seconds
        run: |
          sleep 30s
      - name: Wait Docker
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: docker-build
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success,skipped,cancelled
  fly-deploy-api:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/api
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-bundler:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/bundler
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-bundler-sepolia:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/bundler-sepolia
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-consumer:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/consumer
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-consumer-error:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'consumer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/consumer-error
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-consumer-nfn:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'consumer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/consumer-nfn
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-consumer-retry:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'consumer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/consumer-retry
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-consumer-tx:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'consumer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/consumer-tx
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-gas:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/gas
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-grafana:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/grafana
        continue-on-error: true
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-graph:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'graph'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/graph
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-ipfs:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'graph'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/ipfs
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-arbitrum:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-arbitrum
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-avalanche:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-avalanche
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-base:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-base
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-bsc:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-bsc
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-gnosis:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-gnosis
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-polygon:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-polygon
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-optimism:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-optimism
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-indexer-sepolia:
    if: github.event_name == 'workflow_dispatch' && inputs.group == 'indexer'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/indexer-sepolia
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-log-shipper:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/log-shipper
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-otel-collector:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/otel-collector
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-paymaster:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/paymaster
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-prometheus:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/prometheus
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-rpc:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/rpc
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-rpc-internal:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/rpc-internal
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-deploy-simulator:
    runs-on: ubuntu-latest
    needs:
      - fly-wait-docker
    timeout-minutes: 30
    steps:
      - name: Fetch Head
        uses: actions/checkout@v4
      - name: Fly Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy --remote-only
        working-directory: ./fly/simulator
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  fly-check:
    if: always()
    needs:
      - fly-wait-docker
      - fly-deploy-api
      - fly-deploy-bundler
      - fly-deploy-bundler-sepolia
      - fly-deploy-consumer
      - fly-deploy-consumer-error
      - fly-deploy-consumer-nfn
      - fly-deploy-consumer-retry
      - fly-deploy-consumer-tx
      - fly-deploy-gas
      - fly-deploy-grafana
      - fly-deploy-graph
      - fly-deploy-ipfs
      - fly-deploy-indexer
      - fly-deploy-indexer-arbitrum
      - fly-deploy-indexer-avalanche
      - fly-deploy-indexer-base
      - fly-deploy-indexer-bsc
      - fly-deploy-indexer-gnosis
      - fly-deploy-indexer-polygon
      - fly-deploy-indexer-optimism
      - fly-deploy-indexer-sepolia
      - fly-deploy-log-shipper
      - fly-deploy-otel-collector
      - fly-deploy-paymaster
      - fly-deploy-prometheus
      - fly-deploy-rpc
      - fly-deploy-rpc-internal
      - fly-deploy-simulator
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check All Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: fly-wait-docker,fly-deploy-api,fly-deploy-bundler,fly-deploy-bundler-sepolia,fly-deploy-consumer,fly-deploy-consumer-error,fly-deploy-consumer-nfn,fly-deploy-consumer-retry,fly-deploy-consumer-tx,fly-deploy-gas,fly-deploy-grafana,fly-deploy-graph,fly-deploy-ipfs,fly-deploy-indexer,fly-deploy-indexer-arbitrum,fly-deploy-indexer-avalanche,fly-deploy-indexer-base,fly-deploy-indexer-bsc,fly-deploy-indexer-gnosis,fly-deploy-indexer-polygon,fly-deploy-indexer-optimism,fly-deploy-indexer-sepolia,fly-deploy-log-shipper,fly-deploy-otel-collector,fly-deploy-paymaster,fly-deploy-prometheus,fly-deploy-rpc,fly-deploy-rpc-internal,fly-deploy-simulator
          jobs: ${{ toJSON(needs) }}
