name: Neon
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
      - opened
      - synchronize
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  FOUNDRY_PROFILE: ci
jobs:
  neon-turbo:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      trigger: ${{ steps.turbo.outputs.trigger }}
    steps:
      - name: Turbo Trigger
        id: turbo
        uses: wallet-rs/wallet-rs/.github/actions/turbo-trigger@main
        with:
          workspace: "@lightdotso/prisma"
  neon-deploy:
    if: needs.neon-turbo.outputs.trigger == 'true' && github.event.pull_request.merged == true
    needs:
      - neon-turbo
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Search branch by name
        id: get_branch_id
        run: |
          branch_id=$(curl --silent \
            "https://console.neon.tech/api/v2/projects/${{ secrets.NEON_PROJECT_ID }}/branches" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer ${{ secrets.NEON_API_KEY }}" \
            | jq -r .branches \
            | jq -c '.[] | select(.name | contains("'${{ github.head_ref }}'")) .id' \
            | jq -r \
            ) \
          echo "branch_id=${branch_id}" >> $GITHUB_OUTPUT
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v2
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_id: ${{ github.head_ref }}
          api_key: ${{ secrets.NEON_API_KEY }}
      - name: Touch .env
        working-directory: configurations/prisma
        run: |
          touch .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }}/neondb?pgbouncer=true&connect_timeout=10 >> .env
          echo DIRECT_DATABASE_URL=${{ secrets.DIRECT_DATABASE_URL }}/neondb?connect_timeout=10 >> .env
          pnpm run db:migrate:deploy
  neon-deploy-preview:
    if: needs.neon-turbo.outputs.trigger == 'true' && github.event.pull_request.merged == false && github.head_ref != ''
    needs:
      - neon-turbo
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Neon Database Create Branch Action
        uses: neondatabase/create-branch-action@v3
        id: create_branch
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: ${{ github.head_ref }}
          api_key: ${{ secrets.NEON_API_KEY }}
          username: ${{ secrets.PG_USERNAME }}
          password: ${{ secrets.PG_PASSWORD }}
      - name: Touch .env
        working-directory: configurations/prisma
        run: |
          touch .env
          echo DATABASE_URL=${{ steps.create_branch.outputs.db_url_with_pooler }}/neondb?pgbouncer=true&connect_timeout=10 >> .env
          echo DIRECT_DATABASE_URL=${{ steps.create_branch.outputs.db_url }}/neondb?connect_timeout=10 >> .env
          pnpm run build
          pnpm run db:migrate:dev
          pnpm run db:migrate:deploy
      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v4
  neon-check:
    if: always()
    needs:
      - neon-deploy
      - neon-deploy-preview
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check All Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: neon-deploy,neon-deploy-preview
          jobs: ${{ toJSON(needs) }}
