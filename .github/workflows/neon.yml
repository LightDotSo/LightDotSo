name: Neon
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - closed
      - synchronize
  pull_request_target:
    types:
      - opened
      - closed
      - synchronize
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  FOUNDRY_PROFILE: ci
jobs:
  neon-turbo:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      trigger: ${{ steps.turbo.outputs.trigger }}
    steps:
      - name: Turbo Trigger
        id: turbo
        uses: wallet-rs/wallet-rs/.github/actions/turbo-trigger@main
        with:
          workspace: "@lightdotso/prisma"
  neon-deploy:
    if: github.event.pull_request.merged == true || github.event.action == 'closed'
    needs:
      - neon-turbo
    runs-on: ubuntu-latest
    timeout-minutes: 90
    permissions:
      contents: read
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Previous commit hash
        id: previous_commit_hash
        run: |
          echo "hash=$(git log --pretty=format:%H -n 1 HEAD^)" >> $GITHUB_OUTPUT
      - name: Delete Neon Branch
        continue-on-error: true
        run: |
          pnpm neonctl branches delete ${{ github.head_ref }} --project-id ${{ secrets.NEON_PROJECT_ID }}
          pnpm neonctl branches delete gh-readonly-queue/main/pr-${{ github.event.number }}-${{ steps.previous_commit_hash.outputs.hash }} --project-id ${{ secrets.NEON_PROJECT_ID }}
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      - name: Remove Vercel Environments
        continue-on-error: true
        run: |
          pnpm vercel env rm --yes PGHOST preview ${{ github.head_ref }} --token=${{ secrets.VERCEL_TOKEN }} || true
          pnpm vercel env rm --yes DATABASE_URL preview ${{ github.head_ref }} --token=${{ secrets.VERCEL_TOKEN }} || true
          pnpm vercel env rm --yes PGHOST preview gh-readonly-queue/main/pr-${{ github.event.number }}-${{ steps.previous_commit_hash.outputs.hash }} --token=${{ secrets.VERCEL_TOKEN }} || true
          pnpm vercel env rm --yes DATABASE_URL preview gh-readonly-queue/main/pr-${{ github.event.number }}-${{ steps.previous_commit_hash.outputs.hash }} --token=${{ secrets.VERCEL_TOKEN }} || true
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - if: github.event.pull_request.merged == true
        name: Prisma Migrate Deploy
        working-directory: configurations/prisma
        run: |
          pnpm run build
          pnpm run db:migrate:deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}/neondb?pgbouncer=true&connect_timeout=10
          DIRECT_DATABASE_URL: ${{ secrets.DIRECT_DATABASE_URL }}/neondb?connect_timeout=10
  neon-deploy-preview:
    if: needs.neon-turbo.outputs.trigger == 'true' && github.event.pull_request.merged == false && github.event_name == 'pull_request' || github.event.action == 'opened'
    needs:
      - neon-turbo
    runs-on: ubuntu-latest
    timeout-minutes: 90
    permissions:
      contents: read
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Get Vercel Secrets
        working-directory: configurations/prisma
        run: |
          pnpm vercel env pull --yes --environment=preview --git-branch=${{ github.head_ref }} .env --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Prisma Migrate Deploy
        working-directory: configurations/prisma
        run: |
          pnpm run build
          pnpm run db:migrate:dev
          pnpm run db:migrate:deploy
      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v4
  neon-check:
    if: always()
    needs:
      - neon-deploy
      - neon-deploy-preview
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check All Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: neon-deploy,neon-deploy-preview
          jobs: ${{ toJSON(needs) }}
