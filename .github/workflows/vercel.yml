name: Vercel
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: ${{ github.event_name != 'push' }}
env:
  TURBO_API: ${{ secrets.TURBO_API }}
  TURBO_REMOTE_CACHE_SIGNATURE_KEY: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_GIT_COMMIT_SHA: ${{ github.sha }}
  NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA: ${{ github.sha }}
jobs:
  vercel-turbo:
    if: >-
      github.actor != 'LightDotSoBot' &&
      github.actor != 'dependabot[bot]' &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.ref, 'changeset-release') &&
      !contains(github.ref, 'release-please')
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        app: [ai, app, blog, changelog, docs, paper, explorer, frames, home, paper, proposals, storybook]
    outputs:
      trigger: ${{ steps.turbo.outputs.trigger }}
    steps:
      - name: Turbo Trigger
        id: turbo
        uses: wallet-rs/wallet-rs/.github/actions/turbo-trigger@main
        with:
          workspace: "@lightdotso/${{ matrix.app }}"
  vercel-deploy-preview:
    needs: vercel-turbo
    if: needs.vercel-turbo.outputs.trigger == 'true' && github.event_name != 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        app: [app, explorer, home]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Install Doppler
        uses: dopplerhq/cli-action@v3
      - name: Doppler Setup 
        uses: dopplerhq/secrets-fetch-action@v1.2.0
        id: doppler
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}
          doppler-project: ${{ matrix.app }}
          doppler-config: prd
      - name: Download Variables Preview
        working-directory: apps/${{ matrix.app }}
        run: |
          doppler secrets download --project=${{ matrix.app }} --config=stg --no-file --format=env > .env
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Download Variables Production
        working-directory: apps/${{ matrix.app }}
        run: |
          doppler secrets download --project=${{ matrix.app }} --config=prd --no-file --format=env > .env
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook'
        name: Turbo Build Preview
        run: |
          pnpm turbo run next-build --filter=@lightdotso/${{ matrix.app }}
        env:
          VERCEL_ENV: preview
          NEXT_PUBLIC_VERCEL_ENV: preview
      - name: Vercel Build Preview
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ steps.doppler.outputs.VERCEL_PROJECT_ID }}
          VERCEL_ENV: preview
          NEXT_PUBLIC_VERCEL_ENV: preview
      - name: Vercel Deploy Preview
        run: |
          vercel deploy --no-wait --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ steps.doppler.outputs.VERCEL_PROJECT_ID }}
          VERCEL_ENV: preview
          NEXT_PUBLIC_VERCEL_ENV: preview
      - if: always()
        name: Cleanup Env Preview
        working-directory: apps/${{ matrix.app }}
        run: |
          rm -rf .env
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Analyze Bundle
        working-directory: apps/${{ matrix.app }}
        run: |
          pnpm --package=nextjs-bundle-analysis dlx report
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Upload Bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle-${{ matrix.app }}
          path: apps/${{ matrix.app }}/.next/analyze/__bundle_analysis.json
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Download Bundle Stats
        uses: dawidd6/action-download-artifact@v6
        with:
          name: bundle-${{ matrix.app }}
          workflow: vercel.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: apps/${{ matrix.app }}/.next/analyze/base/bundle
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Compare with Base Branch 
        working-directory: apps/${{ matrix.app }}
        run: |
          ls -laR .next/analyze/base && pnpm --package=nextjs-bundle-analysis dlx compare
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Get Comment Body
        id: comment-body
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat apps/${{ matrix.app }}/.next/analyze/__bundle_analysis_comment.txt)" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook' &&
          github.event.number != null
        name: Add Comment to PR
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: 'bundle-analysis-${{ matrix.app }}'
          message: ${{ steps.comment-body.outputs.body }}
  vercel-deploy-prd:
    needs: vercel-turbo
    if: needs.vercel-turbo.outputs.trigger == 'true' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [ai, app, blog, changelog, docs, paper, explorer, frames, home, paper, proposals, storybook]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Node Install
        uses: wallet-rs/wallet-rs/.github/actions/node-install@main
      - name: Install Doppler
        uses: dopplerhq/cli-action@v3
      - name: Doppler Setup 
        uses: dopplerhq/secrets-fetch-action@v1.2.0
        id: doppler
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}
          doppler-project: ${{ matrix.app }}
          doppler-config: prd
      - name: Download Variables Production
        working-directory: apps/${{ matrix.app }}
        run: |
          doppler secrets download --project=${{ matrix.app }} --config=prd --no-file --format=env > .env
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook'
        name: Turbo Build Production
        run: |
          pnpm turbo run next-build --filter=@lightdotso/${{ matrix.app }}
        env:
          VERCEL_ENV: production
          NEXT_PUBLIC_VERCEL_ENV: production
      - name: Vercel Build Production
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ steps.doppler.outputs.VERCEL_PROJECT_ID }}
          VERCEL_ENV: production
          NEXT_PUBLIC_VERCEL_ENV: production
      - name: Vercel Deploy Production
        run: |
          vercel deploy --no-wait --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ steps.doppler.outputs.VERCEL_PROJECT_ID }}
          VERCEL_ENV: production
          NEXT_PUBLIC_VERCEL_ENV: production
      - if: always()
        name: Cleanup Env Production
        working-directory: apps/${{ matrix.app }}
        run: |
          rm -rf .env
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook'
        name: Analyze Bundle
        working-directory: apps/${{ matrix.app }}
        run: |
          pnpm --package=nextjs-bundle-analysis dlx report
      - if: |
          matrix.app != 'paper' &&
          matrix.app != 'storybook'
        name: Upload Bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle-${{ matrix.app }}
          path: apps/${{ matrix.app }}/.next/analyze/__bundle_analysis.json
  vercel-check:
    needs:
      - vercel-turbo
      - vercel-deploy-preview
      - vercel-deploy-prd
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check All Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: vercel-turbo,vercel-deploy-preview,vercel-deploy-prd
          jobs: ${{ toJSON(needs) }}
