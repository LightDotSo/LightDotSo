// Copyright 2023-2024 LightDotSo.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// biome-ignore lint/suspicious/noShadowRestrictedNames: <explanation>
import { Address, BigInt } from "@graphprotocol/graph-ts";
import { assert, test } from "matchstick-as/assembly/index";
import { log } from "matchstick-as/assembly/log";
import { handleUserOperationFromCalldata } from "../src/user-operation";

// From: https://thegraph.com/docs/en/developing/unit-testing-framework

test("Success for v0.6.0", () => {
  // https://sepolia.etherscan.io/tx/0x87efb66c2b17af424b7fd2584d268eb1c301b9337eaad3137be5c4c7bbd574bf
  const opStruct = handleUserOperationFromCalldata(
    "0x1fad948c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000d53eb5203e367bbdd4f72338938224881fc501ab0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000010dbbe70128929723c1b982e53c51653232e4ff20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000004c4b4000000000000000000000000000000000000000000000000000000000004c4b40000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000001122e6ea000000000000000000000000000000000000000000000000000000001122e6ea000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000000580000000000756d3e6464f5efe7e413a0af1c7474183815c8b7f285c774a1c925209bebaab24662b22e7cf32e2f7a412bfcb1bf52294b9ed60000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095000000000018d32df916ff115a25fbefc70baf8b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006517bc953e0624bf37d995fbcab5ccab2dc2589bcfc6bac1581d161a135ce749e1099fe032c83e21360fa516bdd13cb080e4090b924ce7a06459d837ee3556037ea21e381c0000000000000000000000000000000000000000000000000000000000000000000000000000000000004a0001000000010001783610798879fb9af654e2a99929e00e82c3a0f4288c08bc30266b64dc3e23285d634f6658fdeeb5ba9193b5e935a42a1d9bdf5007144707c9082e6eda5d8fbd1b0100000000000000000000000000000000000000000000",
    new BigInt(0),
    Address.fromString("0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"),
  );

  assert.assertNotNull(opStruct);
  assert.assertTrue(opStruct.signature.toHexString().length > 2);
  log.info("Info!", [opStruct.signature.toHexString()]);
});

test("Success for v0.7.0", () => {
  // https://etherscan.io/tx/0x1c5150e4090281a3f2f2c9fd99043db48dc690d023d77b1cf462ab4ace57fcee
  const opStruct = handleUserOperationFromCalldata(
    "0x765e827f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000026ced4fc889d52210bd14af3bda90f7e36d1072500000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000fdcb91f4eb91131953a273d252701ca93c35c70300000000ce44cba1d94b4dc76ca7857e904e8af28bfcbae400000000000000230000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000016ed900000000000000000000000000053f62000000000000000000000000000000000000000000000000000000000000c411000000000000000000000000773594000000000000000000000000066ba1a5b400000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000164e9ae5c530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000f8f3de3c0d654fda23dad170f0f320a9217250912700000000000000000000000000000000000000000000000000d529ae9e8600009871efa4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d529ae9e860000000000000000000000000000000000000000000000000000012c006a93ded30800000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001b0000000000000003b6d0340340dba469a902c890f668e5ce725de86eb50382200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000066f6d52b9b4007c02fb539b093e2e4ff722425edc4acf38535e86c7a626faf3a2c21b63f1a175160e588a86cd08cde059d4d78df2da1f73515eabe7a03ed5db9ac730d281c000000000000000000000000000000000000000000000000000000000000",
    new BigInt(0),
    Address.fromString("0x0000000071727de22e5e9d8baf0edac6f37da032"),
  );

  assert.assertNotNull(opStruct);
  // assert.assertTrue(opStruct.signature.toHexString().length > 2);
  log.info("Info!", [opStruct.signature.toHexString()]);
});
