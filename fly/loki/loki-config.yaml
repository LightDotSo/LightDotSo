# Copyright (C) 2023 Light, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# From: https://grafana.com/docs/loki/latest/configure/examples/#1-local-configuration-exampleyaml

auth_enabled: false

server:
  http_listen_port: 3100
  grpc_listen_port: 9096
  # Limit on the size of a gRPC message this server can receive (bytes).
  # CLI flag: -server.grpc-max-recv-msg-size-bytes
  # [grpc_server_max_recv_msg_size: <int> | default = 4194304]
  grpc_server_max_recv_msg_size: 104857600 # 100 MB, might be too much, be careful

  # Limit on the size of a gRPC message this server can send (bytes).
  # CLI flag: -server.grpc-max-send-msg-size-bytes
  # [grpc_server_max_send_msg_size: <int> | default = 4194304]
  grpc_server_max_send_msg_size: 104857600

common:
  instance_addr: 127.0.0.1
  path_prefix: /loki
  replication_factor: 1
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: inmemory

schema_config:
  configs:
    - from: 2020-07-01
      store: aws
      object_store: s3
      schema: v11
      index:
        prefix: loki_

storage_config:
  aws:
    s3: ${S3_ACCESS_STRING}
    bucketnames: lightdotso-loki
    dynamodb:
      dynamodb_url: ${DYNAMODB_ACCESS_STRING}

query_range:
  results_cache:
    cache:
      embedded_cache:
        enabled: true
        max_size_mb: 100

compactor:
  working_directory: /loki
  shared_store: s3
  compaction_interval: 10m
  retention_enabled: true
  retention_delete_delay: 1h
  retention_delete_worker_count: 4

ingester_client:
  remote_timeout: 30s

# From: https://grafana.com/docs/loki/latest/configure/#runtime-configuration-file
limits_config:
  # Whether the ingestion rate limit should be applied individually to each
  # distributor instance (local), or evenly shared across the cluster (global).
  # The ingestion rate strategy cannot be overridden on a per-tenant basis.
  # - local: enforces the limit on a per distributor basis. The actual effective
  # rate limit will be N times higher, where N is the number of distributor
  # replicas.
  # - global: enforces the limit globally, configuring a per-distributor local
  # rate limiter as 'ingestion_rate / N', where N is the number of distributor
  # replicas (it's automatically adjusted if the number of replicas change). The
  # global strategy requires the distributors to form their own ring, which is
  # used to keep track of the current number of healthy distributor replicas.
  # CLI flag: -distributor.ingestion-rate-limit-strategy
  # [ingestion_rate_strategy: <string> | default = "global"]

  # Per-user ingestion rate limit in sample size per second. Units in MB.
  # CLI flag: -distributor.ingestion-rate-limit-mb
  # [ingestion_rate_mb: <float> | default = 4]
  ingestion_rate_mb: 40000000

  # Per-user allowed ingestion burst size (in sample size). Units in MB. The burst
  # size refers to the per-distributor local rate limiter even in the case of the
  # 'global' strategy, and should be set at least to the maximum logs size
  # expected in a single push request.
  # CLI flag: -distributor.ingestion-burst-size-mb
  # [ingestion_burst_size_mb: <float> | default = 6]
  ingestion_burst_size_mb: 60000000

  # Maximum length accepted for label names.
  # CLI flag: -validation.max-length-label-name
  # [max_label_name_length: <int> | default = 1024]

  # Maximum length accepted for label value. This setting also applies to the
  # metric name.
  # CLI flag: -validation.max-length-label-value
  # [max_label_value_length: <int> | default = 2048]
  max_label_value_length: 40960

  # Maximum number of label names per series.
  # CLI flag: -validation.max-label-names-per-series
  # [max_label_names_per_series: <int> | default = 30]

  # Whether or not old samples will be rejected.
  # CLI flag: -validation.reject-old-samples
  # [reject_old_samples: <boolean> | default = true]

  # Maximum accepted sample age before rejecting.
  # CLI flag: -validation.reject-old-samples.max-age
  # [reject_old_samples_max_age: <duration> | default = 1w]

  # Duration which table will be created/deleted before/after it's needed; we
  # won't accept sample from before this time.
  # CLI flag: -validation.create-grace-period
  # [creation_grace_period: <duration> | default = 10m]

  # Enforce every sample has a metric name.
  # CLI flag: -validation.enforce-metric-name
  # [enforce_metric_name: <boolean> | default = true]

  # Maximum line size on ingestion path. Example: 256kb. Any log line exceeding
  # this limit will be discarded unless `distributor.max-line-size-truncate` is
  # set which in case it is truncated instead of discarding it completely. There
  # is no limit when unset or set to 0.
  # CLI flag: -distributor.max-line-size
  # [max_line_size: <int> | default = 0B]

  # Whether to truncate lines that exceed max_line_size.
  # CLI flag: -distributor.max-line-size-truncate
  # [max_line_size_truncate: <boolean> | default = false]

  # Alter the log line timestamp during ingestion when the timestamp is the same
  # as the previous entry for the same stream. When enabled, if a log line in a
  # push request has the same timestamp as the previous line for the same stream,
  # one nanosecond is added to the log line. This will preserve the received order
  # of log lines with the exact same timestamp when they are queried, by slightly
  # altering their stored timestamp. NOTE: This is imperfect, because Loki accepts
  # out of order writes, and another push request for the same stream could
  # contain duplicate timestamps to existing entries and they will not be
  # incremented.
  # CLI flag: -validation.increment-duplicate-timestamps
  # [increment_duplicate_timestamp: <boolean> | default = false]

  # Maximum number of active streams per user, per ingester. 0 to disable.
  # CLI flag: -ingester.max-streams-per-user
  # [max_streams_per_user: <int> | default = 0]

  # Maximum number of active streams per user, across the cluster. 0 to disable.
  # When the global limit is enabled, each ingester is configured with a dynamic
  # local limit based on the replication factor and the current number of healthy
  # ingesters, and is kept updated whenever the number of ingesters change.
  # CLI flag: -ingester.max-global-streams-per-user
  # [max_global_streams_per_user: <int> | default = 5000]
  max_global_streams_per_user: 0

  # Deprecated. When true, out-of-order writes are accepted.
  # CLI flag: -ingester.unordered-writes
  # [unordered_writes: <boolean> | default = true]

  # Maximum byte rate per second per stream, also expressible in human readable
  # forms (1MB, 256KB, etc).
  # CLI flag: -ingester.per-stream-rate-limit
  # [per_stream_rate_limit: <int> | default = 3MB]
  per_stream_rate_limit: 300000MB

  # Maximum burst bytes per stream, also expressible in human readable forms (1MB,
  # 256KB, etc). This is how far above the rate limit a stream can 'burst' before
  # the stream is limited.
  # CLI flag: -ingester.per-stream-rate-limit-burst
  # [per_stream_rate_limit_burst: <int> | default = 15MB]
  per_stream_rate_limit_burst: 1500000MB
# Maximum number of chunks that can be fetched in a single query.
# CLI flag: -store.query-chunk-limit
# [max_chunks_per_query: <int> | default = 2000000]

# Limit the maximum of unique series that is returned by a metric query. When
# the limit is reached an error is returned.
# CLI flag: -querier.max-query-series
# [max_query_series: <int> | default = 500]

# Limit how far back in time series data and metadata can be queried, up until
# lookback duration ago. This limit is enforced in the query frontend, the
# querier and the ruler. If the requested time range is outside the allowed
# range, the request will not fail, but will be modified to only query data
# within the allowed time range. The default value of 0 does not set a limit.
# CLI flag: -querier.max-query-lookback
# [max_query_lookback: <duration> | default = 0s]

# The limit to length of chunk store queries. 0 to disable.
# CLI flag: -store.max-query-length
# [max_query_length: <duration> | default = 30d1h]

# Limit the length of the [range] inside a range query. Default is 0 or
# unlimited
# CLI flag: -querier.max-query-range
# [max_query_range: <duration> | default = 0s]

# Maximum number of queries that will be scheduled in parallel by the frontend.
# CLI flag: -querier.max-query-parallelism
# [max_query_parallelism: <int> | default = 32]

# Maximum number of queries will be scheduled in parallel by the frontend for
# TSDB schemas.
# CLI flag: -querier.tsdb-max-query-parallelism
# [tsdb_max_query_parallelism: <int> | default = 512]

# Maximum number of bytes assigned to a single sharded query. Also expressible
# in human readable forms (1GB, etc).
# CLI flag: -querier.tsdb-max-bytes-per-shard
# [tsdb_max_bytes_per_shard: <int> | default = 600MB]

# Cardinality limit for index queries.
# CLI flag: -store.cardinality-limit
# [cardinality_limit: <int> | default = 100000]

# Maximum number of stream matchers per query.
# CLI flag: -querier.max-streams-matcher-per-query
# [max_streams_matchers_per_query: <int> | default = 1000]

# Maximum number of concurrent tail requests.
# CLI flag: -querier.max-concurrent-tail-requests
# [max_concurrent_tail_requests: <int> | default = 10]

# Maximum number of log entries that will be returned for a query.
# CLI flag: -validation.max-entries-limit
# [max_entries_limit_per_query: <int> | default = 5000]

# Most recent allowed cacheable result per-tenant, to prevent caching very
# recent results that might still be in flux.
# CLI flag: -frontend.max-cache-freshness
# [max_cache_freshness_per_query: <duration> | default = 1m]

# Do not cache requests with an end time that falls within Now minus this
# duration. 0 disables this feature (default).
# CLI flag: -frontend.max-stats-cache-freshness
# [max_stats_cache_freshness: <duration> | default = 0s]

# Maximum number of queriers that can handle requests for a single tenant. If
# set to 0 or value higher than number of available queriers, *all* queriers
# will handle requests for the tenant. Each frontend (or query-scheduler, if
# used) will select the same set of queriers for the same tenant (given that all
# queriers are connected to all frontends / query-schedulers). This option only
# works with queriers connecting to the query-frontend / query-scheduler, not
# when using downstream URL.
# CLI flag: -frontend.max-queriers-per-tenant
# [max_queriers_per_tenant: <int> | default = 0]

# Number of days of index to be kept always downloaded for queries. Applies only
# to per user index in boltdb-shipper index store. 0 to disable.
# CLI flag: -store.query-ready-index-num-days
# [query_ready_index_num_days: <int> | default = 0]

# Timeout when querying backends (ingesters or storage) during the execution of
# a query request. When a specific per-tenant timeout is used, the global
# timeout is ignored.
# CLI flag: -querier.query-timeout
# [query_timeout: <duration> | default = 1m]

# Split queries by a time interval and execute in parallel. The value 0 disables
# splitting by time. This also determines how cache keys are chosen when result
# caching is enabled.
# CLI flag: -querier.split-queries-by-interval
# [split_queries_by_interval: <duration> | default = 30m]

# Limit queries that can be sharded. Queries within the time range of now and
# now minus this sharding lookback are not sharded. The default value of 0s
# disables the lookback, causing sharding of all queries at all times.
# CLI flag: -frontend.min-sharding-lookback
# [min_sharding_lookback: <duration> | default = 0s]

# Max number of bytes a query can fetch. Enforced in log and metric queries only
# when TSDB is used. The default value of 0 disables this limit.
# CLI flag: -frontend.max-query-bytes-read
# [max_query_bytes_read: <int> | default = 0B]

# Max number of bytes a query can fetch after splitting and sharding. Enforced
# in log and metric queries only when TSDB is used. The default value of 0
# disables this limit.
# CLI flag: -frontend.max-querier-bytes-read
# [max_querier_bytes_read: <int> | default = 0B]

# Enable log-volume endpoints.
# [volume_enabled: <boolean>]

# The maximum number of aggregated series in a log-volume response
# CLI flag: -limits.volume-max-series
# [volume_max_series: <int> | default = 1000]

# Deprecated. Duration to delay the evaluation of rules to ensure the underlying
# metrics have been pushed to Cortex.
# CLI flag: -ruler.evaluation-delay-duration
# [ruler_evaluation_delay_duration: <duration> | default = 0s]

# Maximum number of rules per rule group per-tenant. 0 to disable.
# CLI flag: -ruler.max-rules-per-rule-group
# [ruler_max_rules_per_rule_group: <int> | default = 0]

# Maximum number of rule groups per-tenant. 0 to disable.
# CLI flag: -ruler.max-rule-groups-per-tenant
# [ruler_max_rule_groups_per_tenant: <int> | default = 0]

# The default tenant's shard size when shuffle-sharding is enabled in the ruler.
# When this setting is specified in the per-tenant overrides, a value of 0
# disables shuffle sharding for the tenant.
# CLI flag: -ruler.tenant-shard-size
# [ruler_tenant_shard_size: <int> | default = 0]

# Disable recording rules remote-write.
# [ruler_remote_write_disabled: <boolean>]

# Deprecated: Use 'ruler_remote_write_config' instead. The URL of the endpoint
# to send samples to.
# [ruler_remote_write_url: <string> | default = ""]

# Deprecated: Use 'ruler_remote_write_config' instead. Timeout for requests to
# the remote write endpoint.
# [ruler_remote_write_timeout: <duration>]

# Deprecated: Use 'ruler_remote_write_config' instead. Custom HTTP headers to be
# sent along with each remote write request. Be aware that headers that are set
# by Loki itself can't be overwritten.
# [ruler_remote_write_headers: <headers>]

# Deprecated: Use 'ruler_remote_write_config' instead. List of remote write
# relabel configurations.
# [ruler_remote_write_relabel_configs: <relabel_config...>]

# Deprecated: Use 'ruler_remote_write_config' instead. Number of samples to
# buffer per shard before we block reading of more samples from the WAL. It is
# recommended to have enough capacity in each shard to buffer several requests
# to keep throughput up while processing occasional slow remote requests.
# [ruler_remote_write_queue_capacity: <int>]

# Deprecated: Use 'ruler_remote_write_config' instead. Minimum number of shards,
# i.e. amount of concurrency.
# [ruler_remote_write_queue_min_shards: <int>]

# Deprecated: Use 'ruler_remote_write_config' instead. Maximum number of shards,
# i.e. amount of concurrency.
# [ruler_remote_write_queue_max_shards: <int>]

# Deprecated: Use 'ruler_remote_write_config' instead. Maximum number of samples
# per send.
# [ruler_remote_write_queue_max_samples_per_send: <int>]

# Deprecated: Use 'ruler_remote_write_config' instead. Maximum time a sample
# will wait in buffer.
# [ruler_remote_write_queue_batch_send_deadline: <duration>]

# Deprecated: Use 'ruler_remote_write_config' instead. Initial retry delay. Gets
# doubled for every retry.
# [ruler_remote_write_queue_min_backoff: <duration>]

# Deprecated: Use 'ruler_remote_write_config' instead. Maximum retry delay.
# [ruler_remote_write_queue_max_backoff: <duration>]

# Deprecated: Use 'ruler_remote_write_config' instead. Retry upon receiving a
# 429 status code from the remote-write storage. This is experimental and might
# change in the future.
# [ruler_remote_write_queue_retry_on_ratelimit: <boolean>]

# Deprecated: Use 'ruler_remote_write_config' instead. Configures AWS's
# Signature Verification 4 signing process to sign every remote write request.
# ruler_remote_write_sigv4_config:
#   [region: <string> | default = ""]

#   [access_key: <string> | default = ""]

#   [secret_key: <string> | default = ""]

#   [profile: <string> | default = ""]

#   [role_arn: <string> | default = ""]

# Configures global and per-tenant limits for remote write clients. A map with
# remote client id as key.
# [ruler_remote_write_config: <map of string to RemoteWriteConfig>]

# Timeout for a remote rule evaluation. Defaults to the value of
# 'querier.query-timeout'.
# [ruler_remote_evaluation_timeout: <duration>]

# Maximum size (in bytes) of the allowable response size from a remote rule
# evaluation. Set to 0 to allow any response size (default).
# [ruler_remote_evaluation_max_response_size: <int>]

# Deletion mode. Can be one of 'disabled', 'filter-only', or
# 'filter-and-delete'. When set to 'filter-only' or 'filter-and-delete', and if
# retention_enabled is true, then the log entry deletion API endpoints are
# available.
# CLI flag: -compactor.deletion-mode
# [deletion_mode: <string> | default = "filter-and-delete"]

# Retention period to apply to stored data, only applies if retention_enabled is
# true in the compactor config. As of version 2.8.0, a zero value of 0 or 0s
# disables retention. In previous releases, Loki did not properly honor a zero
# value to disable retention and a really large value should be used instead.
# CLI flag: -store.retention
# [retention_period: <duration> | default = 0s]

# Per-stream retention to apply, if the retention is enable on the compactor
# side.
# Example:
#  retention_stream:
#  - selector: '{namespace="dev"}'
#  priority: 1
#  period: 24h
# - selector: '{container="nginx"}'
#  priority: 1
#  period: 744h
# Selector is a Prometheus labels matchers that will apply the 'period'
# retention only if the stream is matching. In case multiple stream are
# matching, the highest priority will be picked. If no rule is matched the
# 'retention_period' is used.
# [retention_stream: <list of StreamRetentions>]

# Feature renamed to 'runtime configuration', flag deprecated in favor of
# -runtime-config.file (runtime_config.file in YAML).
# CLI flag: -limits.per-user-override-config
# [per_tenant_override_config: <string> | default = ""]

# Feature renamed to 'runtime configuration'; flag deprecated in favor of
# -runtime-config.reload-period (runtime_config.period in YAML).
# CLI flag: -limits.per-user-override-period
# [per_tenant_override_period: <duration> | default = 10s]

# Deprecated: Use deletion_mode per tenant configuration instead.
# [allow_deletes: <boolean>]

# shard_streams:
#   [enabled: <boolean>]

#   [logging_enabled: <boolean>]

#   [desired_rate: <int>]

# [blocked_queries: <blocked_query...>]

# Define a list of required selector labels.
# [required_labels: <list of strings>]

# Minimum number of label matchers a query should contain.
# [minimum_labels_number: <int>]

# The shard size defines how many index gateways should be used by a tenant for
# querying. If the global shard factor is 0, the global shard factor is set to
# the deprecated -replication-factor for backwards compatibility reasons.
# CLI flag: -index-gateway.shard-size
# [index_gateway_shard_size: <int> | default = 0]

# Allow user to send structured metadata (non-indexed labels) in push payload.
# CLI flag: -validation.allow-structured-metadata
# [allow_structured_metadata: <boolean> | default = false]
