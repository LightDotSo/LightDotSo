{
  "abi": [
    {
      "type": "function",
      "name": "NAME",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "callOperationRoot",
      "inputs": [
        {
          "name": "operationRoot",
          "type": "tuple",
          "internalType": "struct LightDAG.OperationRoot",
          "components": [
            { "name": "root", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "operations",
              "type": "tuple[]",
              "internalType": "struct LightDAG.Operation[]",
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32",
                  "internalType": "bytes32"
                },
                {
                  "name": "conditionData",
                  "type": "bytes[]",
                  "internalType": "bytes[]"
                },
                {
                  "name": "dependencies",
                  "type": "bytes32[]",
                  "internalType": "bytes32[]"
                },
                {
                  "name": "fallbackOperation",
                  "type": "bytes32",
                  "internalType": "bytes32"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "OperationCalled",
      "inputs": [
        {
          "name": "operation",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "conditionData",
          "type": "bytes[]",
          "indexed": false,
          "internalType": "bytes[]"
        },
        {
          "name": "dependencies",
          "type": "bytes32[]",
          "indexed": false,
          "internalType": "bytes32[]"
        },
        {
          "name": "fallbackOperation",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperationRootCalled",
      "inputs": [
        {
          "name": "root",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600e575f5ffd5b506107e08061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806376a9140814610043578063a3f4df7e14610058578063ffa1ad74146100aa575b5f5ffd5b6100566100513660046103eb565b6100e6565b005b6100946040518060400160405280600881526020017f4c6967687444414700000000000000000000000000000000000000000000000081525081565b6040516100a191906106c6565b60405180910390f35b6100946040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b8051610178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4c696768744441473a204f7065726174696f6e20726f6f7420697320656d707460448201527f7900000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b80516040513391907ff95dd2a06a22e482ba3fe223c3feffb28e2e77786e4908143fb6c04f70595404905f90a35f5b816020015151811015610292573373ffffffffffffffffffffffffffffffffffffffff16826020015182815181106101e1576101e16106df565b60200260200101515f01517f374a0b1be17c1252cdb48db98472ffe0646a4557067d3b6a29ff740c380497c584602001518481518110610223576102236106df565b60200260200101516020015185602001518581518110610245576102456106df565b60200260200101516040015186602001518681518110610267576102676106df565b6020026020010151606001516040516102829392919061070c565b60405180910390a36001016101a7565b5050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156102e6576102e6610296565b60405290565b6040516080810167ffffffffffffffff811182821017156102e6576102e6610296565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561035657610356610296565b604052919050565b5f67ffffffffffffffff82111561037757610377610296565b5060051b60200190565b5f82601f830112610390575f5ffd5b81356103a361039e8261035e565b61030f565b8082825260208201915060208360051b8601019250858311156103c4575f5ffd5b602085015b838110156103e15780358352602092830192016103c9565b5095945050505050565b5f602082840312156103fb575f5ffd5b67ffffffffffffffff82351115610410575f5ffd5b8135820160408185031215610423575f5ffd5b61042b6102c3565b8135815267ffffffffffffffff60208301351115610447575f5ffd5b60208201358201915084601f83011261045e575f5ffd5b61046b61039e833561035e565b82358082526020808301929160051b850101871015610488575f5ffd5b602084015b6020853560051b86010181101561066b5767ffffffffffffffff813511156104b3575f5ffd5b8035850160807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828b030112156104e8575f5ffd5b6104f06102ec565b6020820135815267ffffffffffffffff6040830135111561050f575f5ffd5b602060408301358301018a601f820112610527575f5ffd5b61053461039e823561035e565b81358082526020808301929160051b8401018d1015610551575f5ffd5b602083015b6020843560051b8501018110156106195767ffffffffffffffff8135111561057c575f5ffd5b8d603f82358601011261058d575f5ffd5b602081358501013567ffffffffffffffff8111156105ad576105ad610296565b6105de60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161030f565b8181528f6020808486358a0101010111156105f7575f5ffd5b816040843588010160208301375f602092820183015284529283019201610556565b506020840152505067ffffffffffffffff60608301351115610639575f5ffd5b61064c8a60206060850135850101610381565b604082015260809190910135606082015283526020928301920161048d565b50602083015250949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f6106d8602083018461067a565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f606082016060835280865180835260808501915060808160051b8601019250602088015f5b82811015610781577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087860301845261076c85835161067a565b94506020938401939190910190600101610732565b5050505082810360208401528085518083526020830191506020870192505f5b818110156107bf5783518352602093840193909201916001016107a1565b50506040939093019390935250939250505056fea164736f6c634300081b000a",
    "sourceMap": "1032:2777:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806376a9140814610043578063a3f4df7e14610058578063ffa1ad74146100aa575b5f5ffd5b6100566100513660046103eb565b6100e6565b005b6100946040518060400160405280600881526020017f4c6967687444414700000000000000000000000000000000000000000000000081525081565b6040516100a191906106c6565b60405180910390f35b6100946040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b8051610178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4c696768744441473a204f7065726174696f6e20726f6f7420697320656d707460448201527f7900000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b80516040513391907ff95dd2a06a22e482ba3fe223c3feffb28e2e77786e4908143fb6c04f70595404905f90a35f5b816020015151811015610292573373ffffffffffffffffffffffffffffffffffffffff16826020015182815181106101e1576101e16106df565b60200260200101515f01517f374a0b1be17c1252cdb48db98472ffe0646a4557067d3b6a29ff740c380497c584602001518481518110610223576102236106df565b60200260200101516020015185602001518581518110610245576102456106df565b60200260200101516040015186602001518681518110610267576102676106df565b6020026020010151606001516040516102829392919061070c565b60405180910390a36001016101a7565b5050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156102e6576102e6610296565b60405290565b6040516080810167ffffffffffffffff811182821017156102e6576102e6610296565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561035657610356610296565b604052919050565b5f67ffffffffffffffff82111561037757610377610296565b5060051b60200190565b5f82601f830112610390575f5ffd5b81356103a361039e8261035e565b61030f565b8082825260208201915060208360051b8601019250858311156103c4575f5ffd5b602085015b838110156103e15780358352602092830192016103c9565b5095945050505050565b5f602082840312156103fb575f5ffd5b67ffffffffffffffff82351115610410575f5ffd5b8135820160408185031215610423575f5ffd5b61042b6102c3565b8135815267ffffffffffffffff60208301351115610447575f5ffd5b60208201358201915084601f83011261045e575f5ffd5b61046b61039e833561035e565b82358082526020808301929160051b850101871015610488575f5ffd5b602084015b6020853560051b86010181101561066b5767ffffffffffffffff813511156104b3575f5ffd5b8035850160807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828b030112156104e8575f5ffd5b6104f06102ec565b6020820135815267ffffffffffffffff6040830135111561050f575f5ffd5b602060408301358301018a601f820112610527575f5ffd5b61053461039e823561035e565b81358082526020808301929160051b8401018d1015610551575f5ffd5b602083015b6020843560051b8501018110156106195767ffffffffffffffff8135111561057c575f5ffd5b8d603f82358601011261058d575f5ffd5b602081358501013567ffffffffffffffff8111156105ad576105ad610296565b6105de60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161030f565b8181528f6020808486358a0101010111156105f7575f5ffd5b816040843588010160208301375f602092820183015284529283019201610556565b506020840152505067ffffffffffffffff60608301351115610639575f5ffd5b61064c8a60206060850135850101610381565b604082015260809190910135606082015283526020928301920161048d565b50602083015250949350505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f6106d8602083018461067a565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f606082016060835280865180835260808501915060808160051b8601019250602088015f5b82811015610781577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087860301845261076c85835161067a565b94506020938401939190910190600101610732565b5050505082810360208401528085518083526020830191506020870192505f5b818110156107bf5783518352602093840193909201916001016107a1565b50506040939093019390935250939250505056fea164736f6c634300081b000a",
    "sourceMap": "1032:2777:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3066:741;;;;;;:::i;:::-;;:::i;:::-;;2747:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2840;;;;;;;;;;;;;;;;;;;;;3066:741;3202:18;;3194:78;;;;;;;6412:2:2;3194:78:0;;;6394:21:2;6451:2;6431:18;;;6424:30;6490:34;6470:18;;;6463:62;6561:3;6541:18;;;6534:31;6582:19;;3194:78:0;;;;;;;;3349:18;;3329:51;;3369:10;;3349:18;3329:51;;3349:18;;3329:51;3427:9;3422:379;3446:13;:24;;;:31;3442:1;:35;3422:379;;;3586:10;3503:287;;3536:13;:24;;;3561:1;3536:27;;;;;;;;:::i;:::-;;;;;;;:32;;;3503:287;3614:13;:24;;;3639:1;3614:27;;;;;;;;:::i;:::-;;;;;;;:41;;;3673:13;:24;;;3698:1;3673:27;;;;;;;;:::i;:::-;;;;;;;:40;;;3731:13;:24;;;3756:1;3731:27;;;;;;;;:::i;:::-;;;;;;;:45;;;3503:287;;;;;;;;:::i;:::-;;;;;;;;3479:3;;3422:379;;;;3066:741;:::o;14:184:2:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:257;275:4;269:11;;;307:17;;354:18;339:34;;375:22;;;336:62;333:88;;;401:18;;:::i;:::-;437:4;430:24;203:257;:::o;465:253::-;537:2;531:9;579:4;567:17;;614:18;599:34;;635:22;;;596:62;593:88;;;661:18;;:::i;723:334::-;794:2;788:9;850:2;840:13;;855:66;836:86;824:99;;953:18;938:34;;974:22;;;935:62;932:88;;;1000:18;;:::i;:::-;1036:2;1029:22;723:334;;-1:-1:-1;723:334:2:o;1062:192::-;1131:4;1164:18;1156:6;1153:30;1150:56;;;1186:18;;:::i;:::-;-1:-1:-1;1231:1:2;1227:14;1243:4;1223:25;;1062:192::o;1259:732::-;1313:5;1366:3;1359:4;1351:6;1347:17;1343:27;1333:55;;1384:1;1381;1374:12;1333:55;1424:6;1411:20;1451:73;1467:56;1516:6;1467:56;:::i;:::-;1451:73;:::i;:::-;1548:3;1572:6;1567:3;1560:19;1604:4;1599:3;1595:14;1588:21;;1665:4;1655:6;1652:1;1648:14;1640:6;1636:27;1632:38;1618:52;;1693:3;1685:6;1682:15;1679:35;;;1710:1;1707;1700:12;1679:35;1746:4;1738:6;1734:17;1760:200;1776:6;1771:3;1768:15;1760:200;;;1868:17;;1898:18;;1945:4;1936:14;;;;1793;1760:200;;;-1:-1:-1;1978:7:2;1259:732;-1:-1:-1;;;;;1259:732:2:o;1996:3631::-;2084:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:52;;;2153:1;2150;2143:12;2105:52;2197:18;2185:9;2172:23;2169:47;2166:67;;;2229:1;2226;2219:12;2166:67;2280:9;2267:23;2256:9;2252:39;2325:4;2320:2;2311:7;2307:16;2303:27;2300:47;;;2343:1;2340;2333:12;2300:47;2369:22;;:::i;:::-;2436:16;;2461:22;;2525:18;2519:2;2511:11;;2498:25;2495:49;2492:69;;;2557:1;2554;2547:12;2492:69;2609:2;2605;2601:11;2588:25;2584:2;2580:34;2570:44;;2652:7;2645:4;2641:2;2637:13;2633:27;2623:55;;2674:1;2671;2664:12;2623:55;2698:83;2714:66;2776:2;2763:16;2714:66;:::i;2698:83::-;2827:16;;2815:29;;;2869:2;2860:12;;;;2803:3;2903:1;2899:24;2891:33;;2887:42;2884:55;-1:-1:-1;2881:75:2;;;2952:1;2949;2942:12;2881:75;2984:2;2980;2976:11;2996:2563;3059:2;3052;3039:16;3036:1;3032:24;3028:2;3024:33;3020:42;3015:3;3012:51;2996:2563;;;3143:18;3137:3;3124:17;3121:41;3118:61;;;3175:1;3172;3165:12;3118:61;3223:3;3210:17;3206:2;3202:26;3339:4;3270:66;3265:2;3256:7;3252:16;3248:89;3244:100;3241:120;;;3357:1;3354;3347:12;3241:120;3389:22;;:::i;:::-;3485:2;3477:11;;3464:25;3502:24;;3574:18;3566:4;3558:13;;3545:27;3542:51;3539:71;;;3606:1;3603;3596:12;3539:71;3675:2;3666:4;3662:2;3658:13;3645:27;3641:2;3637:36;3633:45;3720:7;3713:4;3709:2;3705:13;3701:27;3691:55;;3742:1;3739;3732:12;3691:55;3772:83;3788:66;3850:2;3837:16;3788:66;:::i;3772:83::-;3915:16;;3901:31;;;3965:2;3954:14;;;;3883:5;4003:1;3999:24;3991:33;;3987:42;3984:55;-1:-1:-1;3981:75:2;;;4052:1;4049;4042:12;3981:75;4090:2;4086;4082:11;4106:1001;4175:2;4168;4155:16;4152:1;4148:24;4144:2;4140:33;4136:42;4129:5;4126:53;4106:1001;;;4277:18;4269:5;4256:19;4253:43;4250:63;;;4309:1;4306;4299:12;4250:63;4383:7;4378:2;4369:5;4356:19;4352:2;4348:28;4344:37;4340:51;4330:79;;4405:1;4402;4395:12;4330:79;4487:2;4478:5;4465:19;4461:2;4457:28;4453:37;4440:51;4522:18;4514:6;4511:30;4508:56;;;4544:18;;:::i;:::-;4596:116;4708:2;4639:66;4632:4;4624:6;4620:17;4616:90;4612:99;4596:116;:::i;:::-;4745:6;4736:7;4729:23;4836:7;4831:2;4826;4817:6;4808:5;4795:19;4791:2;4787:28;4783:41;4779:50;4775:59;4772:72;4769:92;;;4857:1;4854;4847:12;4769:92;4950:6;4943:4;4934:5;4921:19;4917:2;4913:28;4909:39;4904:2;4895:7;4891:16;4878:79;5012:1;5007:2;4985:20;;;4981:29;;4974:40;5031:22;;5079:14;;;;4203;4106:1001;;;-1:-1:-1;5140:2:2;5127:16;;5120:33;-1:-1:-1;;5199:18:2;5193:2;5185:11;;5172:25;5169:49;5166:69;;;5231:1;5228;5221:12;5166:69;5275:82;5349:7;5344:2;5337;5333;5329:11;5316:25;5312:2;5308:34;5304:43;5275:82;:::i;:::-;5268:4;5255:18;;5248:110;5432:4;5424:13;;;;5411:27;5471:2;5458:16;;5451:33;5497:20;;5546:2;5537:12;;;;3081;2996:2563;;;-1:-1:-1;5586:2:2;5575:14;;5568:29;-1:-1:-1;5579:5:2;1996:3631;-1:-1:-1;;;;1996:3631:2:o;5632:348::-;5674:3;5712:5;5706:12;5739:6;5734:3;5727:19;5795:6;5788:4;5781:5;5777:16;5770:4;5765:3;5761:14;5755:47;5847:1;5840:4;5831:6;5826:3;5822:16;5818:27;5811:38;5969:4;5899:66;5894:2;5886:6;5882:15;5878:88;5873:3;5869:98;5865:109;5858:116;;;5632:348;;;;:::o;5985:220::-;6134:2;6123:9;6116:21;6097:4;6154:45;6195:2;6184:9;6180:18;6172:6;6154:45;:::i;:::-;6146:53;5985:220;-1:-1:-1;;;5985:220:2:o;6612:184::-;6664:77;6661:1;6654:88;6761:4;6758:1;6751:15;6785:4;6782:1;6775:15;6801:1455;7067:4;7115:2;7104:9;7100:18;7145:2;7134:9;7127:21;7168:6;7203;7197:13;7234:6;7226;7219:22;7272:3;7261:9;7257:19;7250:26;;7335:3;7325:6;7322:1;7318:14;7307:9;7303:30;7299:40;7285:54;;7374:4;7366:6;7362:17;7397:1;7407:318;7421:6;7418:1;7415:13;7407:318;;;7510:66;7498:9;7490:6;7486:22;7482:95;7477:3;7470:108;7601:40;7634:6;7625;7619:13;7601:40;:::i;:::-;7591:50;-1:-1:-1;7676:4:2;7701:14;;;;7664:17;;;;;7443:1;7436:9;7407:318;;;7411:3;;;;7775:9;7767:6;7763:22;7756:4;7745:9;7741:20;7734:52;7808:6;7845;7839:13;7876:8;7868:6;7861:24;7915:4;7907:6;7903:17;7894:26;;7957:4;7949:6;7945:17;7929:33;;7982:1;7992:193;8008:8;8003:3;8000:17;7992:193;;;8077:15;;8063:30;;8126:4;8156:19;;;;8115:16;;;;8036:1;8027:11;7992:193;;;-1:-1:-1;;8238:2:2;8223:18;;;;8216:34;;;;-1:-1:-1;8202:5:2;6801:1455;-1:-1:-1;;;6801:1455:2:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "VERSION()": "ffa1ad74",
    "callOperationRoot((bytes32,(bytes32,bytes[],bytes32[],bytes32)[]))": "76a91408"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operation\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"conditionData\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"dependencies\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fallbackOperation\",\"type\":\"bytes32\"}],\"name\":\"OperationCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperationRootCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"conditionData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dependencies\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"fallbackOperation\",\"type\":\"bytes32\"}],\"internalType\":\"struct LightDAG.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LightDAG.OperationRoot\",\"name\":\"operationRoot\",\"type\":\"tuple\"}],\"name\":\"callOperationRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@shunkakinoki\",\"details\":\"The contract is the initial implementation of a Directed Acyclic Graph (DAG) for Light Protocol.Further implementations will be added in the future, and may be subject to change.\",\"events\":{\"OperationCalled(bytes32,address,bytes[],bytes32[],bytes32)\":{\"params\":{\"caller\":\"The address that called the operation\",\"conditionData\":\"The condition data for the operation\",\"dependencies\":\"The dependencies for the operation\",\"fallbackOperation\":\"The fallback operation for the operation\",\"operation\":\"The operation\"}},\"OperationRootCalled(bytes32,address)\":{\"params\":{\"caller\":\"The address that called the operation root\",\"root\":\"The root of the operation\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"LightDAG\",\"version\":1},\"userdoc\":{\"events\":{\"OperationCalled(bytes32,address,bytes[],bytes32[],bytes32)\":{\"notice\":\"Emitted when an operation is called\"},\"OperationRootCalled(bytes32,address)\":{\"notice\":\"Emitted when an operation root is called\"}},\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"The name for this contract\"},\"VERSION()\":{\"notice\":\"The version for this contract\"}},\"notice\":\"LightDAG is an implementation contract for Light Protocol. This is the version 0.1.0 contract for Light Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/LightDAG.sol\":\"LightDAG\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@/bytecodes/=contracts/bytecodes/\",\":@/circuits/=contracts/circuits/\",\":@/constants/=contracts/constants/\",\":@/contracts/=contracts/src/\",\":@/script/=contracts/script/\",\":@/test/=contracts/test/\",\":@0xsequence/wallet-contracts/=lib/wallet-contracts/\",\":@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/\",\":@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/\",\":@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":@asynchronous-vault/=lib/asynchronous-vault/src/\",\":@biconomy/account-contracts/=lib/scw-contracts/\",\":@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/\",\":@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/\",\":@eth-infinitism/account-abstraction/=lib/account-abstraction/\",\":@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/\",\":@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/\",\":@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/\",\":@safe-global/safe-contracts/=lib/safe-contracts/\",\":@source/=lib/soul-wallet-contract/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@zerodevapp/contracts/=lib/kernel/src/\",\":account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/\",\":account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":asynchronous-vault/=lib/asynchronous-vault/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":magic-spend/=lib/magic-spend/src/\",\":murky/=lib/murky/src/\",\":nexus/=lib/nexus/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":seaport/=lib/seaport/\",\":singleton-paymaster/=lib/singleton-paymaster/src/\",\":solady/=lib/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solmate/=lib/solmate/src/\",\":src/=lib/kernel/src/\",\":surl/=lib/surl/src/\"]},\"sources\":{\"contracts/src/LightDAG.sol\":{\"keccak256\":\"0xdb9a3e17a7f0ba91ca7637c0e2f8760df4e8889df6d56e82ac11dd6b96ea6736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1b21167689bd83f7f15b48764eb6f1d1e5bfd14ba4e176f4d83f521c2f665c8b\",\"dweb:/ipfs/QmV1K8CoJ6QZsQseewXr3pF6Fhb4WMigiy51W115owAKsL\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "operation",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes[]",
              "name": "conditionData",
              "type": "bytes[]",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "dependencies",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "fallbackOperation",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperationCalled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperationRootCalled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LightDAG.OperationRoot",
              "name": "operationRoot",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct LightDAG.Operation[]",
                  "name": "operations",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes[]",
                      "name": "conditionData",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "dependencies",
                      "type": "bytes32[]"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "fallbackOperation",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "callOperationRoot"
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NAME()": { "notice": "The name for this contract" },
          "VERSION()": { "notice": "The version for this contract" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@/bytecodes/=contracts/bytecodes/",
        "@/circuits/=contracts/circuits/",
        "@/constants/=contracts/constants/",
        "@/contracts/=contracts/src/",
        "@/script/=contracts/script/",
        "@/test/=contracts/test/",
        "@0xsequence/wallet-contracts/=lib/wallet-contracts/",
        "@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/",
        "@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/",
        "@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/",
        "@account-abstraction/=lib/account-abstraction/contracts/",
        "@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "@asynchronous-vault/=lib/asynchronous-vault/src/",
        "@biconomy/account-contracts/=lib/scw-contracts/",
        "@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/",
        "@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/",
        "@eth-infinitism/account-abstraction/=lib/account-abstraction/",
        "@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/",
        "@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/",
        "@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/",
        "@safe-global/safe-contracts/=lib/safe-contracts/",
        "@source/=lib/soul-wallet-contract/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "@zerodevapp/contracts/=lib/kernel/src/",
        "account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/",
        "account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "asynchronous-vault/=lib/asynchronous-vault/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "magic-spend/=lib/magic-spend/src/",
        "murky/=lib/murky/src/",
        "nexus/=lib/nexus/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "seaport/=lib/seaport/",
        "singleton-paymaster/=lib/singleton-paymaster/src/",
        "solady/=lib/solady/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/kernel/src/",
        "surl/=lib/surl/src/"
      ],
      "optimizer": { "enabled": true, "runs": 4294967295 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "contracts/src/LightDAG.sol": "LightDAG" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "contracts/src/LightDAG.sol": {
        "keccak256": "0xdb9a3e17a7f0ba91ca7637c0e2f8760df4e8889df6d56e82ac11dd6b96ea6736",
        "urls": [
          "bzz-raw://1b21167689bd83f7f15b48764eb6f1d1e5bfd14ba4e176f4d83f521c2f665c8b",
          "dweb:/ipfs/QmV1K8CoJ6QZsQseewXr3pF6Fhb4WMigiy51W115owAKsL"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "id": 0
}
