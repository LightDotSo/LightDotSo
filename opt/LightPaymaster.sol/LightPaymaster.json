{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "NAME",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "acceptOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addSigner",
      "inputs": [
        { "name": "signer_", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "entryPoint",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "entryPointAddStake",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "unstakeDelaySeconds",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "entryPointDeposit",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "entryPointUnlockStake",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "entryPointWithdraw",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address payable" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "entryPointWithdrawStake",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address payable" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getHash",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" },
        {
          "name": "maxWithdrawDenominator_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "signer_", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isValidWithdrawSignature",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxWithdrawDenominator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nonceUsed",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerWithdraw",
      "inputs": [
        { "name": "asset", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pendingOwner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "postOp",
      "inputs": [
        {
          "name": "mode",
          "type": "uint8",
          "internalType": "enum IPaymaster.PostOpMode"
        },
        { "name": "context", "type": "bytes", "internalType": "bytes" },
        {
          "name": "actualGasCost",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeSigner",
      "inputs": [
        { "name": "signer_", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxWithdrawDenominator",
      "inputs": [
        {
          "name": "newDenominator",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "signers",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isValidSigner", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validatePaymasterUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "maxCost", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "context", "type": "bytes", "internalType": "bytes" },
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawGasExcess",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MagicSpendWithdrawal",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "asset",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxWithdrawDenominatorSet",
      "inputs": [
        {
          "name": "newDenominator",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferStarted",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SignerAdded",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SignerRemoved",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "Expired", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidNonce",
      "inputs": [
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "NoExcess", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "RequestLessThanGasMaxCost",
      "inputs": [
        { "name": "requested", "type": "uint256", "internalType": "uint256" },
        { "name": "maxCost", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    { "type": "error", "name": "Unauthorized", "inputs": [] },
    { "type": "error", "name": "UnexpectedPostOpRevertedMode", "inputs": [] },
    {
      "type": "error",
      "name": "UnsupportedPaymasterAsset",
      "inputs": [
        { "name": "asset", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "WithdrawTooLarge",
      "inputs": [
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "maxAllowed", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161254d6100fd600039600081816114c2015281816114eb01526118b6015261254d6000f3fe6080604052600436106101d15760003560e01c80637c8d4949116100f7578063c350a1b511610095578063ebdbc67811610064578063ebdbc6781461059b578063edceadb6146105bb578063f2fde38b146105db578063ffa1ad74146105fb57600080fd5b8063c350a1b514610526578063d833caee14610546578063e30c397814610566578063eb12d61e1461057b57600080fd5b8063a3f4df7e116100d1578063a3f4df7e1461044f578063ad3cb1cc146104a5578063b0d691fe146104ee578063b175512b1461051157600080fd5b80637c8d4949146103e257806388202489146103f55780638da5cb5b1461041557600080fd5b80634f1ef2861161016f578063715018a61161013e578063715018a614610368578063736c0d5b1461037d57806379ba5097146103ad5780637c627b21146103c257600080fd5b80634f1ef286146102ff57806352b7512c1461031257806352d1902d146103405780635b34b2721461035557600080fd5b80631647795e116101ab5780631647795e146102495780632bcaa0e21461029b57806334b5a077146102bb5780634d2b3f06146102e957600080fd5b8063056819be146101dd5780630acf2ac8146102125780630e316ab71461022957600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101fd6101f836600461200c565b610644565b60405190151581526020015b60405180910390f35b34801561021e57600080fd5b50610227610696565b005b34801561023557600080fd5b5061022761024436600461205c565b6106ff565b34801561025557600080fd5b506101fd610264366004612079565b600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205460ff1690565b3480156102a757600080fd5b506102276102b63660046120a5565b61078a565b3480156102c757600080fd5b506102db6102d636600461200c565b6107a2565b604051908152602001610209565b3480156102f557600080fd5b506102db60005481565b61022761030d3660046120e6565b610836565b34801561031e57600080fd5b5061033261032d36600461212c565b610855565b6040516102099291906121ee565b34801561034c57600080fd5b506102db610aa8565b610227610363366004612210565b610ad7565b34801561037457600080fd5b50610227610b7d565b34801561038957600080fd5b506101fd61039836600461205c565b60036020526000908152604090205460ff1681565b3480156103b957600080fd5b50610227610b91565b3480156103ce57600080fd5b506102276103dd366004612249565b610c09565b6102276103f03660046122e6565b610d32565b34801561040157600080fd5b50610227610410366004612079565b610d54565b34801561042157600080fd5b5061042a610dfb565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610209565b34801561045b57600080fd5b506104986040518060400160405280600e81526020017f4c696768745061796d617374657200000000000000000000000000000000000081525081565b60405161020991906122ff565b3480156104b157600080fd5b506104986040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156104fa57600080fd5b506f71727de22e5e9d8baf0edac6f37da03261042a565b34801561051d57600080fd5b50610227610e3d565b34801561053257600080fd5b50610227610541366004612312565b610eb7565b34801561055257600080fd5b50610227610561366004612354565b611052565b34801561057257600080fd5b5061042a6110f5565b34801561058757600080fd5b5061022761059636600461205c565b61111e565b3480156105a757600080fd5b506102276105b63660046122e6565b6111a5565b3480156105c757600080fd5b506102276105d636600461205c565b6111b6565b3480156105e757600080fd5b506102276105f636600461205c565b611255565b34801561060757600080fd5b506104986040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b60008061065184846107a2565b9050600061066382856000015161130c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff16925050505b92915050565b33600090815260016020526040812054908190036106e0576040517f6c163b7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181526001602052604081208190556106fc91836113b6565b50565b6107076113e6565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b91015b60405180910390a150565b6107926113e6565b61079d8383836113b6565b505050565b6020808201516040808401516060808601516080808801518551309881019890985273ffffffffffffffffffffffffffffffffffffffff808b16968901969096524693880193909352939094169285019290925260a084015260c083019190915265ffffffffffff1660e082015260009061082f906101000160405160208183030381529060405261143e565b9392505050565b61083e6114aa565b610847826115ae565b61085182826115b6565b5050565b60606000336f71727de22e5e9d8baf0edac6f37da032146108a2576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108b160e0870187612391565b6108bf9160149082906123fd565b8101906108cc9190612354565b60408101519091508481101561091d576040517f7582f47200000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b602082015173ffffffffffffffffffffffffffffffffffffffff161561098d5760208201516040517f140e116500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610914565b6109a361099d602089018961205c565b836116ef565b60006109bb6109b560208a018a61205c565b84610644565b15905060a0836080015165ffffffffffff16901b816109db5760006109de565b60015b60ff161793506109ee8683612456565b600160006109ff60208c018c61205c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a489190612469565b90915550869050610a5c60208a018a61205c565b604051602001610a8c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b6040516020818303038152906040529450505050935093915050565b6000610ab261189e565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610adf6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015273ffffffffffffffffffffffffffffffffffffffff9190911690630396cb609084906024016000604051808303818588803b158015610b6057600080fd5b505af1158015610b74573d6000803e3d6000fd5b50505050505050565b610b856113e6565b610b8f600061190d565b565b3380610b9b6110f5565b73ffffffffffffffffffffffffffffffffffffffff1614610c00576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610914565b6106fc8161190d565b336f71727de22e5e9d8baf0edac6f37da03214610c52576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002856002811115610c6657610c6661247c565b03610c9d576040517fef88ac6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610cac858701876124ab565b90925090506000610cbd8584612456565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054610ced9190612469565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081205590508015610d2857610d2882826108fc61195d565b5050505050505050565b610d3a6113e6565b6106fc6f71727de22e5e9d8baf0edac6f37da0328261199d565b610d5c6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505050505050565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b5473ffffffffffffffffffffffffffffffffffffffff1692915050565b610e456113e6565b6f71727de22e5e9d8baf0edac6f37da03273ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e9d57600080fd5b505af1158015610eb1573d6000803e3d6000fd5b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610f025750825b905060008267ffffffffffffffff166001148015610f1f5750303b155b905081158015610f2d575080155b15610f64576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610fc55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610fcd6119b9565b610fd6886119c1565b610fdf87611a19565b610fe88661111e565b8315610d285784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050565b806080015165ffffffffffff16421115611098576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110a23382610644565b6110d8576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110e233826116ef565b6106fc81602001513383604001516113b6565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610e20565b6111266113e6565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24910161077f565b6111ad6113e6565b6106fc81611a19565b6111be6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152919091169063c23a5cea90602401600060405180830381600087803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b5050505050565b61125d6113e6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811782556112c6610dfb565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051600190836000526020830151604052604083510361136157604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052611387565b604183510361138257606083015160001a6020526040830151606052611387565b600091505b6020600160806000855afa5191503d6113a857638baa579f6000526004601cfd5b600060605260405292915050565b73ffffffffffffffffffffffffffffffffffffffff83166113db5761079d828261199d565b61079d838383611a4e565b336113ef610dfb565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610914565b6000815160207f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008052815b600182039150600a81066030018253600a90048061146d5750603a03602081113d3d3e805160005117845281810160209190910384012092525090565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061157757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661155e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610b8f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106fc6113e6565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561163b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611638918101906124d0565b60015b611689576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610914565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146116e5576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610914565b61079d8383611a9d565b6060810151600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16156117665780606001516040517fb1373a6c00000000000000000000000000000000000000000000000000000000815260040161091491815260200190565b6000805461177490476124e9565b602083015190915073ffffffffffffffffffffffffffffffffffffffff161580156117a25750808260400151115b156117ea578160400151816040517f4c362064000000000000000000000000000000000000000000000000000000008152600401610914929190918252602082015260400190565b606082018051600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8089168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905591860151818701519451915193169391927f8e7cffd3059dabab9850e8d5537f8a291f7c5ed69254d02609751c9afdaaeb1d9261189192908252602082015260400190565b60405180910390a3505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b8f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815561085182611b00565b814710156119735763b12d13eb6000526004601cfd5b600038600038858786f161079d57826000526073600b5360ff6020536016600b83f061079d573838fd5b60003860003884865af16108515763b12d13eb6000526004601cfd5b610b8f611b96565b6119c9611b96565b73ffffffffffffffffffffffffffffffffffffffff8116610c00576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610914565b60008190556040518181527f8e50f7d01ef1d2915d3115fc0152c6a85cb0c84de7e57611c0b0f8063bb858e19060200161077f565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611a93576390b8ec186000526004601cfd5b6000603452505050565b611aa682611bfd565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611af85761079d8282611ccc565b610851611d4f565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610b8f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b600003611c66576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610914565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611cf69190612524565b600060405180830381855af49150503d8060008114611d31576040519150601f19603f3d011682016040523d82523d6000602084013e611d36565b606091505b5091509150611d46858383611d87565b95945050505050565b3415610b8f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082611d9c57611d9782611e16565b61082f565b8151158015611dc0575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611e0f576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610914565b5092915050565b805115611e265780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106fc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715611ecc57611ecc611e7a565b60405290565b600082601f830112611ee357600080fd5b813567ffffffffffffffff811115611efd57611efd611e7a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611f4a57611f4a611e7a565b604052818152838201602001851015611f6257600080fd5b816020850160208301376000918101602001919091529392505050565b600060a08284031215611f9157600080fd5b611f99611ea9565b9050813567ffffffffffffffff811115611fb257600080fd5b611fbe84828501611ed2565b8252506020820135611fcf81611e58565b60208201526040828101359082015260608083013590820152608082013565ffffffffffff8116811461200157600080fd5b608082015292915050565b6000806040838503121561201f57600080fd5b823561202a81611e58565b9150602083013567ffffffffffffffff81111561204657600080fd5b61205285828601611f7f565b9150509250929050565b60006020828403121561206e57600080fd5b813561082f81611e58565b6000806040838503121561208c57600080fd5b823561209781611e58565b946020939093013593505050565b6000806000606084860312156120ba57600080fd5b83356120c581611e58565b925060208401356120d581611e58565b929592945050506040919091013590565b600080604083850312156120f957600080fd5b823561210481611e58565b9150602083013567ffffffffffffffff81111561212057600080fd5b61205285828601611ed2565b60008060006060848603121561214157600080fd5b833567ffffffffffffffff81111561215857600080fd5b8401610120818703121561216b57600080fd5b95602085013595506040909401359392505050565b60005b8381101561219b578181015183820152602001612183565b50506000910152565b600081518084526121bc816020860160208601612180565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061220160408301856121a4565b90508260208301529392505050565b6000806040838503121561222357600080fd5b82359150602083013563ffffffff8116811461223e57600080fd5b809150509250929050565b60008060008060006080868803121561226157600080fd5b85356003811061227057600080fd5b9450602086013567ffffffffffffffff81111561228c57600080fd5b8601601f8101881361229d57600080fd5b803567ffffffffffffffff8111156122b457600080fd5b8860208284010111156122c657600080fd5b959860209190910197509495604081013595606090910135945092505050565b6000602082840312156122f857600080fd5b5035919050565b60208152600061082f60208301846121a4565b60008060006060848603121561232757600080fd5b833561233281611e58565b925060208401359150604084013561234981611e58565b809150509250925092565b60006020828403121561236657600080fd5b813567ffffffffffffffff81111561237d57600080fd5b61238984828501611f7f565b949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126123c657600080fd5b83018035915067ffffffffffffffff8211156123e157600080fd5b6020019150368190038213156123f657600080fd5b9250929050565b6000808585111561240d57600080fd5b8386111561241a57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561069057610690612427565b8082018082111561069057610690612427565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080604083850312156124be57600080fd5b82359150602083013561223e81611e58565b6000602082840312156124e257600080fd5b5051919050565b60008261251f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251612536818460208701612180565b919091019291505056fea164736f6c634300081b000a",
    "sourceMap": "755:625:0:-:0;;;1171:4:16;1128:48;;1349:29:0;;;;;;;;;-1:-1:-1;5561:22:12;:20;:22::i;:::-;755:625:0;;7711:422:15;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:15;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:15;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:15;-1:-1:-1;;;;;8035:33:15;;;;;8087:29;;158:50:34;;;8087:29:15;;146:2:34;131:18;8087:29:15;;;;;;;7981:146;7760:373;7711:422::o;14:200:34:-;755:625:0;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101d15760003560e01c80637c8d4949116100f7578063c350a1b511610095578063ebdbc67811610064578063ebdbc6781461059b578063edceadb6146105bb578063f2fde38b146105db578063ffa1ad74146105fb57600080fd5b8063c350a1b514610526578063d833caee14610546578063e30c397814610566578063eb12d61e1461057b57600080fd5b8063a3f4df7e116100d1578063a3f4df7e1461044f578063ad3cb1cc146104a5578063b0d691fe146104ee578063b175512b1461051157600080fd5b80637c8d4949146103e257806388202489146103f55780638da5cb5b1461041557600080fd5b80634f1ef2861161016f578063715018a61161013e578063715018a614610368578063736c0d5b1461037d57806379ba5097146103ad5780637c627b21146103c257600080fd5b80634f1ef286146102ff57806352b7512c1461031257806352d1902d146103405780635b34b2721461035557600080fd5b80631647795e116101ab5780631647795e146102495780632bcaa0e21461029b57806334b5a077146102bb5780634d2b3f06146102e957600080fd5b8063056819be146101dd5780630acf2ac8146102125780630e316ab71461022957600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101fd6101f836600461200c565b610644565b60405190151581526020015b60405180910390f35b34801561021e57600080fd5b50610227610696565b005b34801561023557600080fd5b5061022761024436600461205c565b6106ff565b34801561025557600080fd5b506101fd610264366004612079565b600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205460ff1690565b3480156102a757600080fd5b506102276102b63660046120a5565b61078a565b3480156102c757600080fd5b506102db6102d636600461200c565b6107a2565b604051908152602001610209565b3480156102f557600080fd5b506102db60005481565b61022761030d3660046120e6565b610836565b34801561031e57600080fd5b5061033261032d36600461212c565b610855565b6040516102099291906121ee565b34801561034c57600080fd5b506102db610aa8565b610227610363366004612210565b610ad7565b34801561037457600080fd5b50610227610b7d565b34801561038957600080fd5b506101fd61039836600461205c565b60036020526000908152604090205460ff1681565b3480156103b957600080fd5b50610227610b91565b3480156103ce57600080fd5b506102276103dd366004612249565b610c09565b6102276103f03660046122e6565b610d32565b34801561040157600080fd5b50610227610410366004612079565b610d54565b34801561042157600080fd5b5061042a610dfb565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610209565b34801561045b57600080fd5b506104986040518060400160405280600e81526020017f4c696768745061796d617374657200000000000000000000000000000000000081525081565b60405161020991906122ff565b3480156104b157600080fd5b506104986040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156104fa57600080fd5b506f71727de22e5e9d8baf0edac6f37da03261042a565b34801561051d57600080fd5b50610227610e3d565b34801561053257600080fd5b50610227610541366004612312565b610eb7565b34801561055257600080fd5b50610227610561366004612354565b611052565b34801561057257600080fd5b5061042a6110f5565b34801561058757600080fd5b5061022761059636600461205c565b61111e565b3480156105a757600080fd5b506102276105b63660046122e6565b6111a5565b3480156105c757600080fd5b506102276105d636600461205c565b6111b6565b3480156105e757600080fd5b506102276105f636600461205c565b611255565b34801561060757600080fd5b506104986040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b60008061065184846107a2565b9050600061066382856000015161130c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff16925050505b92915050565b33600090815260016020526040812054908190036106e0576040517f6c163b7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181526001602052604081208190556106fc91836113b6565b50565b6107076113e6565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b91015b60405180910390a150565b6107926113e6565b61079d8383836113b6565b505050565b6020808201516040808401516060808601516080808801518551309881019890985273ffffffffffffffffffffffffffffffffffffffff808b16968901969096524693880193909352939094169285019290925260a084015260c083019190915265ffffffffffff1660e082015260009061082f906101000160405160208183030381529060405261143e565b9392505050565b61083e6114aa565b610847826115ae565b61085182826115b6565b5050565b60606000336f71727de22e5e9d8baf0edac6f37da032146108a2576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108b160e0870187612391565b6108bf9160149082906123fd565b8101906108cc9190612354565b60408101519091508481101561091d576040517f7582f47200000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b602082015173ffffffffffffffffffffffffffffffffffffffff161561098d5760208201516040517f140e116500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610914565b6109a361099d602089018961205c565b836116ef565b60006109bb6109b560208a018a61205c565b84610644565b15905060a0836080015165ffffffffffff16901b816109db5760006109de565b60015b60ff161793506109ee8683612456565b600160006109ff60208c018c61205c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a489190612469565b90915550869050610a5c60208a018a61205c565b604051602001610a8c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b6040516020818303038152906040529450505050935093915050565b6000610ab261189e565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610adf6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015273ffffffffffffffffffffffffffffffffffffffff9190911690630396cb609084906024016000604051808303818588803b158015610b6057600080fd5b505af1158015610b74573d6000803e3d6000fd5b50505050505050565b610b856113e6565b610b8f600061190d565b565b3380610b9b6110f5565b73ffffffffffffffffffffffffffffffffffffffff1614610c00576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610914565b6106fc8161190d565b336f71727de22e5e9d8baf0edac6f37da03214610c52576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002856002811115610c6657610c6661247c565b03610c9d576040517fef88ac6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610cac858701876124ab565b90925090506000610cbd8584612456565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054610ced9190612469565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081205590508015610d2857610d2882826108fc61195d565b5050505050505050565b610d3a6113e6565b6106fc6f71727de22e5e9d8baf0edac6f37da0328261199d565b610d5c6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505050505050565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b5473ffffffffffffffffffffffffffffffffffffffff1692915050565b610e456113e6565b6f71727de22e5e9d8baf0edac6f37da03273ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e9d57600080fd5b505af1158015610eb1573d6000803e3d6000fd5b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610f025750825b905060008267ffffffffffffffff166001148015610f1f5750303b155b905081158015610f2d575080155b15610f64576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610fc55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610fcd6119b9565b610fd6886119c1565b610fdf87611a19565b610fe88661111e565b8315610d285784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050565b806080015165ffffffffffff16421115611098576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110a23382610644565b6110d8576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110e233826116ef565b6106fc81602001513383604001516113b6565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610e20565b6111266113e6565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24910161077f565b6111ad6113e6565b6106fc81611a19565b6111be6113e6565b6f71727de22e5e9d8baf0edac6f37da0326040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152919091169063c23a5cea90602401600060405180830381600087803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b5050505050565b61125d6113e6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811782556112c6610dfb565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051600190836000526020830151604052604083510361136157604083015160ff81901c601b016020527f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16606052611387565b604183510361138257606083015160001a6020526040830151606052611387565b600091505b6020600160806000855afa5191503d6113a857638baa579f6000526004601cfd5b600060605260405292915050565b73ffffffffffffffffffffffffffffffffffffffff83166113db5761079d828261199d565b61079d838383611a4e565b336113ef610dfb565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610914565b6000815160207f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008052815b600182039150600a81066030018253600a90048061146d5750603a03602081113d3d3e805160005117845281810160209190910384012092525090565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061157757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661155e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610b8f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106fc6113e6565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561163b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611638918101906124d0565b60015b611689576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610914565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146116e5576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610914565b61079d8383611a9d565b6060810151600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16156117665780606001516040517fb1373a6c00000000000000000000000000000000000000000000000000000000815260040161091491815260200190565b6000805461177490476124e9565b602083015190915073ffffffffffffffffffffffffffffffffffffffff161580156117a25750808260400151115b156117ea578160400151816040517f4c362064000000000000000000000000000000000000000000000000000000008152600401610914929190918252602082015260400190565b606082018051600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8089168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905591860151818701519451915193169391927f8e7cffd3059dabab9850e8d5537f8a291f7c5ed69254d02609751c9afdaaeb1d9261189192908252602082015260400190565b60405180910390a3505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b8f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815561085182611b00565b814710156119735763b12d13eb6000526004601cfd5b600038600038858786f161079d57826000526073600b5360ff6020536016600b83f061079d573838fd5b60003860003884865af16108515763b12d13eb6000526004601cfd5b610b8f611b96565b6119c9611b96565b73ffffffffffffffffffffffffffffffffffffffff8116610c00576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610914565b60008190556040518181527f8e50f7d01ef1d2915d3115fc0152c6a85cb0c84de7e57611c0b0f8063bb858e19060200161077f565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716611a93576390b8ec186000526004601cfd5b6000603452505050565b611aa682611bfd565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611af85761079d8282611ccc565b610851611d4f565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610b8f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163b600003611c66576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610914565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611cf69190612524565b600060405180830381855af49150503d8060008114611d31576040519150601f19603f3d011682016040523d82523d6000602084013e611d36565b606091505b5091509150611d46858383611d87565b95945050505050565b3415610b8f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082611d9c57611d9782611e16565b61082f565b8151158015611dc0575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611e0f576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610914565b5092915050565b805115611e265780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106fc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715611ecc57611ecc611e7a565b60405290565b600082601f830112611ee357600080fd5b813567ffffffffffffffff811115611efd57611efd611e7a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff81118282101715611f4a57611f4a611e7a565b604052818152838201602001851015611f6257600080fd5b816020850160208301376000918101602001919091529392505050565b600060a08284031215611f9157600080fd5b611f99611ea9565b9050813567ffffffffffffffff811115611fb257600080fd5b611fbe84828501611ed2565b8252506020820135611fcf81611e58565b60208201526040828101359082015260608083013590820152608082013565ffffffffffff8116811461200157600080fd5b608082015292915050565b6000806040838503121561201f57600080fd5b823561202a81611e58565b9150602083013567ffffffffffffffff81111561204657600080fd5b61205285828601611f7f565b9150509250929050565b60006020828403121561206e57600080fd5b813561082f81611e58565b6000806040838503121561208c57600080fd5b823561209781611e58565b946020939093013593505050565b6000806000606084860312156120ba57600080fd5b83356120c581611e58565b925060208401356120d581611e58565b929592945050506040919091013590565b600080604083850312156120f957600080fd5b823561210481611e58565b9150602083013567ffffffffffffffff81111561212057600080fd5b61205285828601611ed2565b60008060006060848603121561214157600080fd5b833567ffffffffffffffff81111561215857600080fd5b8401610120818703121561216b57600080fd5b95602085013595506040909401359392505050565b60005b8381101561219b578181015183820152602001612183565b50506000910152565b600081518084526121bc816020860160208601612180565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061220160408301856121a4565b90508260208301529392505050565b6000806040838503121561222357600080fd5b82359150602083013563ffffffff8116811461223e57600080fd5b809150509250929050565b60008060008060006080868803121561226157600080fd5b85356003811061227057600080fd5b9450602086013567ffffffffffffffff81111561228c57600080fd5b8601601f8101881361229d57600080fd5b803567ffffffffffffffff8111156122b457600080fd5b8860208284010111156122c657600080fd5b959860209190910197509495604081013595606090910135945092505050565b6000602082840312156122f857600080fd5b5035919050565b60208152600061082f60208301846121a4565b60008060006060848603121561232757600080fd5b833561233281611e58565b925060208401359150604084013561234981611e58565b809150509250925092565b60006020828403121561236657600080fd5b813567ffffffffffffffff81111561237d57600080fd5b61238984828501611f7f565b949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126123c657600080fd5b83018035915067ffffffffffffffff8211156123e157600080fd5b6020019150368190038213156123f657600080fd5b9250929050565b6000808585111561240d57600080fd5b8386111561241a57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561069057610690612427565b8082018082111561069057610690612427565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080604083850312156124be57600080fd5b82359150602083013561223e81611e58565b6000602082840312156124e257600080fd5b5051919050565b60008261251f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251612536818460208701612180565b919091019291505056fea164736f6c634300081b000a",
    "sourceMap": "755:625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13593:525:12;;;;;;;;;;-1:-1:-1;13593:525:12;;;;;:::i;:::-;;:::i;:::-;;;3049:14:34;;3042:22;3024:41;;3012:2;2997:18;13593:525:12;;;;;;;;8887:306;;;;;;;;;;;;;:::i;:::-;;12791:134;;;;;;;;;;-1:-1:-1;12791:134:12;;;;;:::i;:::-;;:::i;15315:130::-;;;;;;;;;;-1:-1:-1;15315:130:12;;;;;:::i;:::-;15389:4;15412:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;;;15315:130;10135;;;;;;;;;;-1:-1:-1;10135:130:12;;;;;:::i;:::-;;:::i;14573:463::-;;;;;;;;;;-1:-1:-1;14573:463:12;;;;;:::i;:::-;;:::i;:::-;;;4359:25:34;;;4347:2;4332:18;14573:463:12;4213:177:34;1867:37:12;;;;;;;;;;;;;;;;4158:214:16;;;;;;:::i;:::-;;:::i;6252:1088:12:-;;;;;;;;;;-1:-1:-1;6252:1088:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3705:134:16:-;;;;;;;;;;;;;:::i;11512:186:12:-;;;;;;:::i;:::-;;:::i;3155:101:14:-;;;;;;;;;;;;;:::i;2303:61:12:-;;;;;;;;;;-1:-1:-1;2303:61:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;2774:229:13;;;;;;;;;;;;;:::i;7377:1248:12:-;;;;;;;;;;-1:-1:-1;7377:1248:12;;;;;:::i;:::-;;:::i;10489:140::-;;;;;;:::i;:::-;;:::i;10880:148::-;;;;;;;;;;-1:-1:-1;10880:148:12;;;;;:::i;:::-;;:::i;2441:144:14:-;;;;;;;;;;;;;:::i;:::-;;;8686:42:34;8674:55;;;8656:74;;8644:2;8629:18;2441:144:14;8510:226:34;1021:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1819:58:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15524:118:12;;;;;;;;;;-1:-1:-1;15593:42:12;15524:118;;11826:108;;;;;;;;;;;;;:::i;5938:277::-;;;;;;;;;;-1:-1:-1;5938:277:12;;;;;:::i;:::-;;:::i;9355:503::-;;;;;;;;;;-1:-1:-1;9355:503:12;;;;;:::i;:::-;;:::i;1680:168:13:-;;;;;;;;;;;;;:::i;13012:128:12:-;;;;;;;;;;-1:-1:-1;13012:128:12;;;;;:::i;:::-;;:::i;12561:137::-;;;;;;;;;;-1:-1:-1;12561:137:12;;;;;:::i;:::-;;:::i;12225:132::-;;;;;;;;;;-1:-1:-1;12225:132:12;;;;;:::i;:::-;;:::i;2041:247:13:-;;;;;;;;;;-1:-1:-1;2041:247:13;;;;;:::i;:::-;;:::i;1120:40:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13593:525:12;13729:4;13797:12;13812:33;13820:7;13829:15;13812:7;:33::i;:::-;13797:48;;13915:23;13941:46;13955:4;13961:15;:25;;;13941:13;:46::i;:::-;14087:24;;;;;;:7;:24;;;;;;;;;-1:-1:-1;;;13593:525:12;;;;;:::o;8887:306::-;8966:10;8935:14;8952:25;;;:13;:25;;;;;;;9062:11;;;9058:34;;9082:10;;;;;;;;;;;;;;9058:34;9124:10;9110:25;;;;:13;:25;;;;;9103:32;;;9145:41;;9179:6;9145:9;:41::i;:::-;8925:268;8887:306::o;12791:134::-;2334:13:14;:11;:13::i;:::-;12857:16:12::1;::::0;::::1;12876:5;12857:16:::0;;;:7:::1;:16;::::0;;;;;;;;:24;;;::::1;::::0;;12896:22;;8656:74:34;;;12896:22:12::1;::::0;8629:18:34;12896:22:12::1;;;;;;;;12791:134:::0;:::o;10135:130::-;2334:13:14;:11;:13::i;:::-;10230:28:12::1;10240:5;10247:2;10251:6;10230:9;:28::i;:::-;10135:130:::0;;;:::o;14573:463::-;14865:21;;;;;14904:22;;;;;14944:21;;;;;14983:22;;;;;14750:269;;14786:4;14750:269;;;10417:74:34;;;;10447:42;10527:55;;;10507:18;;;10500:83;;;;14834:13:12;10599:18:34;;;10592:34;;;;10662:55;;;;10642:18;;;10635:83;;;;10734:19;;;10727:35;10778:19;;;10771:35;;;;10855:14;10843:27;10822:19;;;10815:56;14668:7:12;;14694:335;;10389:19:34;;14750:269:12;;;;;;;;;;;;14694:42;:335::i;:::-;14687:342;14573:463;-1:-1:-1;;;14573:463:12:o;4158:214:16:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;6252:1088:12:-;6405:20;6427:22;5411:10;15593:42;5411:26;5407:53;;5446:14;;;;;;;;;;;;;;5407:53;6465:38:::1;6517:23;;::::0;::::1;:6:::0;:23:::1;:::i;:::-;:28;::::0;6541:2:::1;::::0;6517:28;;::::1;:::i;:::-;6506:59;;;;;;;:::i;:::-;6600:22;::::0;::::1;::::0;6465:100;;-1:-1:-1;6637:24:12;;::::1;6633:112;;;6684:50;::::0;::::1;::::0;;::::1;::::0;::::1;11977:25:34::0;;;12018:18;;;12011:34;;;11950:18;;6684:50:12::1;;;;;;;;6633:112;6759:21;::::0;::::1;::::0;:35:::1;;::::0;6755:121:::1;;6843:21;::::0;::::1;::::0;6817:48:::1;::::0;::::1;::::0;;8686:42:34;8674:55;;;6817:48:12::1;::::0;::::1;8656:74:34::0;8629:18;;6817:48:12::1;8510:226:34::0;6755:121:12::1;6886:48;6903:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6918:15;6886:16;:48::i;:::-;6945:14;6963:56;6988:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;7003:15;6963:24;:56::i;:::-;6962:57;6945:74;;7104:3;7077:15;:22;;;7069:31;;:38;;7047:9;:17;;7063:1;7047:17;;;7059:1;7047:17;7046:62;;;::::0;-1:-1:-1;7255:24:12::1;7272:7:::0;7255:14;:24:::1;:::i;:::-;7223:13;:28;7237:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;7223:28;;;;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7310:7:12;;-1:-1:-1;7319:13:12::1;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;7299:34;;;;;;;;12682:25:34::0;;;12755:42;12743:55;12738:2;12723:18;;12716:83;12670:2;12655:18;;12508:297;7299:34:12::1;;;;;;;;;;;;;7289:44;;6455:885;;;6252:1088:::0;;;;;;:::o;3705:134:16:-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:20::1;3705:134:16::0;:::o;11512:186:12:-;2334:13:14;:11;:13::i;:::-;15593:42:12;11621:70:::1;::::0;;;;::::1;12972:23:34::0;;11621:70:12::1;::::0;::::1;12954:42:34::0;11621:34:12::1;::::0;;;::::1;::::0;::::1;::::0;11663:6;;12927:18:34;;11621:70:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;11512:186:::0;;:::o;3155:101:14:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2774:229:13:-;966:10:17;;2869:14:13;:12;:14::i;:::-;:24;;;2865:96;;2916:34;;;;;8686:42:34;8674:55;;2916:34:13;;;8656:74:34;8629:18;;2916:34:13;8510:226:34;2865:96:13;2970:26;2989:6;2970:18;:26::i;7377:1248:12:-;5411:10;15593:42;5411:26;5407:53;;5446:14;;;;;;;;;;;;;;5407:53;7934:25:::1;7926:4;:33;;;;;;;;:::i;:::-;::::0;7922:101:::1;;7982:30;;;;;;;;;;;;;;7922:101;8034:18;::::0;8073:39:::1;::::0;;::::1;8084:7:::0;8073:39:::1;:::i;:::-;8033:79:::0;;-1:-1:-1;8033:79:12;-1:-1:-1;8280:20:12::1;8329:26;8342:13:::0;8033:79;8329:26:::1;:::i;:::-;8303:22;::::0;::::1;;::::0;;;:13:::1;:22;::::0;;;;;:53:::1;::::0;;::::1;:::i;:::-;8434:22;::::0;::::1;;::::0;;;:13:::1;:22;::::0;;;;8427:29;8280:76;-1:-1:-1;8470:16:12;;8466:153:::1;;8502:106;8539:7;8548:12;1932:4:32;8502:36:12;:106::i;:::-;7521:1104;;;7377:1248:::0;;;;;:::o;10489:140::-;2334:13:14;:11;:13::i;:::-;10569:53:12::1;15593:42:::0;10615:6:::1;10569:31;:53::i;10880:148::-:0;2334:13:14;:11;:13::i;:::-;15593:42:12;10973:48:::1;::::0;;;;:36:::1;13784:55:34::0;;;10973:48:12::1;::::0;::::1;13766:74:34::0;13856:18;;;13849:34;;;10973:36:12;;;::::1;::::0;::::1;::::0;13739:18:34;;10973:48:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10880:148:::0;;:::o;2441:144:14:-;2487:7;;1313:22;2533:20;2570:8;;;;2441:144;-1:-1:-1;;2441:144:14:o;11826:108:12:-;2334:13:14;:11;:13::i;:::-;15593:42:12;11888:37:::1;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11826:108::o:0;5938:277::-;8870:21:15;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:15;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;6053:24:12::1;:22;:24::i;:::-;6087:32;6112:6;6087:24;:32::i;:::-;6129:51;6156:23;6129:26;:51::i;:::-;6190:18;6200:7;6190:9;:18::i;:::-;5070:14:15::0;5066:101;;;5100:23;;;;;;5142:14;;-1:-1:-1;14047:50:34;;5142:14:15;;14035:2:34;14020:18;5142:14:15;;;;;;;4092:1081;;;;;5938:277:12;;;:::o;9355:503::-;9454:15;:22;;;9436:40;;:15;:40;9432:87;;;9499:9;;;;;;;;;;;;;;9432:87;9534:53;9559:10;9571:15;9534:24;:53::i;:::-;9529:110;;9610:18;;;;;;;;;;;;;;9529:110;9649:45;9666:10;9678:15;9649:16;:45::i;:::-;9783:68;9793:15;:21;;;9816:10;9828:15;:22;;;9783:9;:68::i;1680:168:13:-;1733:7;;1318:27;1784:25;1187:174;13012:128:12;2334:13:14;:11;:13::i;:::-;13075:16:12::1;::::0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;;:23;;;::::1;13094:4;13075:23;::::0;;13113:20;;8656:74:34;;;13113:20:12::1;::::0;8629:18:34;13113:20:12::1;8510:226:34::0;12561:137:12;2334:13:14;:11;:13::i;:::-;12649:42:12::1;12676:14;12649:26;:42::i;12225:132::-:0;2334:13:14;:11;:13::i;:::-;15593:42:12;12307:43:::1;::::0;;;;:39:::1;8674:55:34::0;;;12307:43:12::1;::::0;::::1;8656:74:34::0;12307:39:12;;;::::1;::::0;::::1;::::0;8629:18:34;;12307:43:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12225:132:::0;:::o;2041:247:13:-;2334:13:14;:11;:13::i;:::-;1318:27:13;2197:26;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2263:7:::1;:5;:7::i;:::-;2238:43;;;;;;;;;;;;2120:168;2041:247:::0;:::o;2950:1772:31:-;3159:4;3153:11;3130:1;;3254:4;3248;3241:18;3310:4;3299:9;3295:20;3289:27;3283:4;3276:41;3366:2;3354:9;3348:16;3345:24;3342:256;;3423:4;3408:20;;3402:27;3471:3;3467:12;;;3481:2;3463:21;3457:4;3450:35;3527:18;;3521:4;3514:32;3575:5;;3342:256;3639:2;3627:9;3621:16;3618:24;3615:222;;3707:4;3696:9;3692:20;3686:27;3683:1;3678:36;3672:4;3665:50;3778:4;3767:9;3763:20;3757:27;3751:4;3744:41;3814:5;;3615:222;3864:1;3854:11;;3211:690;4283:4;4233;4185;4136;4077:6;4003:5;3967:361;3940:406;3914:432;;4454:16;4444:144;;4503:10;4497:4;4490:24;4569:4;4563;4556:18;4444:144;4614:1;4608:4;4601:15;4662:4;4655:15;2950:1772;;-1:-1:-1;;2950:1772:31:o;17265:258:12:-;17350:19;;;17346:171;;17385:43;17417:2;17421:6;17385:31;:43::i;17346:171::-;17459:47;17488:5;17495:2;17499:6;17459:28;:47::i;2658:162:14:-;966:10:17;2717:7:14;:5;:7::i;:::-;:23;;;2713:101;;2763:40;;;;;966:10:17;2763:40:14;;;8656:74:34;8629:18;;2763:40:14;8510:226:34;31050:1106:33;31121:14;31234:1;31228:8;31258:4;31285:32;31282:1;31275:43;31376:4;31370;31363:18;31503:7;31485:210;31548:1;31545;31541:9;31536:14;;31596:2;31590:4;31586:13;31582:2;31578:22;31575:1;31567:34;31636:2;31626:13;;31656:25;31485:210;31656:25;-1:-1:-1;31721:4:33;31717:12;31927:4;31921:11;;31903:16;31885;31870:63;31972:8;;31965:4;31959:11;31956:25;31946:36;;32070:15;;;32059:4;32055:12;;;;32048:20;;32038:48;32099:18;;-1:-1:-1;32038:48:33;31050:1106::o;4599:312:16:-;4679:4;4671:23;4688:6;4671:23;;;:120;;;4785:6;4749:42;;:32;1327:66:20;2035:53;;;;1957:138;4749:32:16;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;13182:66:12;2334:13:14;:11;:13::i;6052:538:16:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:16;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;8686:42:34;8674:55;;6513:60:16;;;8656:74:34;8629:18;;6513:60:16;8510:226:34;6147:437:16;1327:66:20;6245:40:16;;6241:120;;6312:34;;;;;;;;4359:25:34;;;4332:18;;6312:34:16;4213:177:34;6241:120:16;6374:54;6404:17;6423:4;6374:29;:54::i;16174:736:12:-;16291:21;;;;16280:33;;;;:10;:33;;;;;;;;:42;;;;;;;;;;;;;16276:115;;;16358:15;:21;;;16345:35;;;;;;;;;4359:25:34;;4347:2;4332:18;;4213:177;16276:115:12;16401:18;16446:22;;16422:46;;:21;:46;:::i;:::-;16482:21;;;;16401:67;;-1:-1:-1;16482:35:12;;;:74;;;;;16546:10;16521:15;:22;;;:35;16482:74;16478:164;;;16596:15;:22;;;16620:10;16579:52;;;;;;;;;;;11977:25:34;;;12033:2;12018:18;;12011:34;11965:2;11950:18;;11803:248;16478:164:12;16663:21;;;;;16652:33;;;;:10;:33;;;;;;;;:42;;;;;;;;;;;;;;:49;;;;16697:4;16652:49;;;16834:21;;;;16857:22;;;;16881:21;;16804:99;;;;;16652:42;;16804:99;;;;16857:22;11977:25:34;;12033:2;12018:18;;12011:34;11965:2;11950:18;;11803:248;16804:99:12;;;;;;;;16266:644;16174:736;;:::o;5028:213:16:-;5102:4;5094:23;5111:6;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;2472:222:13;1318:27;2621:22;;;;;;2653:34;2678:8;2653:24;:34::i;4932:731:32:-;5116:6;5101:13;5098:25;5095:146;;;5155:10;5149:4;5142:24;5222:4;5216;5209:18;5095:146;5323:4;5311:10;5305:4;5293:10;5285:6;5281:2;5269:10;5264:64;5254:393;;5361:2;5355:4;5348:16;5434:4;5428;5420:19;5490:4;5484;5476:19;5569:4;5563;5555:6;5548:26;5538:72;;5597:10;5585;5578:30;4031:342;4233:4;4221:10;4215:4;4203:10;4195:6;4191:2;4184:5;4179:59;4169:188;;4271:10;4265:4;4258:24;4338:4;4332;4325:18;2968:67:16;6931:20:15;:18;:20::i;1980:235:14:-;6931:20:15;:18;:20::i;:::-;2076:26:14::1;::::0;::::1;2072:95;;2125:31;::::0;::::1;::::0;;2153:1:::1;2125:31;::::0;::::1;8656:74:34::0;8629:18;;2125:31:14::1;8510:226:34::0;15648:182:12;15727:22;:39;;;15782:41;;4359:25:34;;;15782:41:12;;4347:2:34;4332:18;15782:41:12;4213:177:34;13466:939:32;13629:2;13623:4;13616:16;13686:6;13680:4;13673:20;13751:34;13745:4;13738:48;14140:4;14134;14128;14122;14119:1;14112:5;14105;14100:45;14034:16;14027:24;14023:1;14016:4;14010:11;14007:18;14004:48;13919:244;13892:400;;14209:10;14203:4;14196:24;14273:4;14267;14260:18;13892:400;14318:1;14312:4;14305:15;13466:939;;;:::o;2779:335:20:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;;;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;3774:248:14:-;1313:22;3923:8;;3941:19;;;3923:8;3941:19;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7084:141:15:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;2186:281:20;2263:17;:29;;;2296:1;2263:34;2259:119;;2320:47;;;;;8686:42:34;8674:55;;2320:47:20;;;8656:74:34;8629:18;;2320:47:20;8510:226:34;2259:119:20;1327:66;2387:73;;;;;;;;;;;;;;;2186:281::o;4106:253:22:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:22:o;6598:122:20:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:22;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:22;;;;:23;5045:49;5041:119;;;5121:24;;;;;8686:42:34;8674:55;;5121:24:22;;;8656:74:34;8629:18;;5121:24:22;8510:226:34;5041:119:22;-1:-1:-1;5180:10:22;4625:582;-1:-1:-1;;4625:582:22:o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:154:34;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:184;225:77;222:1;215:88;322:4;319:1;312:15;346:4;343:1;336:15;362:248;429:2;423:9;471:4;459:17;;506:18;491:34;;527:22;;;488:62;485:88;;;553:18;;:::i;:::-;589:2;582:22;362:248;:::o;615:863::-;657:5;710:3;703:4;695:6;691:17;687:27;677:55;;728:1;725;718:12;677:55;768:6;755:20;798:18;790:6;787:30;784:56;;;820:18;;:::i;:::-;889:2;883:9;955:4;943:17;;1036:66;939:90;;;1031:2;935:99;931:172;919:185;;1134:18;1119:34;;1155:22;;;1116:62;1113:88;;;1181:18;;:::i;:::-;1217:2;1210:22;1241;;;1282:19;;;1303:4;1278:30;1275:39;-1:-1:-1;1272:59:34;;;1327:1;1324;1317:12;1272:59;1391:6;1384:4;1376:6;1372:17;1365:4;1357:6;1353:17;1340:58;1446:1;1418:19;;;1439:4;1414:30;1407:41;;;;1422:6;615:863;-1:-1:-1;;;615:863:34:o;1483:895::-;1545:5;1593:4;1581:9;1576:3;1572:19;1568:30;1565:50;;;1611:1;1608;1601:12;1565:50;1633:17;;:::i;:::-;1624:26;;1686:9;1673:23;1719:18;1711:6;1708:30;1705:50;;;1751:1;1748;1741:12;1705:50;1778:45;1819:3;1810:6;1799:9;1795:22;1778:45;:::i;:::-;1771:5;1764:60;;1876:2;1865:9;1861:18;1848:32;1889:33;1914:7;1889:33;:::i;:::-;1949:2;1938:14;;1931:31;2035:2;2020:18;;;2007:32;2055:14;;;2048:31;2152:2;2137:18;;;2124:32;2172:14;;;2165:31;2248:3;2233:19;;2220:33;2297:14;2284:28;;2272:41;;2262:69;;2327:1;2324;2317:12;2262:69;2358:3;2347:15;;2340:32;2351:5;1483:895;-1:-1:-1;;1483:895:34:o;2383:496::-;2484:6;2492;2545:2;2533:9;2524:7;2520:23;2516:32;2513:52;;;2561:1;2558;2551:12;2513:52;2600:9;2587:23;2619:31;2644:5;2619:31;:::i;:::-;2669:5;-1:-1:-1;2725:2:34;2710:18;;2697:32;2752:18;2741:30;;2738:50;;;2784:1;2781;2774:12;2738:50;2807:66;2865:7;2856:6;2845:9;2841:22;2807:66;:::i;:::-;2797:76;;;2383:496;;;;;:::o;3076:247::-;3135:6;3188:2;3176:9;3167:7;3163:23;3159:32;3156:52;;;3204:1;3201;3194:12;3156:52;3243:9;3230:23;3262:31;3287:5;3262:31;:::i;3328:367::-;3396:6;3404;3457:2;3445:9;3436:7;3432:23;3428:32;3425:52;;;3473:1;3470;3463:12;3425:52;3512:9;3499:23;3531:31;3556:5;3531:31;:::i;:::-;3581:5;3659:2;3644:18;;;;3631:32;;-1:-1:-1;;;3328:367:34:o;3700:508::-;3777:6;3785;3793;3846:2;3834:9;3825:7;3821:23;3817:32;3814:52;;;3862:1;3859;3852:12;3814:52;3901:9;3888:23;3920:31;3945:5;3920:31;:::i;:::-;3970:5;-1:-1:-1;4027:2:34;4012:18;;3999:32;4040:33;3999:32;4040:33;:::i;:::-;3700:508;;4092:7;;-1:-1:-1;;;4172:2:34;4157:18;;;;4144:32;;3700:508::o;4577:455::-;4654:6;4662;4715:2;4703:9;4694:7;4690:23;4686:32;4683:52;;;4731:1;4728;4721:12;4683:52;4770:9;4757:23;4789:31;4814:5;4789:31;:::i;:::-;4839:5;-1:-1:-1;4895:2:34;4880:18;;4867:32;4922:18;4911:30;;4908:50;;;4954:1;4951;4944:12;4908:50;4977:49;5018:7;5009:6;4998:9;4994:22;4977:49;:::i;5037:581::-;5153:6;5161;5169;5222:2;5210:9;5201:7;5197:23;5193:32;5190:52;;;5238:1;5235;5228:12;5190:52;5278:9;5265:23;5311:18;5303:6;5300:30;5297:50;;;5343:1;5340;5333:12;5297:50;5366:22;;5422:3;5404:16;;;5400:26;5397:46;;;5439:1;5436;5429:12;5397:46;5462:2;5511;5496:18;;5483:32;;-1:-1:-1;5584:2:34;5569:18;;;5556:32;;5037:581;-1:-1:-1;;;5037:581:34:o;5623:250::-;5708:1;5718:113;5732:6;5729:1;5726:13;5718:113;;;5808:11;;;5802:18;5789:11;;;5782:39;5754:2;5747:10;5718:113;;;-1:-1:-1;;5865:1:34;5847:16;;5840:27;5623:250::o;5878:329::-;5919:3;5957:5;5951:12;5984:6;5979:3;5972:19;6000:76;6069:6;6062:4;6057:3;6053:14;6046:4;6039:5;6035:16;6000:76;:::i;:::-;6121:2;6109:15;6126:66;6105:88;6096:98;;;;6196:4;6092:109;;5878:329;-1:-1:-1;;5878:329:34:o;6212:288::-;6387:2;6376:9;6369:21;6350:4;6407:44;6447:2;6436:9;6432:18;6424:6;6407:44;:::i;:::-;6399:52;;6487:6;6482:2;6471:9;6467:18;6460:34;6212:288;;;;;:::o;6505:398::-;6572:6;6580;6633:2;6621:9;6612:7;6608:23;6604:32;6601:52;;;6649:1;6646;6639:12;6601:52;6694:23;;;-1:-1:-1;6793:2:34;6778:18;;6765:32;6841:10;6828:24;;6816:37;;6806:65;;6867:1;6864;6857:12;6806:65;6890:7;6880:17;;;6505:398;;;;;:::o;6908:986::-;7020:6;7028;7036;7044;7052;7105:3;7093:9;7084:7;7080:23;7076:33;7073:53;;;7122:1;7119;7112:12;7073:53;7161:9;7148:23;7200:1;7193:5;7190:12;7180:40;;7216:1;7213;7206:12;7180:40;7239:5;-1:-1:-1;7295:2:34;7280:18;;7267:32;7322:18;7311:30;;7308:50;;;7354:1;7351;7344:12;7308:50;7377:22;;7430:4;7422:13;;7418:27;-1:-1:-1;7408:55:34;;7459:1;7456;7449:12;7408:55;7499:2;7486:16;7525:18;7517:6;7514:30;7511:50;;;7557:1;7554;7547:12;7511:50;7602:7;7597:2;7588:6;7584:2;7580:15;7576:24;7573:37;7570:57;;;7623:1;7620;7613:12;7570:57;6908:986;;7654:2;7646:11;;;;;-1:-1:-1;7676:6:34;;7755:2;7740:18;;7727:32;;7858:2;7843:18;;;7830:32;;-1:-1:-1;6908:986:34;-1:-1:-1;;;6908:986:34:o;7899:226::-;7958:6;8011:2;7999:9;7990:7;7986:23;7982:32;7979:52;;;8027:1;8024;8017:12;7979:52;-1:-1:-1;8072:23:34;;7899:226;-1:-1:-1;7899:226:34:o;8741:219::-;8890:2;8879:9;8872:21;8853:4;8910:44;8950:2;8939:9;8935:18;8927:6;8910:44;:::i;8965:508::-;9042:6;9050;9058;9111:2;9099:9;9090:7;9086:23;9082:32;9079:52;;;9127:1;9124;9117:12;9079:52;9166:9;9153:23;9185:31;9210:5;9185:31;:::i;:::-;9235:5;-1:-1:-1;9313:2:34;9298:18;;9285:32;;-1:-1:-1;9395:2:34;9380:18;;9367:32;9408:33;9367:32;9408:33;:::i;:::-;9460:7;9450:17;;;8965:508;;;;;:::o;9478:361::-;9570:6;9623:2;9611:9;9602:7;9598:23;9594:32;9591:52;;;9639:1;9636;9629:12;9591:52;9679:9;9666:23;9712:18;9704:6;9701:30;9698:50;;;9744:1;9741;9734:12;9698:50;9767:66;9825:7;9816:6;9805:9;9801:22;9767:66;:::i;:::-;9757:76;9478:361;-1:-1:-1;;;;9478:361:34:o;10882:580::-;10959:4;10965:6;11025:11;11012:25;11115:66;11104:8;11088:14;11084:29;11080:102;11060:18;11056:127;11046:155;;11197:1;11194;11187:12;11046:155;11224:33;;11276:20;;;-1:-1:-1;11319:18:34;11308:30;;11305:50;;;11351:1;11348;11341:12;11305:50;11384:4;11372:17;;-1:-1:-1;11415:14:34;11411:27;;;11401:38;;11398:58;;;11452:1;11449;11442:12;11398:58;10882:580;;;;;:::o;11467:331::-;11572:9;11583;11625:8;11613:10;11610:24;11607:44;;;11647:1;11644;11637:12;11607:44;11676:6;11666:8;11663:20;11660:40;;;11696:1;11693;11686:12;11660:40;-1:-1:-1;;11722:23:34;;;11767:25;;;;;-1:-1:-1;11467:331:34:o;12056:184::-;12108:77;12105:1;12098:88;12205:4;12202:1;12195:15;12229:4;12226:1;12219:15;12245:128;12312:9;;;12333:11;;;12330:37;;;12347:18;;:::i;12378:125::-;12443:9;;;12464:10;;;12461:36;;;12477:18;;:::i;13007:184::-;13059:77;13056:1;13049:88;13156:4;13153:1;13146:15;13180:4;13177:1;13170:15;13196:375;13272:6;13280;13333:2;13321:9;13312:7;13308:23;13304:32;13301:52;;;13349:1;13346;13339:12;13301:52;13394:23;;;-1:-1:-1;13493:2:34;13478:18;;13465:32;13506:33;13465:32;13506:33;:::i;14355:184::-;14425:6;14478:2;14466:9;14457:7;14453:23;14449:32;14446:52;;;14494:1;14491;14484:12;14446:52;-1:-1:-1;14517:16:34;;14355:184;-1:-1:-1;14355:184:34:o;14544:274::-;14584:1;14610;14600:189;;14645:77;14642:1;14635:88;14746:4;14743:1;14736:15;14774:4;14771:1;14764:15;14600:189;-1:-1:-1;14803:9:34;;14544:274::o;14823:287::-;14952:3;14990:6;14984:13;15006:66;15065:6;15060:3;15053:4;15045:6;15041:17;15006:66;:::i;:::-;15088:16;;;;;14823:287;-1:-1:-1;;14823:287:34:o",
    "linkReferences": {},
    "immutableReferences": {
      "2876": [
        { "start": 5314, "length": 32 },
        { "start": 5355, "length": 32 },
        { "start": 6326, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "VERSION()": "ffa1ad74",
    "acceptOwnership()": "79ba5097",
    "addSigner(address)": "eb12d61e",
    "entryPoint()": "b0d691fe",
    "entryPointAddStake(uint256,uint32)": "5b34b272",
    "entryPointDeposit(uint256)": "7c8d4949",
    "entryPointUnlockStake()": "b175512b",
    "entryPointWithdraw(address,uint256)": "88202489",
    "entryPointWithdrawStake(address)": "edceadb6",
    "getHash(address,(bytes,address,uint256,uint256,uint48))": "34b5a077",
    "initialize(address,uint256,address)": "c350a1b5",
    "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": "056819be",
    "maxWithdrawDenominator()": "4d2b3f06",
    "nonceUsed(address,uint256)": "1647795e",
    "owner()": "8da5cb5b",
    "ownerWithdraw(address,address,uint256)": "2bcaa0e2",
    "pendingOwner()": "e30c3978",
    "postOp(uint8,bytes,uint256,uint256)": "7c627b21",
    "proxiableUUID()": "52d1902d",
    "removeSigner(address)": "0e316ab7",
    "renounceOwnership()": "715018a6",
    "setMaxWithdrawDenominator(uint256)": "ebdbc678",
    "signers(address)": "736c0d5b",
    "transferOwnership(address)": "f2fde38b",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "52b7512c",
    "withdraw((bytes,address,uint256,uint256,uint48))": "d833caee",
    "withdrawGasExcess()": "0acf2ac8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExcess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"RequestLessThanGasMaxCost\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedPostOpRevertedMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"UnsupportedPaymasterAsset\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllowed\",\"type\":\"uint256\"}],\"name\":\"WithdrawTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"MagicSpendWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawDenominatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySeconds\",\"type\":\"uint32\"}],\"name\":\"entryPointAddStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"entryPointDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPointUnlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"entryPointWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"entryPointWithdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawDenominator_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"isValidWithdrawSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"nonceUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer_\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdrawDenominator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidSigner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGasExcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidNonce(uint256)\":[{\"params\":{\"nonce\":\"The already used nonce.\"}}],\"InvalidSignature()\":[{\"details\":\"The withdraw request signature MUST be:         - an ECDSA signature following EIP-191 (version 0x45)         - performed over the content specified in `getHash()`         - signed by the current owner of this contract\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"RequestLessThanGasMaxCost(uint256,uint256)\":[{\"params\":{\"maxCost\":\"The max gas cost required by the Entrypoint.\",\"requested\":\"The withdraw request amount.\"}}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}],\"UnexpectedPostOpRevertedMode()\":[{\"details\":\"This should only really occur if, for unknown reasons, the transfer of the withdrawable      funds to the user account failed (i.e. this contract's ETH balance is insufficient or      the user account refused the funds or ran out of gas on receive).\"}],\"UnsupportedPaymasterAsset(address)\":[{\"params\":{\"asset\":\"The requested asset.\"}}],\"WithdrawTooLarge(uint256,uint256)\":[{\"params\":{\"maxAllowed\":\"The current max allowed withdraw.\",\"requestedAmount\":\"The requested amount excluding gas.\"}}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MagicSpendWithdrawal(address,address,uint256,uint256)\":{\"params\":{\"account\":\"The account address.\",\"amount\":\"The amount withdrawn.\",\"asset\":\"The asset withdrawn.\",\"nonce\":\"The request nonce.\"}},\"MaxWithdrawDenominatorSet(uint256)\":{\"params\":{\"newDenominator\":\"The new maxWithdrawDenominator value.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addSigner(address)\":{\"params\":{\"signer_\":\"The signer to add.\"}},\"entryPointAddStake(uint256,uint32)\":{\"details\":\"Reverts if not called by the owner of the contract. Calling this while an unstake      is pending will first cancel the pending unstake.\",\"params\":{\"amount\":\"The amount to stake in the Entrypoint.\",\"unstakeDelaySeconds\":\"The duration for which the stake cannot be withdrawn. Must be                            equal to or greater than the current unstake delay.\"}},\"entryPointDeposit(uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to deposit on the the Entrypoint.\"}},\"entryPointUnlockStake()\":{\"details\":\"Reverts if not called by the owner of the contract.\"},\"entryPointWithdraw(address,uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to withdraw from the Entrypoint.\",\"to\":\"The beneficiary address.\"}},\"entryPointWithdrawStake(address)\":{\"details\":\"Reverts if not called by the owner of the contract. Only call this after the unstake delay      has passed since the last `entryPointUnlockStake` call.\",\"params\":{\"to\":\"The beneficiary address.\"}},\"getHash(address,(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Returns an EIP-191 compliant Ethereum Signed Message (version 0x45), see      https://eips.ethereum.org/EIPS/eip-191.\",\"params\":{\"account\":\"The account address.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"The hash to be signed for the given `account` and `withdrawRequest`.\"}},\"initialize(address,uint256,address)\":{\"params\":{\"maxWithdrawDenominator_\":\"The max withdraw denominator.\",\"owner_\":\"The owner of the contract.\",\"signer_\":\"The initial signer of the contract.\"}},\"isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Does not validate nonce or expiry.\",\"params\":{\"account\":\"The account address.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"`true` if the signature is valid, else `false`.\"}},\"nonceUsed(address,uint256)\":{\"params\":{\"account\":\"The account address.\",\"nonce\":\"The nonce to check.\"},\"returns\":{\"_0\":\"`true` if the nonce has already been used by the account, else `false`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerWithdraw(address,address,uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to withdraw.\",\"asset\":\"The asset to withdraw.\",\"to\":\"The beneficiary address.\"}},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeSigner(address)\":{\"params\":{\"signer_\":\"The signer to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMaxWithdrawDenominator(uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"newDenominator\":\"The new value for maxWithdrawDenominator.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdraw((bytes,address,uint256,uint256,uint48))\":{\"params\":{\"withdrawRequest\":\"The withdraw request.\"}},\"withdrawGasExcess()\":{\"details\":\"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Expired()\":[{\"notice\":\"Thrown when trying to use a withdraw request after its expiry has been reached.\"}],\"InvalidNonce(uint256)\":[{\"notice\":\"Thrown when trying to replay a withdraw request with the same nonce.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the withdraw request signature is invalid.\"}],\"NoExcess()\":[{\"notice\":\"Thrown when trying to withdraw funds but nothing is available.\"}],\"RequestLessThanGasMaxCost(uint256,uint256)\":[{\"notice\":\"Thrown during validation in the context of ERC4337, when the withdraw request amount is insufficient         to sponsor the transaction gas.\"}],\"UnexpectedPostOpRevertedMode()\":[{\"notice\":\"Thrown when `postOp()` is called a second time with `PostOpMode.postOpReverted`.\"}],\"UnsupportedPaymasterAsset(address)\":[{\"notice\":\"Thrown when the withdraw request `asset` is not ETH (zero address).\"}],\"WithdrawTooLarge(uint256,uint256)\":[{\"notice\":\"Thrown if WithdrawRequest.amount exceeds address(this).balance / maxWithdrawDenominator.\"}]},\"events\":{\"MagicSpendWithdrawal(address,address,uint256,uint256)\":{\"notice\":\"Emitted after validating a withdraw request and funds are about to be withdrawn.\"},\"MaxWithdrawDenominatorSet(uint256)\":{\"notice\":\"Emitted when the `maxWithdrawDenominator` is set.\"},\"SignerAdded(address)\":{\"notice\":\"Emitted when a signer is added.\"},\"SignerRemoved(address)\":{\"notice\":\"Emitted when a signer is removed.\"}},\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"The name for this contract\"},\"VERSION()\":{\"notice\":\"The version for this contract\"},\"addSigner(address)\":{\"notice\":\"Adds a signer.\"},\"entryPoint()\":{\"notice\":\"Returns the canonical ERC-4337 EntryPoint v0.7 contract.\"},\"entryPointAddStake(uint256,uint32)\":{\"notice\":\"Adds stake to the EntryPoint.\"},\"entryPointDeposit(uint256)\":{\"notice\":\"Transfers ETH from this contract into the EntryPoint.\"},\"entryPointUnlockStake()\":{\"notice\":\"Unlocks stake in the EntryPoint.\"},\"entryPointWithdraw(address,uint256)\":{\"notice\":\"Withdraws ETH from the EntryPoint.\"},\"entryPointWithdrawStake(address)\":{\"notice\":\"Withdraws stake from the EntryPoint.\"},\"getHash(address,(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns the hash to be signed for a given `account` and `withdrawRequest` pair.\"},\"initialize(address,uint256,address)\":{\"notice\":\"Initializes the contract.\"},\"isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns whether the `withdrawRequest` signature is valid for the given `account`.\"},\"maxWithdrawDenominator()\":{\"notice\":\"address(this).balance divided by maxWithdrawDenominator expresses the max WithdrawRequest.amount allowed for a native asset withdraw.\"},\"nonceUsed(address,uint256)\":{\"notice\":\"Returns whether the `nonce` has been used by the given `account`.\"},\"ownerWithdraw(address,address,uint256)\":{\"notice\":\"Withdraws funds from this contract.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"removeSigner(address)\":{\"notice\":\"Removes a signer.\"},\"setMaxWithdrawDenominator(uint256)\":{\"notice\":\"Sets maxWithdrawDenominator.\"},\"signers(address)\":{\"notice\":\"Mapping of valid signers.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdraw((bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Allows the caller to withdraw funds by calling with a valid `withdrawRequest`.\"},\"withdrawGasExcess()\":{\"notice\":\"Allows the sender to withdraw any available funds associated with their account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/LightPaymaster.sol\":\"LightPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@/bytecodes/=contracts/bytecodes/\",\":@/circuits/=contracts/circuits/\",\":@/constants/=contracts/constants/\",\":@/contracts/=contracts/src/\",\":@/script/=contracts/script/\",\":@/test/=contracts/test/\",\":@0xsequence/wallet-contracts-v3/=lib/wallet-contracts-v3/\",\":@0xsequence/wallet-contracts/=lib/wallet-contracts/\",\":@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/\",\":@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":@asynchronous-vault/=lib/asynchronous-vault/src/\",\":@biconomy/account-contracts/=lib/scw-contracts/\",\":@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/\",\":@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/\",\":@eth-infinitism/account-abstraction/=lib/account-abstraction/\",\":@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/\",\":@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/\",\":@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/\",\":@safe-global/safe-contracts/=lib/safe-contracts/\",\":@source/=lib/soul-wallet-contract/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@zerodevapp/contracts/=lib/kernel/src/\",\":account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/\",\":account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":asynchronous-vault/=lib/asynchronous-vault/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":magic-spend/=lib/magic-spend/src/\",\":murky/=lib/murky/src/\",\":nexus/=lib/nexus/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":seaport/=lib/seaport/\",\":singleton-paymaster/=lib/singleton-paymaster/src/\",\":solady/=lib/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solmate/=lib/solmate/src/\",\":src/=lib/kernel/src/\",\":surl/=lib/surl/src/\"]},\"sources\":{\"contracts/src/LightPaymaster.sol\":{\"keccak256\":\"0x9e95bd9bc71ac6fa1d5612d45b936726ee104af2a123b8858165be15a6c5f966\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10b01dc36bbbadee42a1acef6ab69f1b5690894fa6edfc8c6cd82d670d5a19c4\",\"dweb:/ipfs/QmUP9dY9ec8AP11xVd4CWHHP7fHU4fGEyz21sBVxVAdFXv\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/magic-spend/src/MagicSpend.sol\":{\"keccak256\":\"0x323fa1edd6a244ba3aa23851139d6f97400ce408127a1d23c5c5757d7990071f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11dba176aaf1d0fee9f49ddcace4739766ac76ae4f0f7c5899a6f2e0f2499e26\",\"dweb:/ipfs/QmeauuZsss8kAu4u2iPwj8Bg2fCcdtZcHy4sYHqR3Axtn8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x25f0cdc3e2cb2487255ab0c38906a9a31926b793e455e0ed786c235c5d9afdfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://384abb403c965f96a602039d5b8825fa3b6acc527f87076252689550a0133c65\",\"dweb:/ipfs/QmejF4CxSad7aYCdr7d9ft73BXRrkWA6DhP7NjZwECfiSX\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]},\"lib/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb\",\"dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "Expired" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidNonce"
        },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "NoExcess" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "maxCost", "type": "uint256" }
          ],
          "type": "error",
          "name": "RequestLessThanGasMaxCost"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        { "inputs": [], "type": "error", "name": "Unauthorized" },
        {
          "inputs": [],
          "type": "error",
          "name": "UnexpectedPostOpRevertedMode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "asset", "type": "address" }
          ],
          "type": "error",
          "name": "UnsupportedPaymasterAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WithdrawTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MagicSpendWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxWithdrawDenominatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SignerAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SignerRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "signer_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSigner"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "uint32",
              "name": "unstakeDelaySeconds",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "entryPointAddStake"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "entryPointDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointUnlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointWithdrawStake"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" },
            {
              "internalType": "uint256",
              "name": "maxWithdrawDenominator_",
              "type": "uint256"
            },
            { "internalType": "address", "name": "signer_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidWithdrawSignature",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdrawDenominator",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonceUsed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "asset", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ownerWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            { "internalType": "bytes", "name": "context", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "signer_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSigner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxWithdrawDenominator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signers",
          "outputs": [
            { "internalType": "bool", "name": "isValidSigner", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "uint256", "name": "maxCost", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            { "internalType": "bytes", "name": "context", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawGasExcess"
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addSigner(address)": {
            "params": { "signer_": "The signer to add." }
          },
          "entryPointAddStake(uint256,uint32)": {
            "details": "Reverts if not called by the owner of the contract. Calling this while an unstake      is pending will first cancel the pending unstake.",
            "params": {
              "amount": "The amount to stake in the Entrypoint.",
              "unstakeDelaySeconds": "The duration for which the stake cannot be withdrawn. Must be                            equal to or greater than the current unstake delay."
            }
          },
          "entryPointDeposit(uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to deposit on the the Entrypoint."
            }
          },
          "entryPointUnlockStake()": {
            "details": "Reverts if not called by the owner of the contract."
          },
          "entryPointWithdraw(address,uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to withdraw from the Entrypoint.",
              "to": "The beneficiary address."
            }
          },
          "entryPointWithdrawStake(address)": {
            "details": "Reverts if not called by the owner of the contract. Only call this after the unstake delay      has passed since the last `entryPointUnlockStake` call.",
            "params": { "to": "The beneficiary address." }
          },
          "getHash(address,(bytes,address,uint256,uint256,uint48))": {
            "details": "Returns an EIP-191 compliant Ethereum Signed Message (version 0x45), see      https://eips.ethereum.org/EIPS/eip-191.",
            "params": {
              "account": "The account address.",
              "withdrawRequest": "The withdraw request."
            },
            "returns": {
              "_0": "The hash to be signed for the given `account` and `withdrawRequest`."
            }
          },
          "initialize(address,uint256,address)": {
            "params": {
              "maxWithdrawDenominator_": "The max withdraw denominator.",
              "owner_": "The owner of the contract.",
              "signer_": "The initial signer of the contract."
            }
          },
          "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": {
            "details": "Does not validate nonce or expiry.",
            "params": {
              "account": "The account address.",
              "withdrawRequest": "The withdraw request."
            },
            "returns": {
              "_0": "`true` if the signature is valid, else `false`."
            }
          },
          "nonceUsed(address,uint256)": {
            "params": {
              "account": "The account address.",
              "nonce": "The nonce to check."
            },
            "returns": {
              "_0": "`true` if the nonce has already been used by the account, else `false`."
            }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "ownerWithdraw(address,address,uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to withdraw.",
              "asset": "The asset to withdraw.",
              "to": "The beneficiary address."
            }
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "postOp(uint8,bytes,uint256,uint256)": {
            "params": {
              "actualGasCost": "- Actual gas used so far (without this postOp call).",
              "actualUserOpFeePerGas": "- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.",
              "context": "- The context value returned by validatePaymasterUserOp",
              "mode": "- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp()."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "removeSigner(address)": {
            "params": { "signer_": "The signer to remove." }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setMaxWithdrawDenominator(uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "newDenominator": "The new value for maxWithdrawDenominator."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "- The maximum cost of this transaction (based on maximum gas and gas price from userOp).",
              "userOp": "- The user operation.",
              "userOpHash": "- Hash of the user's request data."
            },
            "returns": {
              "context": "       - Value to send to a postOp. Zero length to signify postOp is not required.",
              "validationData": "- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdraw((bytes,address,uint256,uint256,uint48))": {
            "params": { "withdrawRequest": "The withdraw request." }
          },
          "withdrawGasExcess()": {
            "details": "Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NAME()": { "notice": "The name for this contract" },
          "VERSION()": { "notice": "The version for this contract" },
          "addSigner(address)": { "notice": "Adds a signer." },
          "entryPoint()": {
            "notice": "Returns the canonical ERC-4337 EntryPoint v0.7 contract."
          },
          "entryPointAddStake(uint256,uint32)": {
            "notice": "Adds stake to the EntryPoint."
          },
          "entryPointDeposit(uint256)": {
            "notice": "Transfers ETH from this contract into the EntryPoint."
          },
          "entryPointUnlockStake()": {
            "notice": "Unlocks stake in the EntryPoint."
          },
          "entryPointWithdraw(address,uint256)": {
            "notice": "Withdraws ETH from the EntryPoint."
          },
          "entryPointWithdrawStake(address)": {
            "notice": "Withdraws stake from the EntryPoint."
          },
          "getHash(address,(bytes,address,uint256,uint256,uint48))": {
            "notice": "Returns the hash to be signed for a given `account` and `withdrawRequest` pair."
          },
          "initialize(address,uint256,address)": {
            "notice": "Initializes the contract."
          },
          "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": {
            "notice": "Returns whether the `withdrawRequest` signature is valid for the given `account`."
          },
          "maxWithdrawDenominator()": {
            "notice": "address(this).balance divided by maxWithdrawDenominator expresses the max WithdrawRequest.amount allowed for a native asset withdraw."
          },
          "nonceUsed(address,uint256)": {
            "notice": "Returns whether the `nonce` has been used by the given `account`."
          },
          "ownerWithdraw(address,address,uint256)": {
            "notice": "Withdraws funds from this contract."
          },
          "postOp(uint8,bytes,uint256,uint256)": {
            "notice": "Post-operation handler. Must verify sender is the entryPoint."
          },
          "removeSigner(address)": { "notice": "Removes a signer." },
          "setMaxWithdrawDenominator(uint256)": {
            "notice": "Sets maxWithdrawDenominator."
          },
          "signers(address)": { "notice": "Mapping of valid signers." },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdraw((bytes,address,uint256,uint256,uint48))": {
            "notice": "Allows the caller to withdraw funds by calling with a valid `withdrawRequest`."
          },
          "withdrawGasExcess()": {
            "notice": "Allows the sender to withdraw any available funds associated with their account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@/bytecodes/=contracts/bytecodes/",
        "@/circuits/=contracts/circuits/",
        "@/constants/=contracts/constants/",
        "@/contracts/=contracts/src/",
        "@/script/=contracts/script/",
        "@/test/=contracts/test/",
        "@0xsequence/wallet-contracts-v3/=lib/wallet-contracts-v3/",
        "@0xsequence/wallet-contracts/=lib/wallet-contracts/",
        "@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/",
        "@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/",
        "@account-abstraction/=lib/account-abstraction/contracts/",
        "@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "@asynchronous-vault/=lib/asynchronous-vault/src/",
        "@biconomy/account-contracts/=lib/scw-contracts/",
        "@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/",
        "@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/",
        "@eth-infinitism/account-abstraction/=lib/account-abstraction/",
        "@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/",
        "@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/",
        "@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/",
        "@safe-global/safe-contracts/=lib/safe-contracts/",
        "@source/=lib/soul-wallet-contract/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "@zerodevapp/contracts/=lib/kernel/src/",
        "account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/",
        "account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "asynchronous-vault/=lib/asynchronous-vault/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "magic-spend/=lib/magic-spend/src/",
        "murky/=lib/murky/src/",
        "nexus/=lib/nexus/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "seaport/=lib/seaport/",
        "singleton-paymaster/=lib/singleton-paymaster/src/",
        "solady/=lib/solady/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/kernel/src/",
        "surl/=lib/surl/src/"
      ],
      "optimizer": { "enabled": true, "runs": 4294967295 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": {
        "contracts/src/LightPaymaster.sol": "LightPaymaster"
      },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "contracts/src/LightPaymaster.sol": {
        "keccak256": "0x9e95bd9bc71ac6fa1d5612d45b936726ee104af2a123b8858165be15a6c5f966",
        "urls": [
          "bzz-raw://10b01dc36bbbadee42a1acef6ab69f1b5690894fa6edfc8c6cd82d670d5a19c4",
          "dweb:/ipfs/QmUP9dY9ec8AP11xVd4CWHHP7fHU4fGEyz21sBVxVAdFXv"
        ],
        "license": "Apache-2.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
        "urls": [
          "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
          "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
        "urls": [
          "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
          "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
        "urls": [
          "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
          "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f",
        "urls": [
          "bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8",
          "dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
        "urls": [
          "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
          "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "lib/magic-spend/src/MagicSpend.sol": {
        "keccak256": "0x323fa1edd6a244ba3aa23851139d6f97400ce408127a1d23c5c5757d7990071f",
        "urls": [
          "bzz-raw://11dba176aaf1d0fee9f49ddcace4739766ac76ae4f0f7c5899a6f2e0f2499e26",
          "dweb:/ipfs/QmeauuZsss8kAu4u2iPwj8Bg2fCcdtZcHy4sYHqR3Axtn8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f",
        "urls": [
          "bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7",
          "dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53",
        "urls": [
          "bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930",
          "dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/ECDSA.sol": {
        "keccak256": "0x25f0cdc3e2cb2487255ab0c38906a9a31926b793e455e0ed786c235c5d9afdfa",
        "urls": [
          "bzz-raw://384abb403c965f96a602039d5b8825fa3b6acc527f87076252689550a0133c65",
          "dweb:/ipfs/QmejF4CxSad7aYCdr7d9ft73BXRrkWA6DhP7NjZwECfiSX"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a",
        "urls": [
          "bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c",
          "dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SignatureCheckerLib.sol": {
        "keccak256": "0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc",
        "urls": [
          "bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb",
          "dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 0
}
