{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" },
        {
          "name": "maxWithdrawDenominator_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "NAME",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancelOwnershipHandover",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "completeOwnershipHandover",
      "inputs": [
        { "name": "pendingOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "entryPoint",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "entryPointAddStake",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "unstakeDelaySeconds",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "entryPointDeposit",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "entryPointUnlockStake",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "entryPointWithdraw",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address payable" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "entryPointWithdrawStake",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address payable" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getHash",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidWithdrawSignature",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxWithdrawDenominator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nonceUsed",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        { "name": "result", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerWithdraw",
      "inputs": [
        { "name": "asset", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ownershipHandoverExpiresAt",
      "inputs": [
        { "name": "pendingOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "result", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "postOp",
      "inputs": [
        {
          "name": "mode",
          "type": "uint8",
          "internalType": "enum IPaymaster.PostOpMode"
        },
        { "name": "context", "type": "bytes", "internalType": "bytes" },
        {
          "name": "actualGasCost",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "actualUserOpFeePerGas",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "requestOwnershipHandover",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setMaxWithdrawDenominator",
      "inputs": [
        {
          "name": "newDenominator",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validatePaymasterUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "maxCost", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "context", "type": "bytes", "internalType": "bytes" },
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "withdrawRequest",
          "type": "tuple",
          "internalType": "struct MagicSpend.WithdrawRequest",
          "components": [
            { "name": "signature", "type": "bytes", "internalType": "bytes" },
            { "name": "asset", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expiry", "type": "uint48", "internalType": "uint48" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawGasExcess",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "MagicSpendWithdrawal",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "asset",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxWithdrawDenominatorSet",
      "inputs": [
        {
          "name": "newDenominator",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipHandoverCanceled",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipHandoverRequested",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "oldOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AlreadyInitialized", "inputs": [] },
    { "type": "error", "name": "Expired", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidNonce",
      "inputs": [
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "NewOwnerIsZeroAddress", "inputs": [] },
    { "type": "error", "name": "NoExcess", "inputs": [] },
    { "type": "error", "name": "NoHandoverRequest", "inputs": [] },
    {
      "type": "error",
      "name": "RequestLessThanGasMaxCost",
      "inputs": [
        { "name": "requested", "type": "uint256", "internalType": "uint256" },
        { "name": "maxCost", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "Unauthorized", "inputs": [] },
    { "type": "error", "name": "UnexpectedPostOpRevertedMode", "inputs": [] },
    {
      "type": "error",
      "name": "UnsupportedPaymasterAsset",
      "inputs": [
        { "name": "asset", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "WithdrawTooLarge",
      "inputs": [
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "maxAllowed", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "755:703:0:-:0;;;1349:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1421:6;1429:23;5135:32:12;1421:6:0;5135:24:12;:32::i;:::-;5177:51;5204:23;5177:26;:51::i;:::-;5064:171;;1349:107:0;;755:703;;4883:1190:21;-1:-1:-1;;;;;5793:26:21;-1:-1:-1;;5876:29:21;;;5793:26;6031:1;5991:38;6031:1;;5980:63;4883:1190;:::o;14050:182:12:-;14129:22;:39;;;14184:41;;516:25:24;;;14184:41:12;;504:2:24;489:18;14184:41:12;;;;;;;14050:182;:::o;14:351:24:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:24;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:24:o;370:177::-;755:703:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "755:703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12218:302:12;;;;;;;;;;-1:-1:-1;12218:302:12;;;;;:::i;:::-;;:::i;:::-;;;3184:14:24;;3177:22;3159:41;;3147:2;3132:18;12218:302:12;;;;;;;;8062:306;;;;;;;;;;;;;:::i;:::-;;13717:130;;;;;;;;;;-1:-1:-1;13717:130:12;;;;;:::i;:::-;13791:4;13814:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;;;13717:130;9021:617:21;;;:::i;9310:130:12:-;;;;;;;;;;-1:-1:-1;9310:130:12;;;;;:::i;:::-;;:::i;12975:463::-;;;;;;;;;;-1:-1:-1;12975:463:12;;;;;:::i;:::-;;:::i;:::-;;;4242:25:24;;;4230:2;4215:18;12975:463:12;4096:177:24;1624:37:12;;;;;;;;;;;;;;;;5387:1088;;;;;;;;;;-1:-1:-1;5387:1088:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;9720:456:21:-;;;:::i;10687:186:12:-;;;;;;:::i;:::-;;:::i;8762:100:21:-;;;:::i;6512:1288:12:-;;;;;;;;;;-1:-1:-1;6512:1288:12;;;;;:::i;:::-;;:::i;9664:140::-;;;;;;:::i;:::-;;:::i;10055:148::-;;;;;;;;;;-1:-1:-1;10055:148:12;;;;;:::i;:::-;;:::i;11408:182:21:-;;;;;;;;;;-1:-1:-1;11562:11:21;11556:18;11408:182;;;7872:42:24;7860:55;;;7842:74;;7830:2;7815:18;11408:182:21;7696:226:24;1021:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13926:118:12:-;;;;;;;;;;-1:-1:-1;13995:42:12;13926:118;;11001:108;;;;;;;;;;;;;:::i;8530:503::-;;;;;;;;;;-1:-1:-1;8530:503:12;;;;;:::i;:::-;;:::i;11736:137::-;;;;;;;;;;-1:-1:-1;11736:137:12;;;;;:::i;:::-;;:::i;11400:132::-;;;;;;;;;;-1:-1:-1;11400:132:12;;;;;:::i;:::-;;:::i;10363:708:21:-;;;;;;:::i;:::-;;:::i;8348:349::-;;;;;;:::i;:::-;;:::i;11693:435::-;;;;;;;;;;-1:-1:-1;11693:435:21;;;;;:::i;:::-;11963:19;11957:4;11950:33;;;11812:14;11996:26;;;;12106:4;12090:21;;12084:28;;11693:435;1120:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12218:302:12;12354:4;12381:132;12434:7;11562:11:21;11556:18;;11408:182;12434:7:12;12443:33;12451:7;12460:15;12443:7;:33::i;:::-;12478:25;;12381:39;:132::i;:::-;12374:139;;12218:302;;;;;:::o;8062:306::-;8141:10;8110:14;8127:25;;;:13;:25;;;;;;;8237:11;;;8233:34;;8257:10;;;;;;;;;;;;;;8233:34;8299:10;8285:25;;;;:13;:25;;;;;8278:32;;;8320:41;;8354:6;8320:9;:41::i;:::-;8100:268;8062:306::o;9021:617:21:-;9114:15;7972:9;9132:46;;:15;:46;9114:64;;9346:19;9340:4;9333:33;9396:8;9390:4;9383:22;9452:7;9445:4;9439;9429:21;9422:38;9599:8;9552:45;9549:1;9546;9541:67;9248:374;9021:617::o;9310:130:12:-;12517:13:21;:11;:13::i;:::-;9405:28:12::1;9415:5;9422:2;9426:6;9405:9;:28::i;:::-;9310:130:::0;;;:::o;12975:463::-;13267:21;;;;;13306:22;;;;;13346:21;;;;;13385:22;;;;;13152:269;;13188:4;13152:269;;;9342:74:24;;;;9372:42;9452:55;;;9432:18;;;9425:83;;;;13236:13:12;9524:18:24;;;9517:34;;;;9587:55;;;;9567:18;;;9560:83;;;;9659:19;;;9652:35;9703:19;;;9696:35;;;;9780:14;9768:27;9747:19;;;9740:56;13070:7:12;;13096:335;;9314:19:24;;13152:269:12;;;;;;;;;;;;13096:42;:335::i;5387:1088::-;5540:20;5562:22;4787:10;13995:42;4787:26;4783:53;;4822:14;;;;;;;;;;;;;;4783:53;5600:38:::1;5652:23;;::::0;::::1;:6:::0;:23:::1;:::i;:::-;:28;::::0;5676:2:::1;::::0;5652:28;;::::1;:::i;:::-;5641:59;;;;;;;:::i;:::-;5735:22;::::0;::::1;::::0;5600:100;;-1:-1:-1;5772:24:12;;::::1;5768:112;;;5819:50;::::0;::::1;::::0;;::::1;::::0;::::1;10902:25:24::0;;;10943:18;;;10936:34;;;10875:18;;5819:50:12::1;;;;;;;;5768:112;5894:21;::::0;::::1;::::0;:35:::1;;::::0;5890:121:::1;;5978:21;::::0;::::1;::::0;5952:48:::1;::::0;::::1;::::0;;7872:42:24;7860:55;;;5952:48:12::1;::::0;::::1;7842:74:24::0;7815:18;;5952:48:12::1;7696:226:24::0;5890:121:12::1;6021:48;6038:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6053:15;6021:16;:48::i;:::-;6080:14;6098:56;6123:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6138:15;6098:24;:56::i;:::-;6097:57;6080:74;;6239:3;6212:15;:22;;;6204:31;;:38;;6182:9;:17;;6198:1;6182:17;;;6194:1;6182:17;6181:62;;;::::0;-1:-1:-1;6390:24:12::1;6407:7:::0;6390:14;:24:::1;:::i;:::-;6358:13;:28;6372:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6358:28;;;;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6445:7:12;;-1:-1:-1;6454:13:12::1;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6434:34;;;;;;;;11607:25:24::0;;;11680:42;11668:55;11663:2;11648:18;;11641:83;11595:2;11580:18;;11433:297;6434:34:12::1;;;;;;;;;;;;;6424:44;;5590:885;;;5387:1088:::0;;;;;;:::o;9720:456:21:-;9922:19;9916:4;9909:33;9968:8;9962:4;9955:22;10020:1;10013:4;10007;9997:21;9990:32;10151:8;10105:44;10102:1;10099;10094:66;9720:456::o;10687:186:12:-;12517:13:21;:11;:13::i;:::-;13995:42:12;10796:70:::1;::::0;;;;::::1;11897:23:24::0;;10796:70:12::1;::::0;::::1;11879:42:24::0;10796:34:12::1;::::0;;;::::1;::::0;::::1;::::0;10838:6;;11852:18:24;;10796:70:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10687:186:::0;;:::o;8762:100:21:-;12517:13;:11;:13::i;:::-;8834:21:::1;8852:1;8834:9;:21::i;:::-;8762:100::o:0;6512:1288:12:-;4787:10;13995:42;4787:26;4783:53;;4822:14;;;;;;;;;;;;;;4783:53;7109:25:::1;7101:4;:33;;;;;;;;:::i;:::-;::::0;7097:101:::1;;7157:30;;;;;;;;;;;;;;7097:101;7209:18;::::0;7248:39:::1;::::0;;::::1;7259:7:::0;7248:39:::1;:::i;:::-;7208:79:::0;;-1:-1:-1;7208:79:12;-1:-1:-1;7455:20:12::1;7504:26;7517:13:::0;7208:79;7504:26:::1;:::i;:::-;7478:22;::::0;::::1;;::::0;;;:13:::1;:22;::::0;;;;;:53:::1;::::0;;::::1;:::i;:::-;7609:22;::::0;::::1;;::::0;;;:13:::1;:22;::::0;;;;7602:29;7455:76;-1:-1:-1;7645:16:12;;7641:153:::1;;7677:106;7714:7;7723:12;1932:4:22;7677:36:12;:106::i;:::-;6696:1104;;;6512:1288:::0;;;;;:::o;9664:140::-;12517:13:21;:11;:13::i;:::-;9744:53:12::1;13995:42:::0;9790:6:::1;9744:31;:53::i;10055:148::-:0;12517:13:21;:11;:13::i;:::-;13995:42:12;10148:48:::1;::::0;;;;:36:::1;12709:55:24::0;;;10148:48:12::1;::::0;::::1;12691:74:24::0;12781:18;;;12774:34;;;10148:36:12;;;::::1;::::0;::::1;::::0;12664:18:24;;10148:48:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10055:148:::0;;:::o;11001:108::-;12517:13:21;:11;:13::i;:::-;13995:42:12;11063:37:::1;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11001:108::o:0;8530:503::-;8629:15;:22;;;8611:40;;:15;:40;8607:87;;;8674:9;;;;;;;;;;;;;;8607:87;8709:53;8734:10;8746:15;8709:24;:53::i;:::-;8704:110;;8785:18;;;;;;;;;;;;;;8704:110;8824:45;8841:10;8853:15;8824:16;:45::i;:::-;8958:68;8968:15;:21;;;8991:10;9003:15;:22;;;8958:9;:68::i;11736:137::-;12517:13:21;:11;:13::i;:::-;11824:42:12::1;11851:14;11824:26;:42::i;11400:132::-:0;12517:13:21;:11;:13::i;:::-;13995:42:12;11482:43:::1;::::0;;;;:39:::1;7860:55:24::0;;;11482:43:12::1;::::0;::::1;7842:74:24::0;11482:39:12;;;::::1;::::0;::::1;::::0;7815:18:24;;11482:43:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11400:132:::0;:::o;10363:708:21:-;12517:13;:11;:13::i;:::-;10597:19:::1;10591:4;10584:33;10643:12;10637:4;10630:26;10705:4;10699;10689:21;10811:12;10805:19;10792:11;10789:36;10786:157;;;10857:10;10851:4;10844:24;10924:4;10918;10911:18;10786:157;11020:1;10999:23:::0;;11041::::1;11051:12:::0;11041:9:::1;:23::i;8348:349::-:0;12517:13;:11;:13::i;:::-;8520:8:::1;8516:2;8512:17;8502:150;;8562:10;8556:4;8549:24;8633:4;8627;8620:18;8502:150;8671:19;8681:8;8671:9;:19::i;1980:4154:23:-:0;2295:24;;;;;2110:12;2322:6;2279:3839;;;2365:4;2359:11;2400:4;2394;2387:18;2456:4;2445:9;2441:20;2435:27;2429:4;2422:41;2512:2;2500:9;2494:16;2491:24;2488:1077;;2569:4;2558:9;2554:20;2548:27;2627:2;2622;2617:3;2613:12;2609:21;2603:4;2596:35;2687:2;2684:1;2680:10;2677:1;2673:18;2667:4;2660:32;;3089:4;3035;2983;2930;2872:1;2794:5;2754:384;3309:1;3303:8;3295:6;3291:21;3272:16;3265:24;3262:51;3252:295;;-1:-1:-1;3391:1:23;3385:4;3378:15;3451:4;3444:15;-1:-1:-1;3352:1:23;3520:5;;3252:295;;2488:1077;3606:2;3594:9;3588:16;3585:24;3582:1043;;3674:4;3663:9;3659:20;3653:27;3650:1;3645:36;3639:4;3632:50;3745:4;3734:9;3730:20;3724:27;3718:4;3711:41;4149:4;4095;4043;3990;3932:1;3854:5;3814:384;4369:1;4363:8;4355:6;4351:21;4332:16;4325:24;4322:51;4312:295;;-1:-1:-1;4451:1:23;4445:4;4438:15;4511:4;4504:15;-1:-1:-1;4412:1:23;4580:5;;4312:295;;3582:1043;4655:1;4649:4;4642:15;4713:1;4707:4;4700:15;4787:10;4782:3;4778:20;4825:1;4822;4815:12;4924:4;4917;4914:1;4910:12;4903:26;4962:4;4959:1;4955:12;4994:4;4991:1;4984:15;5137:9;5131:16;5125:4;5121:27;5218:1;5211:4;5208:1;5204:12;5201:1;5190:9;5187:1;5180:5;5169:51;5165:56;;6004:4;5952:1;5888:4;5870:16;5866:27;5806:1;5749:6;5700:5;5664:400;5418:8;;5415:15;;;5296:786;;-1:-1:-1;;2279:3839:23;1980:4154;;;;;:::o;15667:258:12:-;15752:19;;;15748:171;;15787:43;15819:2;15823:6;15787:31;:43::i;15748:171::-;15861:47;15890:5;15897:2;15901:6;15861:28;:47::i;7292:355:21:-;7504:11;7498:18;7488:8;7485:32;7475:156;;7550:10;7544:4;7537:24;7612:4;7606;7599:18;31050:1106:23;31121:14;31234:1;31228:8;31258:4;31285:32;31282:1;31275:43;31376:4;31370;31363:18;31503:7;31485:210;31548:1;31545;31541:9;31536:14;;31596:2;31590:4;31586:13;31582:2;31578:22;31575:1;31567:34;31636:2;31626:13;;31656:25;31485:210;31656:25;-1:-1:-1;31721:4:23;31717:12;31927:4;31921:11;;31903:16;31885;31870:63;31972:8;;31965:4;31959:11;31956:25;31946:36;;32070:15;;;32059:4;32055:12;;;;32048:20;;32038:48;32099:18;;-1:-1:-1;32038:48:23;31050:1106::o;14576:736:12:-;14693:21;;;;14682:33;;;;:10;:33;;;;;;;;:42;;;;;;;;;;;;;14678:115;;;14760:15;:21;;;14747:35;;;;;;;;;4242:25:24;;4230:2;4215:18;;4096:177;14678:115:12;14803:18;14848:22;;14824:46;;:21;:46;:::i;:::-;14884:21;;;;14803:67;;-1:-1:-1;14884:35:12;;;:74;;;;;14948:10;14923:15;:22;;;:35;14884:74;14880:164;;;14998:15;:22;;;15022:10;14981:52;;;;;;;;;;;10902:25:24;;;10958:2;10943:18;;10936:34;10890:2;10875:18;;10728:248;14880:164:12;15065:21;;;;;15054:33;;;;:10;:33;;;;;;;;:42;;;;;;;;;;;;;;:49;;;;15099:4;15054:49;;;15236:21;;;;15259:22;;;;15283:21;;15206:99;;;;;15054:42;;15206:99;;;;15259:22;10902:25:24;;10958:2;10943:18;;10936:34;10890:2;10875:18;;10728:248;15206:99:12;;;;;;;;14668:644;14576:736;;:::o;6145:1089:21:-;6857:11;7093:16;;6941:26;;;;;;;7053:38;7050:1;;7042:78;7177:27;6145:1089::o;4932:731:22:-;5116:6;5101:13;5098:25;5095:146;;;5155:10;5149:4;5142:24;5222:4;5216;5209:18;5095:146;5323:4;5311:10;5305:4;5293:10;5285:6;5281:2;5269:10;5264:64;5254:393;;5361:2;5355:4;5348:16;5434:4;5428;5420:19;5490:4;5484;5476:19;5569:4;5563;5555:6;5548:26;5538:72;;5597:10;5585;5578:30;4031:342;4233:4;4221:10;4215:4;4203:10;4195:6;4191:2;4184:5;4179:59;4169:188;;4271:10;4265:4;4258:24;4338:4;4332;4325:18;4169:188;4031:342;;:::o;14050:182:12:-;14129:22;:39;;;14184:41;;4242:25:24;;;14184:41:12;;4230:2:24;4215:18;14184:41:12;;;;;;;14050:182;:::o;13466:939:22:-;13629:2;13623:4;13616:16;13686:6;13680:4;13673:20;13751:34;13745:4;13738:48;14140:4;14134;14128;14122;14119:1;14112:5;14105;14100:45;14034:16;14027:24;14023:1;14016:4;14010:11;14007:18;14004:48;13919:244;13892:400;;14209:10;14203:4;14196:24;14273:4;14267;14260:18;13892:400;14318:1;14312:4;14305:15;13466:939;;;:::o;14:154:24:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:184::-;364:77;361:1;354:88;461:4;458:1;451:15;485:4;482:1;475:15;501:253;573:2;567:9;615:4;603:17;;650:18;635:34;;671:22;;;632:62;629:88;;;697:18;;:::i;:::-;733:2;726:22;501:253;:::o;759:334::-;830:2;824:9;886:2;876:13;;891:66;872:86;860:99;;989:18;974:34;;1010:22;;;971:62;968:88;;;1036:18;;:::i;:::-;1072:2;1065:22;759:334;;-1:-1:-1;759:334:24:o;1098:167::-;1165:20;;1225:14;1214:26;;1204:37;;1194:65;;1255:1;1252;1245:12;1270:1243;1332:5;1380:4;1368:9;1363:3;1359:19;1355:30;1352:50;;;1398:1;1395;1388:12;1352:50;1420:22;;:::i;:::-;1411:31;;1478:9;1465:23;1511:18;1503:6;1500:30;1497:50;;;1543:1;1540;1533:12;1497:50;1566:22;;1619:4;1611:13;;1607:23;-1:-1:-1;1597:51:24;;1644:1;1641;1634:12;1597:51;1684:2;1671:16;1710:18;1702:6;1699:30;1696:56;;;1732:18;;:::i;:::-;1774:118;1886:4;1817:66;1810:4;1802:6;1798:17;1794:90;1790:101;1774:118;:::i;:::-;1915:6;1908:5;1901:21;1965:3;1958:4;1949:6;1945:2;1941:15;1937:26;1934:35;1931:55;;;1982:1;1979;1972:12;1931:55;2041:6;2034:4;2030:2;2026:13;2019:4;2012:5;2008:16;1995:53;2095:1;2088:4;2079:6;2072:5;2068:18;2064:29;2057:40;2120:5;2113;2106:20;;;;2160:40;2194:4;2183:9;2179:20;2160:40;:::i;:::-;2153:4;2142:16;;2135:66;2274:2;2259:18;;;2246:32;2294:14;;;2287:31;2391:2;2376:18;;;2363:32;2411:14;;;2404:31;2468:38;2501:3;2486:19;;2468:38;:::i;:::-;2462:3;2455:5;2451:15;2444:63;1270:1243;;;;:::o;2518:496::-;2619:6;2627;2680:2;2668:9;2659:7;2655:23;2651:32;2648:52;;;2696:1;2693;2686:12;2648:52;2735:9;2722:23;2754:31;2779:5;2754:31;:::i;:::-;2804:5;-1:-1:-1;2860:2:24;2845:18;;2832:32;2887:18;2876:30;;2873:50;;;2919:1;2916;2909:12;2873:50;2942:66;3000:7;2991:6;2980:9;2976:22;2942:66;:::i;:::-;2932:76;;;2518:496;;;;;:::o;3211:367::-;3279:6;3287;3340:2;3328:9;3319:7;3315:23;3311:32;3308:52;;;3356:1;3353;3346:12;3308:52;3395:9;3382:23;3414:31;3439:5;3414:31;:::i;:::-;3464:5;3542:2;3527:18;;;;3514:32;;-1:-1:-1;;;3211:367:24:o;3583:508::-;3660:6;3668;3676;3729:2;3717:9;3708:7;3704:23;3700:32;3697:52;;;3745:1;3742;3735:12;3697:52;3784:9;3771:23;3803:31;3828:5;3803:31;:::i;:::-;3853:5;-1:-1:-1;3910:2:24;3895:18;;3882:32;3923:33;3882:32;3923:33;:::i;:::-;3583:508;;3975:7;;-1:-1:-1;;;4055:2:24;4040:18;;;;4027:32;;3583:508::o;4460:581::-;4576:6;4584;4592;4645:2;4633:9;4624:7;4620:23;4616:32;4613:52;;;4661:1;4658;4651:12;4613:52;4701:9;4688:23;4734:18;4726:6;4723:30;4720:50;;;4766:1;4763;4756:12;4720:50;4789:22;;4845:3;4827:16;;;4823:26;4820:46;;;4862:1;4859;4852:12;4820:46;4885:2;4934;4919:18;;4906:32;;-1:-1:-1;5007:2:24;4992:18;;;4979:32;;4460:581;-1:-1:-1;;;4460:581:24:o;5046:347::-;5087:3;5125:5;5119:12;5152:6;5147:3;5140:19;5208:6;5201:4;5194:5;5190:16;5183:4;5178:3;5174:14;5168:47;5260:1;5253:4;5244:6;5239:3;5235:16;5231:27;5224:38;5382:4;5312:66;5307:2;5299:6;5295:15;5291:88;5286:3;5282:98;5278:109;5271:116;;;5046:347;;;;:::o;5398:288::-;5573:2;5562:9;5555:21;5536:4;5593:44;5633:2;5622:9;5618:18;5610:6;5593:44;:::i;:::-;5585:52;;5673:6;5668:2;5657:9;5653:18;5646:34;5398:288;;;;;:::o;5691:398::-;5758:6;5766;5819:2;5807:9;5798:7;5794:23;5790:32;5787:52;;;5835:1;5832;5825:12;5787:52;5880:23;;;-1:-1:-1;5979:2:24;5964:18;;5951:32;6027:10;6014:24;;6002:37;;5992:65;;6053:1;6050;6043:12;5992:65;6076:7;6066:17;;;5691:398;;;;;:::o;6094:986::-;6206:6;6214;6222;6230;6238;6291:3;6279:9;6270:7;6266:23;6262:33;6259:53;;;6308:1;6305;6298:12;6259:53;6347:9;6334:23;6386:1;6379:5;6376:12;6366:40;;6402:1;6399;6392:12;6366:40;6425:5;-1:-1:-1;6481:2:24;6466:18;;6453:32;6508:18;6497:30;;6494:50;;;6540:1;6537;6530:12;6494:50;6563:22;;6616:4;6608:13;;6604:27;-1:-1:-1;6594:55:24;;6645:1;6642;6635:12;6594:55;6685:2;6672:16;6711:18;6703:6;6700:30;6697:50;;;6743:1;6740;6733:12;6697:50;6788:7;6783:2;6774:6;6770:2;6766:15;6762:24;6759:37;6756:57;;;6809:1;6806;6799:12;6756:57;6094:986;;6840:2;6832:11;;;;;-1:-1:-1;6862:6:24;;6941:2;6926:18;;6913:32;;7044:2;7029:18;;;7016:32;;-1:-1:-1;6094:986:24;-1:-1:-1;;;6094:986:24:o;7085:226::-;7144:6;7197:2;7185:9;7176:7;7172:23;7168:32;7165:52;;;7213:1;7210;7203:12;7165:52;-1:-1:-1;7258:23:24;;7085:226;-1:-1:-1;7085:226:24:o;7927:219::-;8076:2;8065:9;8058:21;8039:4;8096:44;8136:2;8125:9;8121:18;8113:6;8096:44;:::i;8151:361::-;8243:6;8296:2;8284:9;8275:7;8271:23;8267:32;8264:52;;;8312:1;8309;8302:12;8264:52;8352:9;8339:23;8385:18;8377:6;8374:30;8371:50;;;8417:1;8414;8407:12;8371:50;8440:66;8498:7;8489:6;8478:9;8474:22;8440:66;:::i;:::-;8430:76;8151:361;-1:-1:-1;;;;8151:361:24:o;8517:255::-;8584:6;8637:2;8625:9;8616:7;8612:23;8608:32;8605:52;;;8653:1;8650;8643:12;8605:52;8692:9;8679:23;8711:31;8736:5;8711:31;:::i;9807:580::-;9884:4;9890:6;9950:11;9937:25;10040:66;10029:8;10013:14;10009:29;10005:102;9985:18;9981:127;9971:155;;10122:1;10119;10112:12;9971:155;10149:33;;10201:20;;;-1:-1:-1;10244:18:24;10233:30;;10230:50;;;10276:1;10273;10266:12;10230:50;10309:4;10297:17;;-1:-1:-1;10340:14:24;10336:27;;;10326:38;;10323:58;;;10377:1;10374;10367:12;10323:58;9807:580;;;;;:::o;10392:331::-;10497:9;10508;10550:8;10538:10;10535:24;10532:44;;;10572:1;10569;10562:12;10532:44;10601:6;10591:8;10588:20;10585:40;;;10621:1;10618;10611:12;10585:40;-1:-1:-1;;10647:23:24;;;10692:25;;;;;-1:-1:-1;10392:331:24:o;10981:184::-;11033:77;11030:1;11023:88;11130:4;11127:1;11120:15;11154:4;11151:1;11144:15;11170:128;11237:9;;;11258:11;;;11255:37;;;11272:18;;:::i;11303:125::-;11368:9;;;11389:10;;;11386:36;;;11402:18;;:::i;11932:184::-;11984:77;11981:1;11974:88;12081:4;12078:1;12071:15;12105:4;12102:1;12095:15;12121:375;12197:6;12205;12258:2;12246:9;12237:7;12233:23;12229:32;12226:52;;;12274:1;12271;12264:12;12226:52;12319:23;;;-1:-1:-1;12418:2:24;12403:18;;12390:32;12431:33;12390:32;12431:33;:::i;13066:274::-;13106:1;13132;13122:189;;13167:77;13164:1;13157:88;13268:4;13265:1;13258:15;13296:4;13293:1;13286:15;13122:189;-1:-1:-1;13325:9:24;;13066:274::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "VERSION()": "ffa1ad74",
    "cancelOwnershipHandover()": "54d1f13d",
    "completeOwnershipHandover(address)": "f04e283e",
    "entryPoint()": "b0d691fe",
    "entryPointAddStake(uint256,uint32)": "5b34b272",
    "entryPointDeposit(uint256)": "7c8d4949",
    "entryPointUnlockStake()": "b175512b",
    "entryPointWithdraw(address,uint256)": "88202489",
    "entryPointWithdrawStake(address)": "edceadb6",
    "getHash(address,(bytes,address,uint256,uint256,uint48))": "34b5a077",
    "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": "056819be",
    "maxWithdrawDenominator()": "4d2b3f06",
    "nonceUsed(address,uint256)": "1647795e",
    "owner()": "8da5cb5b",
    "ownerWithdraw(address,address,uint256)": "2bcaa0e2",
    "ownershipHandoverExpiresAt(address)": "fee81cf4",
    "postOp(uint8,bytes,uint256,uint256)": "7c627b21",
    "renounceOwnership()": "715018a6",
    "requestOwnershipHandover()": "25692962",
    "setMaxWithdrawDenominator(uint256)": "ebdbc678",
    "transferOwnership(address)": "f2fde38b",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "52b7512c",
    "withdraw((bytes,address,uint256,uint256,uint48))": "d833caee",
    "withdrawGasExcess()": "0acf2ac8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawDenominator_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExcess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHandoverRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"RequestLessThanGasMaxCost\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedPostOpRevertedMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"UnsupportedPaymasterAsset\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllowed\",\"type\":\"uint256\"}],\"name\":\"WithdrawTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"MagicSpendWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawDenominatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySeconds\",\"type\":\"uint32\"}],\"name\":\"entryPointAddStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"entryPointDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPointUnlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"entryPointWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"entryPointWithdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"isValidWithdrawSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"nonceUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdrawDenominator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"internalType\":\"struct MagicSpend.WithdrawRequest\",\"name\":\"withdrawRequest\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGasExcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"details\":\"Cannot double-initialize.\"}],\"InvalidNonce(uint256)\":[{\"params\":{\"nonce\":\"The already used nonce.\"}}],\"InvalidSignature()\":[{\"details\":\"The withdraw request signature MUST be:         - an ECDSA signature following EIP-191 (version 0x45)         - performed over the content specified in `getHash()`         - signed by the current owner of this contract\"}],\"NewOwnerIsZeroAddress()\":[{\"details\":\"The `newOwner` cannot be the zero address.\"}],\"NoHandoverRequest()\":[{\"details\":\"The `pendingOwner` does not have a valid handover request.\"}],\"RequestLessThanGasMaxCost(uint256,uint256)\":[{\"params\":{\"maxCost\":\"The max gas cost required by the Entrypoint.\",\"requested\":\"The withdraw request amount.\"}}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}],\"UnexpectedPostOpRevertedMode()\":[{\"details\":\"This should only really occur if, for unknown reasons, the transfer of the withdrawable      funds to the user account failed (i.e. this contract's ETH balance is insufficient or      the user account refused the funds or ran out of gas on receive).\"}],\"UnsupportedPaymasterAsset(address)\":[{\"params\":{\"asset\":\"The requested asset.\"}}],\"WithdrawTooLarge(uint256,uint256)\":[{\"params\":{\"maxAllowed\":\"The current max allowed withdraw.\",\"requestedAmount\":\"The requested amount excluding gas.\"}}]},\"events\":{\"MagicSpendWithdrawal(address,address,uint256,uint256)\":{\"params\":{\"account\":\"The account address.\",\"amount\":\"The amount withdrawn.\",\"asset\":\"The asset withdrawn.\",\"nonce\":\"The request nonce.\"}},\"MaxWithdrawDenominatorSet(uint256)\":{\"params\":{\"newDenominator\":\"The new maxWithdrawDenominator value.\"}},\"OwnershipHandoverCanceled(address)\":{\"details\":\"The ownership handover to `pendingOwner` has been canceled.\"},\"OwnershipHandoverRequested(address)\":{\"details\":\"An ownership handover to `pendingOwner` has been requested.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event.\"}},\"kind\":\"dev\",\"methods\":{\"cancelOwnershipHandover()\":{\"details\":\"Cancels the two-step ownership handover to the caller, if any.\"},\"completeOwnershipHandover(address)\":{\"details\":\"Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`.\"},\"entryPointAddStake(uint256,uint32)\":{\"details\":\"Reverts if not called by the owner of the contract. Calling this while an unstake      is pending will first cancel the pending unstake.\",\"params\":{\"amount\":\"The amount to stake in the Entrypoint.\",\"unstakeDelaySeconds\":\"The duration for which the stake cannot be withdrawn. Must be                            equal to or greater than the current unstake delay.\"}},\"entryPointDeposit(uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to deposit on the the Entrypoint.\"}},\"entryPointUnlockStake()\":{\"details\":\"Reverts if not called by the owner of the contract.\"},\"entryPointWithdraw(address,uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to withdraw from the Entrypoint.\",\"to\":\"The beneficiary address.\"}},\"entryPointWithdrawStake(address)\":{\"details\":\"Reverts if not called by the owner of the contract. Only call this after the unstake delay      has passed since the last `entryPointUnlockStake` call.\",\"params\":{\"to\":\"The beneficiary address.\"}},\"getHash(address,(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Returns an EIP-191 compliant Ethereum Signed Message (version 0x45), see      https://eips.ethereum.org/EIPS/eip-191.\",\"params\":{\"account\":\"The account address.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"The hash to be signed for the given `account` and `withdrawRequest`.\"}},\"isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))\":{\"details\":\"Does not validate nonce or expiry.\",\"params\":{\"account\":\"The account address.\",\"withdrawRequest\":\"The withdraw request.\"},\"returns\":{\"_0\":\"`true` if the signature is valid, else `false`.\"}},\"nonceUsed(address,uint256)\":{\"params\":{\"account\":\"The account address.\",\"nonce\":\"The nonce to check.\"},\"returns\":{\"_0\":\"`true` if the nonce has already been used by the account, else `false`.\"}},\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"ownerWithdraw(address,address,uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"amount\":\"The amount to withdraw.\",\"asset\":\"The asset to withdraw.\",\"to\":\"The beneficiary address.\"}},\"ownershipHandoverExpiresAt(address)\":{\"details\":\"Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Allows the owner to renounce their ownership.\"},\"requestOwnershipHandover()\":{\"details\":\"Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default.\"},\"setMaxWithdrawDenominator(uint256)\":{\"details\":\"Reverts if not called by the owner of the contract.\",\"params\":{\"newDenominator\":\"The new value for maxWithdrawDenominator.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer the ownership to `newOwner`.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdraw((bytes,address,uint256,uint256,uint48))\":{\"params\":{\"withdrawRequest\":\"The withdraw request.\"}},\"withdrawGasExcess()\":{\"details\":\"Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint).\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Expired()\":[{\"notice\":\"Thrown when trying to use a withdraw request after its expiry has been reached.\"}],\"InvalidNonce(uint256)\":[{\"notice\":\"Thrown when trying to replay a withdraw request with the same nonce.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the withdraw request signature is invalid.\"}],\"NoExcess()\":[{\"notice\":\"Thrown when trying to withdraw funds but nothing is available.\"}],\"RequestLessThanGasMaxCost(uint256,uint256)\":[{\"notice\":\"Thrown during validation in the context of ERC4337, when the withdraw request amount is insufficient         to sponsor the transaction gas.\"}],\"UnexpectedPostOpRevertedMode()\":[{\"notice\":\"Thrown when `postOp()` is called a second time with `PostOpMode.postOpReverted`.\"}],\"UnsupportedPaymasterAsset(address)\":[{\"notice\":\"Thrown when the withdraw request `asset` is not ETH (zero address).\"}],\"WithdrawTooLarge(uint256,uint256)\":[{\"notice\":\"Thrown if WithdrawRequest.amount exceeds address(this).balance / maxWithdrawDenominator.\"}]},\"events\":{\"MagicSpendWithdrawal(address,address,uint256,uint256)\":{\"notice\":\"Emitted after validating a withdraw request and funds are about to be withdrawn.\"},\"MaxWithdrawDenominatorSet(uint256)\":{\"notice\":\"Emitted when the `maxWithdrawDenominator` is set.\"}},\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"The name for this contract\"},\"VERSION()\":{\"notice\":\"The version for this contract\"},\"entryPoint()\":{\"notice\":\"Returns the canonical ERC-4337 EntryPoint v0.6 contract.\"},\"entryPointAddStake(uint256,uint32)\":{\"notice\":\"Adds stake to the EntryPoint.\"},\"entryPointDeposit(uint256)\":{\"notice\":\"Transfers ETH from this contract into the EntryPoint.\"},\"entryPointUnlockStake()\":{\"notice\":\"Unlocks stake in the EntryPoint.\"},\"entryPointWithdraw(address,uint256)\":{\"notice\":\"Withdraws ETH from the EntryPoint.\"},\"entryPointWithdrawStake(address)\":{\"notice\":\"Withdraws stake from the EntryPoint.\"},\"getHash(address,(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns the hash to be signed for a given `account` and `withdrawRequest` pair.\"},\"isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Returns whether the `withdrawRequest` signature is valid for the given `account`.\"},\"maxWithdrawDenominator()\":{\"notice\":\"address(this).balance divided by maxWithdrawDenominator expresses the max WithdrawRequest.amount allowed for a native asset withdraw.\"},\"nonceUsed(address,uint256)\":{\"notice\":\"Returns whether the `nonce` has been used by the given `account`.\"},\"ownerWithdraw(address,address,uint256)\":{\"notice\":\"Withdraws funds from this contract.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"setMaxWithdrawDenominator(uint256)\":{\"notice\":\"Sets maxWithdrawDenominator.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdraw((bytes,address,uint256,uint256,uint48))\":{\"notice\":\"Allows the caller to withdraw funds by calling with a valid `withdrawRequest`.\"},\"withdrawGasExcess()\":{\"notice\":\"Allows the sender to withdraw any available funds associated with their account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/LightPaymaster.sol\":\"LightPaymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@/bytecodes/=contracts/bytecodes/\",\":@/circuits/=contracts/circuits/\",\":@/constants/=contracts/constants/\",\":@/contracts/=contracts/src/\",\":@/script/=contracts/script/\",\":@/test/=contracts/test/\",\":@0xsequence/wallet-contracts/=lib/wallet-contracts/\",\":@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/\",\":@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/\",\":@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":@asynchronous-vault/=lib/asynchronous-vault/src/\",\":@biconomy/account-contracts/=lib/scw-contracts/\",\":@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/\",\":@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/\",\":@eth-infinitism/account-abstraction/=lib/account-abstraction/\",\":@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/\",\":@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/\",\":@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/\",\":@safe-global/safe-contracts/=lib/safe-contracts/\",\":@source/=lib/soul-wallet-contract/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@zerodevapp/contracts/=lib/kernel/src/\",\":account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/\",\":account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":asynchronous-vault/=lib/asynchronous-vault/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":magic-spend/=lib/magic-spend/src/\",\":murky/=lib/murky/src/\",\":nexus/=lib/nexus/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":seaport/=lib/seaport/\",\":singleton-paymaster/=lib/singleton-paymaster/src/\",\":solady/=lib/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solmate/=lib/solmate/src/\",\":src/=lib/kernel/src/\",\":surl/=lib/surl/src/\"]},\"sources\":{\"contracts/src/LightPaymaster.sol\":{\"keccak256\":\"0xf5ad98df632c324b83fc39a637c869c2a6c070fec87b00f21bc9f8a05bc2b46f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a0e68d1eb8b4550d58419f9d343b880f08d48a3e55ac8bd79f836d9587d65405\",\"dweb:/ipfs/QmRCCarw6GfMzbV87XYkG6L8Uyu1C3VH16MMtjA2L2ak1d\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/magic-spend/src/MagicSpend.sol\":{\"keccak256\":\"0x951776de6531c0909bbc77118275b734bfecd31f033e40d4f078a38cfeaba049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39239dd66d9e4325810b26101b7386c43d29abdc8679cf235992bab3692942b3\",\"dweb:/ipfs/QmVEWGiNJysUfzkatLUtC1k9RZLTjS4pBuS9B3d877GxaZ\"]},\"lib/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3\",\"dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]},\"lib/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb\",\"dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" },
            {
              "internalType": "uint256",
              "name": "maxWithdrawDenominator_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "AlreadyInitialized" },
        { "inputs": [], "type": "error", "name": "Expired" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidNonce"
        },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "NewOwnerIsZeroAddress" },
        { "inputs": [], "type": "error", "name": "NoExcess" },
        { "inputs": [], "type": "error", "name": "NoHandoverRequest" },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "maxCost", "type": "uint256" }
          ],
          "type": "error",
          "name": "RequestLessThanGasMaxCost"
        },
        { "inputs": [], "type": "error", "name": "Unauthorized" },
        {
          "inputs": [],
          "type": "error",
          "name": "UnexpectedPostOpRevertedMode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "asset", "type": "address" }
          ],
          "type": "error",
          "name": "UnsupportedPaymasterAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WithdrawTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MagicSpendWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxWithdrawDenominatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "completeOwnershipHandover"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "uint32",
              "name": "unstakeDelaySeconds",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "entryPointAddStake"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "entryPointDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointUnlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "entryPointWithdrawStake"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidWithdrawSignature",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdrawDenominator",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonceUsed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "result", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "asset", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ownerWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipHandoverExpiresAt",
          "outputs": [
            { "internalType": "uint256", "name": "result", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            { "internalType": "bytes", "name": "context", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actualUserOpFeePerGas",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "requestOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxWithdrawDenominator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "uint256", "name": "maxCost", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            { "internalType": "bytes", "name": "context", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MagicSpend.WithdrawRequest",
              "name": "withdrawRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                { "internalType": "uint48", "name": "expiry", "type": "uint48" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawGasExcess"
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancelOwnershipHandover()": {
            "details": "Cancels the two-step ownership handover to the caller, if any."
          },
          "completeOwnershipHandover(address)": {
            "details": "Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`."
          },
          "entryPointAddStake(uint256,uint32)": {
            "details": "Reverts if not called by the owner of the contract. Calling this while an unstake      is pending will first cancel the pending unstake.",
            "params": {
              "amount": "The amount to stake in the Entrypoint.",
              "unstakeDelaySeconds": "The duration for which the stake cannot be withdrawn. Must be                            equal to or greater than the current unstake delay."
            }
          },
          "entryPointDeposit(uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to deposit on the the Entrypoint."
            }
          },
          "entryPointUnlockStake()": {
            "details": "Reverts if not called by the owner of the contract."
          },
          "entryPointWithdraw(address,uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to withdraw from the Entrypoint.",
              "to": "The beneficiary address."
            }
          },
          "entryPointWithdrawStake(address)": {
            "details": "Reverts if not called by the owner of the contract. Only call this after the unstake delay      has passed since the last `entryPointUnlockStake` call.",
            "params": { "to": "The beneficiary address." }
          },
          "getHash(address,(bytes,address,uint256,uint256,uint48))": {
            "details": "Returns an EIP-191 compliant Ethereum Signed Message (version 0x45), see      https://eips.ethereum.org/EIPS/eip-191.",
            "params": {
              "account": "The account address.",
              "withdrawRequest": "The withdraw request."
            },
            "returns": {
              "_0": "The hash to be signed for the given `account` and `withdrawRequest`."
            }
          },
          "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": {
            "details": "Does not validate nonce or expiry.",
            "params": {
              "account": "The account address.",
              "withdrawRequest": "The withdraw request."
            },
            "returns": {
              "_0": "`true` if the signature is valid, else `false`."
            }
          },
          "nonceUsed(address,uint256)": {
            "params": {
              "account": "The account address.",
              "nonce": "The nonce to check."
            },
            "returns": {
              "_0": "`true` if the nonce has already been used by the account, else `false`."
            }
          },
          "owner()": { "details": "Returns the owner of the contract." },
          "ownerWithdraw(address,address,uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "amount": "The amount to withdraw.",
              "asset": "The asset to withdraw.",
              "to": "The beneficiary address."
            }
          },
          "ownershipHandoverExpiresAt(address)": {
            "details": "Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
          },
          "postOp(uint8,bytes,uint256,uint256)": {
            "params": {
              "actualGasCost": "- Actual gas used so far (without this postOp call).",
              "actualUserOpFeePerGas": "- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.",
              "context": "- The context value returned by validatePaymasterUserOp",
              "mode": "- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp()."
            }
          },
          "renounceOwnership()": {
            "details": "Allows the owner to renounce their ownership."
          },
          "requestOwnershipHandover()": {
            "details": "Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default."
          },
          "setMaxWithdrawDenominator(uint256)": {
            "details": "Reverts if not called by the owner of the contract.",
            "params": {
              "newDenominator": "The new value for maxWithdrawDenominator."
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the owner to transfer the ownership to `newOwner`."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "- The maximum cost of this transaction (based on maximum gas and gas price from userOp).",
              "userOp": "- The user operation.",
              "userOpHash": "- Hash of the user's request data."
            },
            "returns": {
              "context": "       - Value to send to a postOp. Zero length to signify postOp is not required.",
              "validationData": "- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdraw((bytes,address,uint256,uint256,uint48))": {
            "params": { "withdrawRequest": "The withdraw request." }
          },
          "withdrawGasExcess()": {
            "details": "Can be called back during the `UserOperation` execution to sponsor funds for non-gas related      use cases (e.g., swap or mint)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NAME()": { "notice": "The name for this contract" },
          "VERSION()": { "notice": "The version for this contract" },
          "entryPoint()": {
            "notice": "Returns the canonical ERC-4337 EntryPoint v0.6 contract."
          },
          "entryPointAddStake(uint256,uint32)": {
            "notice": "Adds stake to the EntryPoint."
          },
          "entryPointDeposit(uint256)": {
            "notice": "Transfers ETH from this contract into the EntryPoint."
          },
          "entryPointUnlockStake()": {
            "notice": "Unlocks stake in the EntryPoint."
          },
          "entryPointWithdraw(address,uint256)": {
            "notice": "Withdraws ETH from the EntryPoint."
          },
          "entryPointWithdrawStake(address)": {
            "notice": "Withdraws stake from the EntryPoint."
          },
          "getHash(address,(bytes,address,uint256,uint256,uint48))": {
            "notice": "Returns the hash to be signed for a given `account` and `withdrawRequest` pair."
          },
          "isValidWithdrawSignature(address,(bytes,address,uint256,uint256,uint48))": {
            "notice": "Returns whether the `withdrawRequest` signature is valid for the given `account`."
          },
          "maxWithdrawDenominator()": {
            "notice": "address(this).balance divided by maxWithdrawDenominator expresses the max WithdrawRequest.amount allowed for a native asset withdraw."
          },
          "nonceUsed(address,uint256)": {
            "notice": "Returns whether the `nonce` has been used by the given `account`."
          },
          "ownerWithdraw(address,address,uint256)": {
            "notice": "Withdraws funds from this contract."
          },
          "postOp(uint8,bytes,uint256,uint256)": {
            "notice": "Post-operation handler. Must verify sender is the entryPoint."
          },
          "setMaxWithdrawDenominator(uint256)": {
            "notice": "Sets maxWithdrawDenominator."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdraw((bytes,address,uint256,uint256,uint48))": {
            "notice": "Allows the caller to withdraw funds by calling with a valid `withdrawRequest`."
          },
          "withdrawGasExcess()": {
            "notice": "Allows the sender to withdraw any available funds associated with their account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@/bytecodes/=contracts/bytecodes/",
        "@/circuits/=contracts/circuits/",
        "@/constants/=contracts/constants/",
        "@/contracts/=contracts/src/",
        "@/script/=contracts/script/",
        "@/test/=contracts/test/",
        "@0xsequence/wallet-contracts/=lib/wallet-contracts/",
        "@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/",
        "@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/",
        "@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/",
        "@account-abstraction/=lib/account-abstraction/contracts/",
        "@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "@asynchronous-vault/=lib/asynchronous-vault/src/",
        "@biconomy/account-contracts/=lib/scw-contracts/",
        "@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/",
        "@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/",
        "@eth-infinitism/account-abstraction/=lib/account-abstraction/",
        "@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/",
        "@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/",
        "@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/",
        "@safe-global/safe-contracts/=lib/safe-contracts/",
        "@source/=lib/soul-wallet-contract/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "@zerodevapp/contracts/=lib/kernel/src/",
        "account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/",
        "account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "asynchronous-vault/=lib/asynchronous-vault/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "magic-spend/=lib/magic-spend/src/",
        "murky/=lib/murky/src/",
        "nexus/=lib/nexus/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "seaport/=lib/seaport/",
        "singleton-paymaster/=lib/singleton-paymaster/src/",
        "solady/=lib/solady/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/kernel/src/",
        "surl/=lib/surl/src/"
      ],
      "optimizer": { "enabled": true, "runs": 4294967295 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": {
        "contracts/src/LightPaymaster.sol": "LightPaymaster"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "contracts/src/LightPaymaster.sol": {
        "keccak256": "0xf5ad98df632c324b83fc39a637c869c2a6c070fec87b00f21bc9f8a05bc2b46f",
        "urls": [
          "bzz-raw://a0e68d1eb8b4550d58419f9d343b880f08d48a3e55ac8bd79f836d9587d65405",
          "dweb:/ipfs/QmRCCarw6GfMzbV87XYkG6L8Uyu1C3VH16MMtjA2L2ak1d"
        ],
        "license": "Apache-2.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
        "urls": [
          "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
          "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
        "urls": [
          "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
          "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
        "urls": [
          "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
          "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f",
        "urls": [
          "bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8",
          "dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
        "urls": [
          "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
          "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "lib/magic-spend/src/MagicSpend.sol": {
        "keccak256": "0x951776de6531c0909bbc77118275b734bfecd31f033e40d4f078a38cfeaba049",
        "urls": [
          "bzz-raw://39239dd66d9e4325810b26101b7386c43d29abdc8679cf235992bab3692942b3",
          "dweb:/ipfs/QmVEWGiNJysUfzkatLUtC1k9RZLTjS4pBuS9B3d877GxaZ"
        ],
        "license": "MIT"
      },
      "lib/solady/src/auth/Ownable.sol": {
        "keccak256": "0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3",
        "urls": [
          "bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3",
          "dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a",
        "urls": [
          "bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c",
          "dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SignatureCheckerLib.sol": {
        "keccak256": "0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc",
        "urls": [
          "bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb",
          "dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 0
}
