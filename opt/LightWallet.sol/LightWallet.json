{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "anEntryPoint",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "NAME",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SET_IMAGE_HASH_TYPE_HASH",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "entryPoint",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "dest", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "func", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        { "name": "dest", "type": "address[]", "internalType": "address[]" },
        { "name": "value", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "func", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getNonce",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "imageHash",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "imageHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        { "name": "_data", "type": "bytes", "internalType": "bytes" },
        { "name": "_signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onERC1155BatchReceived",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC1155Received",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC721Received",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "signatureRecovery",
      "inputs": [
        { "name": "_digest", "type": "bytes32", "internalType": "bytes32" },
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "threshold", "type": "uint256", "internalType": "uint256" },
        { "name": "weight", "type": "uint256", "internalType": "uint256" },
        { "name": "imageHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "subdigest", "type": "bytes32", "internalType": "bytes32" },
        { "name": "checkpoint", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "updateImageHash",
      "inputs": [
        { "name": "_imageHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "userOpHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ImageHashUpdated",
      "inputs": [
        {
          "name": "newImageHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LightWalletInitialized",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "indexed": true,
          "internalType": "contract IEntryPoint"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EmptySignature", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "ImageHashIsZero", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": [
        { "name": "root", "type": "bytes32", "internalType": "bytes32" },
        { "name": "leaf", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidNestedSignature",
      "inputs": [
        { "name": "_hash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "_addr", "type": "address", "internalType": "address" },
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSValue",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_s", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureFlag",
      "inputs": [
        { "name": "_flag", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureLength",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureType",
      "inputs": [
        { "name": "_type", "type": "bytes1", "internalType": "bytes1" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidVValue",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_v", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "LowWeightChainedSignature",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" },
        { "name": "_weight", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OnlySelfAuth",
      "inputs": [
        { "name": "_sender", "type": "address", "internalType": "address" },
        { "name": "_self", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SignerIsAddress0",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "UnsupportedSignatureType",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_type", "type": "uint256", "internalType": "uint256" },
        { "name": "_recoverMode", "type": "bool", "internalType": "bool" }
      ]
    },
    {
      "type": "error",
      "name": "WrongChainedCheckpointOrder",
      "inputs": [
        { "name": "_current", "type": "uint256", "internalType": "uint256" },
        { "name": "_prev", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60c06040523060805234801561001457600080fd5b506040516131f83803806131f883398101604081905261003391610100565b6001600160a01b03811660a05261004861004e565b50610130565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561009e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100fd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60006020828403121561011257600080fd5b81516001600160a01b038116811461012957600080fd5b9392505050565b60805160a0516130806101786000396000818161047401528181610c6101528181610e5e01526118a20152600081816112b7015281816112e0015261153a01526130806000f3fe60806040526004361061016e5760003560e01c806357c56d6b116100cb578063b0d691fe1161007f578063d087d28811610059578063d087d28814610506578063f23a6e611461051b578063ffa1ad741461056157600080fd5b8063b0d691fe1461044d578063b61d27f61461049e578063bc197c81146104be57600080fd5b80639498bd71116100b05780639498bd711461038e578063a3f4df7e146103ae578063ad3cb1cc1461040457600080fd5b806357c56d6b14610312578063853c50681461034657600080fd5b806329561426116101225780634f1ef286116101075780634f1ef286146102d557806351605d80146102e857806352d1902d146102fd57600080fd5b8063295614261461029357806347e1da2a146102b557600080fd5b80631626ba7e116101535780631626ba7e1461022557806319822f7c1461024557806320c13b0b1461027357600080fd5b806301ffc9a71461017a578063150b7a02146101af57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a61019536600461263f565b6105aa565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101f46101ca3660046126ce565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101a6565b34801561023157600080fd5b506101f461024036600461273d565b6105bb565b34801561025157600080fd5b50610265610260366004612789565b6105d2565b6040519081526020016101a6565b34801561027f57600080fd5b506101f461028e3660046127dd565b6105f1565b34801561029f57600080fd5b506102b36102ae36600461284e565b610656565b005b3480156102c157600080fd5b506102b36102d03660046128ac565b6106a8565b6102b36102e3366004612a5e565b61084a565b3480156102f457600080fd5b50610265610869565b34801561030957600080fd5b50610265610898565b34801561031e57600080fd5b506102657f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561035257600080fd5b5061036661036136600461273d565b6108c7565b604080519586526020860194909452928401919091526060830152608082015260a0016101a6565b34801561039a57600080fd5b506102b36103a936600461284e565b610a8f565b3480156103ba57600080fd5b506103f76040518060400160405280600b81526020017f4c6967687457616c6c657400000000000000000000000000000000000000000081525081565b6040516101a69190612ad0565b34801561041057600080fd5b506103f76040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b34801561045957600080fd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101a6565b3480156104aa57600080fd5b506102b36104b9366004612b21565b610c0e565b3480156104ca57600080fd5b506101f46104d9366004612b63565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561051257600080fd5b50610265610c5d565b34801561052757600080fd5b506101f4610536366004612c2a565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561056d57600080fd5b506103f76040518060400160405280600581526020017f302e332e3000000000000000000000000000000000000000000000000000000081525081565b60006105b582610d17565b92915050565b60006105c8848484610dfb565b90505b9392505050565b60006105dc610e46565b6105e68484610ee7565b90506105cb826110d7565b6000806106168686604051610607929190612c90565b6040518091039020858561114e565b509050801561064857507f20c13b0b00000000000000000000000000000000000000000000000000000000905061064e565b50600090505b949350505050565b33301461069c576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b6106a58161118c565b50565b6106b0610e46565b84811480156106c657508215806106c657508281145b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606401610693565b60008390036107d85760005b858110156107d2576107ca87878381811061075557610755612ca0565b905060200201602081019061076a9190612ccf565b600085858581811061077e5761077e612ca0565b90506020028101906107909190612cea565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061122292505050565b600101610738565b50610842565b60005b85811015610840576108388787838181106107f8576107f8612ca0565b905060200201602081019061080d9190612ccf565b86868481811061081f5761081f612ca0565b9050602002013585858581811061077e5761077e612ca0565b6001016107db565b505b505050505050565b61085261129f565b61085b826113a3565b61086582826113e4565b5050565b60006108937fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b60006108a2611522565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600080600080600080878760008181106108e3576108e3612ca0565b909101357fff000000000000000000000000000000000000000000000000000000000000001691508190506109395761091b89611591565b9250610928838989611616565b92985090965094509150610a849050565b7fff00000000000000000000000000000000000000000000000000000000000000818116016109785761096b89611591565b9250610928838989611667565b7ffe000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216016109ca5761096b89611693565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610a2e57610a1e898989611700565b9550955095509550955050610a84565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff0000000000000000000000000000000000000000000000000000000000000082166004820152602401610693565b939792965093509350565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ada5750825b905060008267ffffffffffffffff166001148015610af75750303b155b905081158015610b05575080155b15610b3c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b9d5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610ba68661187d565b83156108425784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b610c16610e46565b610c57848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061122292505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015273ffffffffffffffffffffffffffffffffffffffff91909116906335567e1a90604401602060405180830381865afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190612d4f565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a02000000000000000000000000000000000000000000000000000000001480610daa57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105b557507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a7000000000000000000000000000000000000000000000000000000001492915050565b600080610e0985858561114e565b5090508015610e3b57507f1626ba7e0000000000000000000000000000000000000000000000000000000090506105cb565b506000949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610693565b565b600080610ef8610100850185612cea565b6000818110610f0957610f09612ca0565b7fff000000000000000000000000000000000000000000000000000000000000009201359182169250507f030000000000000000000000000000000000000000000000000000000000000016819003610f93576000610f7584610f70610100880188612cea565b61114e565b50905080610f88576001925050506105b5565b6000925050506105b5565b7fff0000000000000000000000000000000000000000000000000000000000000081167f0400000000000000000000000000000000000000000000000000000000000000036110cd5760008080610fee610100880188612cea565b610ffc916001908290612d68565b8101906110099190612d92565b92509250925061101a8284886118ec565b61105a576040517faab788dc0000000000000000000000000000000000000000000000000000000081526004810184905260248101879052604401610693565b60008251602061106a9190612ea8565b6110759060a1612ebf565b905060006110a78561108b6101008c018c612cea565b859087518761109a9190612ebf565b92610f7093929190612d68565b509050806110be57600196505050505050506105b5565b600096505050505050506105b5565b5060019392505050565b80156106a55760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114611142576040519150601f19603f3d011682016040523d82523d6000602084013e611147565b606091505b5050505050565b60008060008060006111618888886108c7565b5096509194509250905082821080159061117f575061117f81611902565b9450505050935093915050565b806111c3576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111ec7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a150565b6000808473ffffffffffffffffffffffffffffffffffffffff16848460405161124b9190612ed2565b60006040518083038185875af1925050503d8060008114611288576040519150601f19603f3d011682016040523d82523d6000602084013e61128d565b606091505b50915091508161114757805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061136c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ee5576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3330146106a5576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610693565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611469575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261146691810190612d4f565b60015b6114b7576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611513576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b61151d8383611935565b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ee5576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b60008080806116318761162c876006818b612d68565b611998565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b60008080806116828761167d876001818b612d68565b611616565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115f9565b6000808080806004600188013560e81c8261171b8383612ebf565b905061172d8b61036183868d8f612d68565b939b50919950975095509350878710156117855761174d81848b8d612d68565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106939493929190612f37565b8092505b8883101561186f5760038301928a013560e81c91506117a88383612ebf565b905060006117ca6117b888611e2e565b8c8c8790869261036193929190612d68565b939c50919a5098509091505088881015611822576117ea82858c8e612d68565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106939493929190612f37565b848110611865576040517f37daf62b0000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610693565b9350915081611789565b505050939792965093509350565b6118868161118c565b604051819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f6f2a6aac3f1c9fc5bb4eec9d305f0036888047b27e7ca599572afe083d9879e890600090a350565b6000826118f98584611e62565b14949350505050565b600081158015906105b55750507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8541490565b61193e82611ea5565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156119905761151d8282611f74565b610865611ff7565b60008060005b83811015611e2557600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611a3f57601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611a255780611a34565b60008681526020829052604090205b95505050505061199e565b80611ad55760018201918681013560f81c906043016000611a6b8a611a6684888c8e612d68565b61202f565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611aba5780611ac9565b60008781526020829052604090205b9650505050505061199e565b60028103611bfd576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050611b4e8b848c8c8a908692611b4993929190612d68565b6122f2565b611b96578a83611b6083898d8f612d68565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016106939493929190612f5e565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611be15780611bf0565b60008881526020829052604090205b975050505050505061199e565b60038103611c3057602082019186013583611c185780611c27565b60008481526020829052604090205b9350505061199e565b60048103611c7c576003808301928781013560e81c9190820101600080611c5d8b61162c85898d8f612d68565b6000988952602052604090972096909701965090935061199e92505050565b60068103611d845760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff169150809650819250505060008186019050600080611cea8d8d8d8b90879261162c93929190612d68565b93985088939092509050848210611d0057988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a9052835180840390910181526098909201909252805191012089611d665780611d75565b60008a81526020829052604090205b9950505050505050505061199e565b60058103611df0576020820191860135878103611dbf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b6000611dca826124d9565b905084611dd75780611de6565b60008581526020829052604090205b945050505061199e565b6040517fb2505f7c00000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206105b5565b600081815b8451811015611e9d57611e9382868381518110611e8657611e86612ca0565b6020026020010151612514565b9150600101611e67565b509392505050565b8073ffffffffffffffffffffffffffffffffffffffff163b600003611f0e576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611f9e9190612ed2565b600060405180830381855af49150503d8060008114611fd9576040519150601f19603f3d011682016040523d82523d6000602084013e611fde565b606091505b5091509150611fee858383612540565b95945050505050565b3415610ee5576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006042821461206f5782826040517f2ee17a3d000000000000000000000000000000000000000000000000000000008152600401610693929190612f9e565b600061208861207f600185612fb2565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08111156120fc578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161069393929190612fc5565b8260ff16601b1415801561211457508260ff16601c14155b15612151578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161069393929190612fe9565b600184036121be576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa1580156121ad573d6000803e3d6000fd5b505050602060405103519450612296565b6002840361225b576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a00161218b565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106939493929190613010565b73ffffffffffffffffffffffffffffffffffffffff85166122e75786866040517f6c1719d2000000000000000000000000000000000000000000000000000000008152600401610693929190612f9e565b505050509392505050565b600081810361232d576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838361233c600182612fb2565b81811061234b5761234b612ca0565b919091013560f81c91505060018114806123655750600281145b156123aa578473ffffffffffffffffffffffffffffffffffffffff1661238c87868661202f565b73ffffffffffffffffffffffffffffffffffffffff161491506124d0565b600381036124955773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87866000876123de600182612fb2565b926123eb93929190612d68565b6040518463ffffffff1660e01b81526004016124099392919061303c565b602060405180830381865afa158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244a9190613056565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e000000000000000000000000000000000000000000000000000000001491506124d0565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106939493929190613010565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290526000906058016115f9565b60008183106125305760008281526020849052604090206105cb565b5060009182526020526040902090565b60608261255557612550826125cf565b6105cb565b8151158015612579575073ffffffffffffffffffffffffffffffffffffffff84163b155b156125c8576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610693565b50806105cb565b8051156125df5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106a557600080fd5b60006020828403121561265157600080fd5b81356105cb81612611565b803573ffffffffffffffffffffffffffffffffffffffff8116811461268057600080fd5b919050565b60008083601f84011261269757600080fd5b50813567ffffffffffffffff8111156126af57600080fd5b6020830191508360208285010111156126c757600080fd5b9250929050565b6000806000806000608086880312156126e657600080fd5b6126ef8661265c565b94506126fd6020870161265c565b935060408601359250606086013567ffffffffffffffff81111561272057600080fd5b61272c88828901612685565b969995985093965092949392505050565b60008060006040848603121561275257600080fd5b83359250602084013567ffffffffffffffff81111561277057600080fd5b61277c86828701612685565b9497909650939450505050565b60008060006060848603121561279e57600080fd5b833567ffffffffffffffff8111156127b557600080fd5b840161012081870312156127c857600080fd5b95602085013595506040909401359392505050565b600080600080604085870312156127f357600080fd5b843567ffffffffffffffff81111561280a57600080fd5b61281687828801612685565b909550935050602085013567ffffffffffffffff81111561283657600080fd5b61284287828801612685565b95989497509550505050565b60006020828403121561286057600080fd5b5035919050565b60008083601f84011261287957600080fd5b50813567ffffffffffffffff81111561289157600080fd5b6020830191508360208260051b85010111156126c757600080fd5b600080600080600080606087890312156128c557600080fd5b863567ffffffffffffffff8111156128dc57600080fd5b6128e889828a01612867565b909750955050602087013567ffffffffffffffff81111561290857600080fd5b61291489828a01612867565b909550935050604087013567ffffffffffffffff81111561293457600080fd5b61294089828a01612867565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129c8576129c8612952565b604052919050565b600082601f8301126129e157600080fd5b813567ffffffffffffffff8111156129fb576129fb612952565b612a2c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612981565b818152846020838601011115612a4157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612a7157600080fd5b612a7a8361265c565b9150602083013567ffffffffffffffff811115612a9657600080fd5b612aa2858286016129d0565b9150509250929050565b60005b83811015612ac7578181015183820152602001612aaf565b50506000910152565b6020815260008251806020840152612aef816040850160208701612aac565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060008060608587031215612b3757600080fd5b612b408561265c565b935060208501359250604085013567ffffffffffffffff81111561283657600080fd5b60008060008060008060008060a0898b031215612b7f57600080fd5b612b888961265c565b9750612b9660208a0161265c565b9650604089013567ffffffffffffffff811115612bb257600080fd5b612bbe8b828c01612867565b909750955050606089013567ffffffffffffffff811115612bde57600080fd5b612bea8b828c01612867565b909550935050608089013567ffffffffffffffff811115612c0a57600080fd5b612c168b828c01612685565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612c4357600080fd5b612c4c8761265c565b9550612c5a6020880161265c565b94506040870135935060608701359250608087013567ffffffffffffffff811115612c8457600080fd5b61294089828a01612685565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612ce157600080fd5b6105cb8261265c565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d1f57600080fd5b83018035915067ffffffffffffffff821115612d3a57600080fd5b6020019150368190038213156126c757600080fd5b600060208284031215612d6157600080fd5b5051919050565b60008085851115612d7857600080fd5b83861115612d8557600080fd5b5050820193919092039150565b600080600060608486031215612da757600080fd5b83359250602084013567ffffffffffffffff811115612dc557600080fd5b8401601f81018613612dd657600080fd5b803567ffffffffffffffff811115612df057612df0612952565b8060051b612e0060208201612981565b91825260208184018101929081019089841115612e1c57600080fd5b6020850194505b83851015612e4257843580835260209586019590935090910190612e23565b95505050506040850135905067ffffffffffffffff811115612e6357600080fd5b612e6f868287016129d0565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176105b5576105b5612e79565b808201808211156105b5576105b5612e79565b60008251612ee4818460208701612aac565b9190910192915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081526000612f4b606083018688612eee565b6020830194909452506040015292915050565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201526000612f94606083018486612eee565b9695505050505050565b6020815260006105c8602083018486612eee565b818103818111156105b5576105b5612e79565b604081526000612fd9604083018587612eee565b9050826020830152949350505050565b604081526000612ffd604083018587612eee565b905060ff83166020830152949350505050565b606081526000613024606083018688612eee565b60208301949094525090151560409091015292915050565b838152604060208201526000611fee604083018486612eee565b60006020828403121561306857600080fd5b81516105cb8161261156fea164736f6c634300081b000a",
    "sourceMap": "3093:9008:0:-:0;;;1060:4:25;1017:48;;4667:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4715:26:0;;;;4751:22;:20;:22::i;:::-;4667:113;3093:9008;;7711:422:24;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:24;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:24;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:24;-1:-1:-1;;;;;8035:33:24;;;;;8087:29;;473:50:50;;;8087:29:24;;461:2:50;446:18;8087:29:24;;;;;;;7981:146;7760:373;7711:422::o;14:310:50:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:50;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:50:o;329:200::-;3093:9008:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061016e5760003560e01c806357c56d6b116100cb578063b0d691fe1161007f578063d087d28811610059578063d087d28814610506578063f23a6e611461051b578063ffa1ad741461056157600080fd5b8063b0d691fe1461044d578063b61d27f61461049e578063bc197c81146104be57600080fd5b80639498bd71116100b05780639498bd711461038e578063a3f4df7e146103ae578063ad3cb1cc1461040457600080fd5b806357c56d6b14610312578063853c50681461034657600080fd5b806329561426116101225780634f1ef286116101075780634f1ef286146102d557806351605d80146102e857806352d1902d146102fd57600080fd5b8063295614261461029357806347e1da2a146102b557600080fd5b80631626ba7e116101535780631626ba7e1461022557806319822f7c1461024557806320c13b0b1461027357600080fd5b806301ffc9a71461017a578063150b7a02146101af57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a61019536600461263f565b6105aa565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101f46101ca3660046126ce565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101a6565b34801561023157600080fd5b506101f461024036600461273d565b6105bb565b34801561025157600080fd5b50610265610260366004612789565b6105d2565b6040519081526020016101a6565b34801561027f57600080fd5b506101f461028e3660046127dd565b6105f1565b34801561029f57600080fd5b506102b36102ae36600461284e565b610656565b005b3480156102c157600080fd5b506102b36102d03660046128ac565b6106a8565b6102b36102e3366004612a5e565b61084a565b3480156102f457600080fd5b50610265610869565b34801561030957600080fd5b50610265610898565b34801561031e57600080fd5b506102657f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561035257600080fd5b5061036661036136600461273d565b6108c7565b604080519586526020860194909452928401919091526060830152608082015260a0016101a6565b34801561039a57600080fd5b506102b36103a936600461284e565b610a8f565b3480156103ba57600080fd5b506103f76040518060400160405280600b81526020017f4c6967687457616c6c657400000000000000000000000000000000000000000081525081565b6040516101a69190612ad0565b34801561041057600080fd5b506103f76040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b34801561045957600080fd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101a6565b3480156104aa57600080fd5b506102b36104b9366004612b21565b610c0e565b3480156104ca57600080fd5b506101f46104d9366004612b63565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561051257600080fd5b50610265610c5d565b34801561052757600080fd5b506101f4610536366004612c2a565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561056d57600080fd5b506103f76040518060400160405280600581526020017f302e332e3000000000000000000000000000000000000000000000000000000081525081565b60006105b582610d17565b92915050565b60006105c8848484610dfb565b90505b9392505050565b60006105dc610e46565b6105e68484610ee7565b90506105cb826110d7565b6000806106168686604051610607929190612c90565b6040518091039020858561114e565b509050801561064857507f20c13b0b00000000000000000000000000000000000000000000000000000000905061064e565b50600090505b949350505050565b33301461069c576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b6106a58161118c565b50565b6106b0610e46565b84811480156106c657508215806106c657508281145b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606401610693565b60008390036107d85760005b858110156107d2576107ca87878381811061075557610755612ca0565b905060200201602081019061076a9190612ccf565b600085858581811061077e5761077e612ca0565b90506020028101906107909190612cea565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061122292505050565b600101610738565b50610842565b60005b85811015610840576108388787838181106107f8576107f8612ca0565b905060200201602081019061080d9190612ccf565b86868481811061081f5761081f612ca0565b9050602002013585858581811061077e5761077e612ca0565b6001016107db565b505b505050505050565b61085261129f565b61085b826113a3565b61086582826113e4565b5050565b60006108937fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b60006108a2611522565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600080600080600080878760008181106108e3576108e3612ca0565b909101357fff000000000000000000000000000000000000000000000000000000000000001691508190506109395761091b89611591565b9250610928838989611616565b92985090965094509150610a849050565b7fff00000000000000000000000000000000000000000000000000000000000000818116016109785761096b89611591565b9250610928838989611667565b7ffe000000000000000000000000000000000000000000000000000000000000007fff000000000000000000000000000000000000000000000000000000000000008216016109ca5761096b89611693565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610a2e57610a1e898989611700565b9550955095509550955050610a84565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff0000000000000000000000000000000000000000000000000000000000000082166004820152602401610693565b939792965093509350565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ada5750825b905060008267ffffffffffffffff166001148015610af75750303b155b905081158015610b05575080155b15610b3c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b9d5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610ba68661187d565b83156108425784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b610c16610e46565b610c57848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061122292505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015273ffffffffffffffffffffffffffffffffffffffff91909116906335567e1a90604401602060405180830381865afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190612d4f565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a02000000000000000000000000000000000000000000000000000000001480610daa57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105b557507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a7000000000000000000000000000000000000000000000000000000001492915050565b600080610e0985858561114e565b5090508015610e3b57507f1626ba7e0000000000000000000000000000000000000000000000000000000090506105cb565b506000949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610693565b565b600080610ef8610100850185612cea565b6000818110610f0957610f09612ca0565b7fff000000000000000000000000000000000000000000000000000000000000009201359182169250507f030000000000000000000000000000000000000000000000000000000000000016819003610f93576000610f7584610f70610100880188612cea565b61114e565b50905080610f88576001925050506105b5565b6000925050506105b5565b7fff0000000000000000000000000000000000000000000000000000000000000081167f0400000000000000000000000000000000000000000000000000000000000000036110cd5760008080610fee610100880188612cea565b610ffc916001908290612d68565b8101906110099190612d92565b92509250925061101a8284886118ec565b61105a576040517faab788dc0000000000000000000000000000000000000000000000000000000081526004810184905260248101879052604401610693565b60008251602061106a9190612ea8565b6110759060a1612ebf565b905060006110a78561108b6101008c018c612cea565b859087518761109a9190612ebf565b92610f7093929190612d68565b509050806110be57600196505050505050506105b5565b600096505050505050506105b5565b5060019392505050565b80156106a55760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114611142576040519150601f19603f3d011682016040523d82523d6000602084013e611147565b606091505b5050505050565b60008060008060006111618888886108c7565b5096509194509250905082821080159061117f575061117f81611902565b9450505050935093915050565b806111c3576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111ec7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a150565b6000808473ffffffffffffffffffffffffffffffffffffffff16848460405161124b9190612ed2565b60006040518083038185875af1925050503d8060008114611288576040519150601f19603f3d011682016040523d82523d6000602084013e61128d565b606091505b50915091508161114757805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061136c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ee5576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3330146106a5576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610693565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611469575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261146691810190612d4f565b60015b6114b7576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611513576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b61151d8383611935565b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ee5576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b60008080806116318761162c876006818b612d68565b611998565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b60008080806116828761167d876001818b612d68565b611616565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115f9565b6000808080806004600188013560e81c8261171b8383612ebf565b905061172d8b61036183868d8f612d68565b939b50919950975095509350878710156117855761174d81848b8d612d68565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106939493929190612f37565b8092505b8883101561186f5760038301928a013560e81c91506117a88383612ebf565b905060006117ca6117b888611e2e565b8c8c8790869261036193929190612d68565b939c50919a5098509091505088881015611822576117ea82858c8e612d68565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106939493929190612f37565b848110611865576040517f37daf62b0000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610693565b9350915081611789565b505050939792965093509350565b6118868161118c565b604051819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f6f2a6aac3f1c9fc5bb4eec9d305f0036888047b27e7ca599572afe083d9879e890600090a350565b6000826118f98584611e62565b14949350505050565b600081158015906105b55750507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8541490565b61193e82611ea5565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156119905761151d8282611f74565b610865611ff7565b60008060005b83811015611e2557600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611a3f57601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611a255780611a34565b60008681526020829052604090205b95505050505061199e565b80611ad55760018201918681013560f81c906043016000611a6b8a611a6684888c8e612d68565b61202f565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611aba5780611ac9565b60008781526020829052604090205b9650505050505061199e565b60028103611bfd576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050611b4e8b848c8c8a908692611b4993929190612d68565b6122f2565b611b96578a83611b6083898d8f612d68565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016106939493929190612f5e565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611be15780611bf0565b60008881526020829052604090205b975050505050505061199e565b60038103611c3057602082019186013583611c185780611c27565b60008481526020829052604090205b9350505061199e565b60048103611c7c576003808301928781013560e81c9190820101600080611c5d8b61162c85898d8f612d68565b6000988952602052604090972096909701965090935061199e92505050565b60068103611d845760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff169150809650819250505060008186019050600080611cea8d8d8d8b90879261162c93929190612d68565b93985088939092509050848210611d0057988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a9052835180840390910181526098909201909252805191012089611d665780611d75565b60008a81526020829052604090205b9950505050505050505061199e565b60058103611df0576020820191860135878103611dbf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b6000611dca826124d9565b905084611dd75780611de6565b60008581526020829052604090205b945050505061199e565b6040517fb2505f7c00000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206105b5565b600081815b8451811015611e9d57611e9382868381518110611e8657611e86612ca0565b6020026020010151612514565b9150600101611e67565b509392505050565b8073ffffffffffffffffffffffffffffffffffffffff163b600003611f0e576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611f9e9190612ed2565b600060405180830381855af49150503d8060008114611fd9576040519150601f19603f3d011682016040523d82523d6000602084013e611fde565b606091505b5091509150611fee858383612540565b95945050505050565b3415610ee5576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006042821461206f5782826040517f2ee17a3d000000000000000000000000000000000000000000000000000000008152600401610693929190612f9e565b600061208861207f600185612fb2565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08111156120fc578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161069393929190612fc5565b8260ff16601b1415801561211457508260ff16601c14155b15612151578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161069393929190612fe9565b600184036121be576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa1580156121ad573d6000803e3d6000fd5b505050602060405103519450612296565b6002840361225b576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a00161218b565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106939493929190613010565b73ffffffffffffffffffffffffffffffffffffffff85166122e75786866040517f6c1719d2000000000000000000000000000000000000000000000000000000008152600401610693929190612f9e565b505050509392505050565b600081810361232d576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838361233c600182612fb2565b81811061234b5761234b612ca0565b919091013560f81c91505060018114806123655750600281145b156123aa578473ffffffffffffffffffffffffffffffffffffffff1661238c87868661202f565b73ffffffffffffffffffffffffffffffffffffffff161491506124d0565b600381036124955773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87866000876123de600182612fb2565b926123eb93929190612d68565b6040518463ffffffff1660e01b81526004016124099392919061303c565b602060405180830381865afa158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244a9190613056565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e000000000000000000000000000000000000000000000000000000001491506124d0565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106939493929190613010565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290526000906058016115f9565b60008183106125305760008281526020849052604090206105cb565b5060009182526020526040902090565b60608261255557612550826125cf565b6105cb565b8151158015612579575073ffffffffffffffffffffffffffffffffffffffff84163b155b156125c8576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610693565b50806105cb565b8051156125df5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106a557600080fd5b60006020828403121561265157600080fd5b81356105cb81612611565b803573ffffffffffffffffffffffffffffffffffffffff8116811461268057600080fd5b919050565b60008083601f84011261269757600080fd5b50813567ffffffffffffffff8111156126af57600080fd5b6020830191508360208285010111156126c757600080fd5b9250929050565b6000806000806000608086880312156126e657600080fd5b6126ef8661265c565b94506126fd6020870161265c565b935060408601359250606086013567ffffffffffffffff81111561272057600080fd5b61272c88828901612685565b969995985093965092949392505050565b60008060006040848603121561275257600080fd5b83359250602084013567ffffffffffffffff81111561277057600080fd5b61277c86828701612685565b9497909650939450505050565b60008060006060848603121561279e57600080fd5b833567ffffffffffffffff8111156127b557600080fd5b840161012081870312156127c857600080fd5b95602085013595506040909401359392505050565b600080600080604085870312156127f357600080fd5b843567ffffffffffffffff81111561280a57600080fd5b61281687828801612685565b909550935050602085013567ffffffffffffffff81111561283657600080fd5b61284287828801612685565b95989497509550505050565b60006020828403121561286057600080fd5b5035919050565b60008083601f84011261287957600080fd5b50813567ffffffffffffffff81111561289157600080fd5b6020830191508360208260051b85010111156126c757600080fd5b600080600080600080606087890312156128c557600080fd5b863567ffffffffffffffff8111156128dc57600080fd5b6128e889828a01612867565b909750955050602087013567ffffffffffffffff81111561290857600080fd5b61291489828a01612867565b909550935050604087013567ffffffffffffffff81111561293457600080fd5b61294089828a01612867565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129c8576129c8612952565b604052919050565b600082601f8301126129e157600080fd5b813567ffffffffffffffff8111156129fb576129fb612952565b612a2c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612981565b818152846020838601011115612a4157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612a7157600080fd5b612a7a8361265c565b9150602083013567ffffffffffffffff811115612a9657600080fd5b612aa2858286016129d0565b9150509250929050565b60005b83811015612ac7578181015183820152602001612aaf565b50506000910152565b6020815260008251806020840152612aef816040850160208701612aac565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060008060608587031215612b3757600080fd5b612b408561265c565b935060208501359250604085013567ffffffffffffffff81111561283657600080fd5b60008060008060008060008060a0898b031215612b7f57600080fd5b612b888961265c565b9750612b9660208a0161265c565b9650604089013567ffffffffffffffff811115612bb257600080fd5b612bbe8b828c01612867565b909750955050606089013567ffffffffffffffff811115612bde57600080fd5b612bea8b828c01612867565b909550935050608089013567ffffffffffffffff811115612c0a57600080fd5b612c168b828c01612685565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612c4357600080fd5b612c4c8761265c565b9550612c5a6020880161265c565b94506040870135935060608701359250608087013567ffffffffffffffff811115612c8457600080fd5b61294089828a01612685565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612ce157600080fd5b6105cb8261265c565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d1f57600080fd5b83018035915067ffffffffffffffff821115612d3a57600080fd5b6020019150368190038213156126c757600080fd5b600060208284031215612d6157600080fd5b5051919050565b60008085851115612d7857600080fd5b83861115612d8557600080fd5b5050820193919092039150565b600080600060608486031215612da757600080fd5b83359250602084013567ffffffffffffffff811115612dc557600080fd5b8401601f81018613612dd657600080fd5b803567ffffffffffffffff811115612df057612df0612952565b8060051b612e0060208201612981565b91825260208184018101929081019089841115612e1c57600080fd5b6020850194505b83851015612e4257843580835260209586019590935090910190612e23565b95505050506040850135905067ffffffffffffffff811115612e6357600080fd5b612e6f868287016129d0565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176105b5576105b5612e79565b808201808211156105b5576105b5612e79565b60008251612ee4818460208701612aac565b9190910192915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081526000612f4b606083018688612eee565b6020830194909452506040015292915050565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201526000612f94606083018486612eee565b9695505050505050565b6020815260006105c8602083018486612eee565b818103818111156105b5576105b5612e79565b604081526000612fd9604083018587612eee565b9050826020830152949350505050565b604081526000612ffd604083018587612eee565b905060ff83166020830152949350505050565b606081526000613024606083018688612eee565b60208301949094525090151560409091015292915050565b838152604060208201526000611fee604083018486612eee565b60006020828403121561306857600080fd5b81516105cb8161261156fea164736f6c634300081b000a",
    "sourceMap": "3093:9008:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11862:237;;;;;;;;;;-1:-1:-1;11862:237:0;;;;;:::i;:::-;;:::i;:::-;;;611:14:50;;604:22;586:41;;574:2;559:18;11862:237:0;;;;;;;;505:212:19;;;;;;;;;;-1:-1:-1;505:212:19;;;;;:::i;:::-;669:41;505:212;;;;;;;;;;;2042:66:50;2030:79;;;2012:98;;2000:2;1985:18;505:212:19;1868:248:50;6326:253:0;;;;;;;;;;-1:-1:-1;6326:253:0;;;;;:::i;:::-;;:::i;1139:385:4:-;;;;;;;;;;-1:-1:-1;1139:385:4;;;;;:::i;:::-;;:::i;:::-;;;3433:25:50;;;3421:2;3406:18;1139:385:4;3287:177:50;4526:332:35;;;;;;;;;;-1:-1:-1;4526:332:35;;;;;:::i;:::-;;:::i;6457:119::-;;;;;;;;;;-1:-1:-1;6457:119:35;;;;;:::i;:::-;;:::i;:::-;;5650:639:0;;;;;;;;;;-1:-1:-1;5650:639:0;;;;;:::i;:::-;;:::i;3892:214:25:-;;;;;;:::i;:::-;;:::i;748:129:36:-;;;;;;;;;;;;;:::i;3439:134:25:-;;;;;;;;;;;;;:::i;812:95:43:-;;;;;;;;;;;;863:44;812:95;;1676:1486:35;;;;;;;;;;-1:-1:-1;1676:1486:35;;;;;:::i;:::-;;:::i;:::-;;;;7894:25:50;;;7950:2;7935:18;;7928:34;;;;7978:18;;;7971:34;;;;8036:2;8021:18;;8014:34;8079:3;8064:19;;8057:35;7881:3;7866:19;1676:1486:35;7635:463:50;6936:105:0;;;;;;;;;;-1:-1:-1;6936:105:0;;;;;:::i;:::-;;:::i;3471:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1708:58:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4134:179:0;;;;;;;;;;-1:-1:-1;4134:179:0;;9014:42:50;4295:11:0;9002:55:50;8984:74;;8972:2;8957:18;4134:179:0;8818:246:50;5060:151:0;;;;;;;;;;-1:-1:-1;5060:151:0;;;;;:::i;:::-;;:::i;961:264:19:-;;;;;;;;;;-1:-1:-1;961:264:19;;;;;:::i;:::-;1170:48;961:264;;;;;;;;;;;771:121:4;;;;;;;;;;;;;:::i;723:232:19:-;;;;;;;;;;-1:-1:-1;723:232:19;;;;;:::i;:::-;905:43;723:232;;;;;;;;;3567:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11862:237;12029:4;12056:36;12080:11;12056:23;:36::i;:::-;12049:43;11862:237;-1:-1:-1;;11862:237:0:o;6326:253::-;6503:6;6532:40;6555:4;6561:10;;6532:22;:40::i;:::-;6525:47;;6326:253;;;;;;:::o;1139:385:4:-;1314:22;1348:24;:22;:24::i;:::-;1399:38;1418:6;1426:10;1399:18;:38::i;:::-;1382:55;;1485:32;1497:19;1485:11;:32::i;4526:332:35:-;4652:6;4694:12;4711:51;4742:5;;4732:16;;;;;;;:::i;:::-;;;;;;;;4750:11;;4711:20;:51::i;:::-;4693:69;;;4772:7;4768:63;;;-1:-1:-1;4796:28:35;;-1:-1:-1;4789:35:35;;4768:63;-1:-1:-1;4851:1:35;;-1:-1:-1;4526:332:35;;;;;;;:::o;6457:119::-;179:10:38;201:4;179:27;175:94;;223:39;;;;;236:10;223:39;;;12145:74:50;256:4:38;12235:18:50;;;12228:83;12118:18;;223:39:38;;;;;;;;175:94;6543:28:35::1;6560:10;6543:16;:28::i;:::-;6457:119:::0;:::o;5650:639:0:-;5807:24;:22;:24::i;:::-;5862:26;;;:80;;;;-1:-1:-1;5893:17:0;;;:48;;-1:-1:-1;5914:27:0;;;5893:48;5841:146;;;;;;;12524:2:50;5841:146:0;;;12506:21:50;12563:2;12543:18;;;12536:30;12602:21;12582:18;;;12575:49;12641:18;;5841:146:0;12322:343:50;5841:146:0;6017:1;6001:17;;;5997:286;;6039:9;6034:101;6054:15;;;6034:101;;;6094:26;6100:4;;6105:1;6100:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6109:1;6112:4;;6117:1;6112:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6094:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6094:5:0;;-1:-1:-1;;;6094:26:0:i;:::-;6071:3;;6034:101;;;;5997:286;;;6170:9;6165:108;6185:15;;;6165:108;;;6225:33;6231:4;;6236:1;6231:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6240:5;;6246:1;6240:8;;;;;;;:::i;:::-;;;;;;;6250:4;;6255:1;6250:7;;;;;;;:::i;6225:33::-;6202:3;;6165:108;;;;5997:286;5650:639;;;;;;:::o;3892:214:25:-;2542:13;:11;:13::i;:::-;4007:36:::1;4025:17;4007;:36::i;:::-;4053:46;4075:17;4094:4;4053:21;:46::i;:::-;3892:214:::0;;:::o;748:129:36:-;809:7;831:41;257:66:40;291:11:39;;196:112;831:41:36;824:48;;748:129;:::o;3439:134:25:-;3508:7;2813:20;:18;:20::i;:::-;-1:-1:-1;1327:66:22::1;3439:134:25::0;:::o;1676:1486:35:-;1802:17;1825:14;1845:17;1868;1891:18;1920:20;1943:10;;1954:1;1943:13;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1943:13:35;;-1:-1:-1;1963:303:35;;2058:34;2084:7;2058:25;:34::i;:::-;2046:46;;2145;2169:9;2180:10;;2145:23;:46::i;:::-;2100:91;;-1:-1:-1;2100:91:35;;-1:-1:-1;2100:91:35;-1:-1:-1;2100:91:35;-1:-1:-1;2199:60:35;;-1:-1:-1;2199:60:35;1963:303;2276:29;;;;;2272:310;;2371:34;2397:7;2371:25;:34::i;:::-;2359:46;;2458:49;2485:9;2496:10;;2458:26;:49::i;2272:310::-;2592:33;;;;;2588:319;;2691:39;2722:7;2691:30;:39::i;2588:319::-;2917:29;;;;;2913:196;;3067:35;3082:7;3091:10;;3067:14;:35::i;:::-;3060:42;;;;;;;;;;;;;2913:196;3122:35;;;;;13809:66:50;13797:79;;3122:35:35;;;13779:98:50;13752:18;;3122:35:35;13635:248:50;1676:1486:35;;;;;;;;;;:::o;6936:105:0:-;8870:21:24;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:24;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;7012:22:0::1;7024:9;7012:11;:22::i;:::-;5070:14:24::0;5066:101;;;5100:23;;;;;;5142:14;;-1:-1:-1;14041:50:50;;5142:14:24;;14029:2:50;14014:18;5142:14:24;;;;;;;4092:1081;;;;;6936:105:0;:::o;5060:151::-;5146:24;:22;:24::i;:::-;5180;5186:4;5192:5;5199:4;;5180:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5180:5:0;;-1:-1:-1;;;5180:24:0:i;:::-;5060:151;;;;:::o;771:121:4:-;820:7;4295:11:0;846:39:4;;;;;876:4;846:39;;;14284:74:50;883:1:4;14374:18:50;;;14367:91;846:21:4;;;;;;;;14257:18:50;;846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1231:298:19:-;1318:4;1353:48;;;1368:33;1353:48;;:113;;-1:-1:-1;1417:49:19;;;1432:34;1417:49;1353:113;:169;;;-1:-1:-1;1482:40:19;;;1497:25;1482:40;1334:188;1231:298;-1:-1:-1;;1231:298:19:o;5490:316:35:-;5609:6;5651:12;5668:40;5689:5;5696:11;;5668:20;:40::i;:::-;5650:58;;;5718:7;5714:65;;;-1:-1:-1;5742:30:35;;-1:-1:-1;5735:37:35;;5714:65;-1:-1:-1;5799:1:35;;5490:316;-1:-1:-1;;;;5490:316:35:o;1605:183:4:-;1692:10;:35;4295:11:0;1692:35:4;;1671:110;;;;;;;14860:2:50;1671:110:4;;;14842:21:50;14899:2;14879:18;;;14872:30;14938;14918:18;;;14911:58;14986:18;;1671:110:4;14658:352:50;1671:110:4;1605:183::o;7565:2492:0:-;7739:22;;7800:16;;;;:6;:16;:::i;:::-;7817:1;7800:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;8052:20:0;;:37;;;8048:267;;8106:12;8123:50;8144:10;8156:16;;;;:6;:16;:::i;:::-;8123:20;:50::i;:::-;8105:68;;;8192:7;8187:75;;305:1:6;8219:28:0;;;;;;8187:75;465:1:6;8275:29:0;;;;;;8048:267;8543:21;;;;;8539:1406;;8581:22;;;8694:16;;;;:6;:16;:::i;:::-;:20;;8711:1;;8694:20;;;:::i;:::-;8683:61;;;;;;;:::i;:::-;8580:164;;;;;;8836:59;8855:11;8868:14;8884:10;8836:18;:59::i;:::-;8831:152;;8922:46;;;;;;;;16854:25:50;;;16895:18;;;16888:34;;;16827:18;;8922:46:0;16680:248:50;8831:152:0;9601:14;9624:11;:18;9645:2;9624:23;;;;:::i;:::-;9618:29;;:3;:29;:::i;:::-;9601:46;-1:-1:-1;9662:12:0;9679:124;9717:14;9733:16;;;;:6;:16;:::i;:::-;9750:6;9733:56;9766:15;:22;9757:6;:31;;;;:::i;:::-;9733:56;;;;;;;:::i;9679:124::-;9661:142;;;9822:7;9817:75;;305:1:6;9849:28:0;;;;;;;;;;9817:75;465:1:6;9905:29:0;;;;;;;;;;8539:1406;-1:-1:-1;305:1:6;;7565:2492:0;-1:-1:-1;;;7565:2492:0:o;4356:382:4:-;4437:24;;4433:299;;4496:126;;4478:12;;4504:10;;4587:17;;4545:19;;4478:12;4496:126;4478:12;4496:126;4545:19;4504:10;4587:17;4496:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4356:382:4;:::o;3481:386:35:-;3612:12;3630:17;3658;3677:14;3693:17;3761:38;3779:7;3788:10;;3761:17;:38::i;:::-;-1:-1:-1;3716:83:35;-1:-1:-1;3716:83:35;;-1:-1:-1;3716:83:35;-1:-1:-1;3716:83:35;-1:-1:-1;3815:19:35;;;;;;:47;;;3838:24;3852:9;3838:13;:24::i;:::-;3805:57;;3652:215;;;3481:386;;;;;;:::o;438:236:36:-;520:10;516:54;;553:17;;;;;;;;;;;;;;516:54;576;257:66:40;619:10:36;168:18:39;;92:100;576:54:36;641:28;;3433:25:50;;;641:28:36;;3421:2:50;3406:18;641:28:36;;;;;;;438:236;:::o;10811:384:0:-;10944:12;10958:19;10981:6;:11;;11000:5;11007:4;10981:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:69;;;;11027:7;11022:167;;11157:6;11151:13;11146:2;11138:6;11134:15;11127:38;4333:312:25;4413:4;4405:23;4422:6;4405:23;;;:120;;;4519:6;4483:42;;:32;1327:66:22;2035:53;;;;1957:138;4483:32:25;:42;;;;4405:120;4388:251;;;4599:29;;;;;;;;;;;;;;11510:70:0;179:10:38;201:4;179:27;175:94;;223:39;;;;;236:10;223:39;;;12145:74:50;256:4:38;12235:18:50;;;12228:83;12118:18;;223:39:38;11971:346:50;5786:538:25;5903:17;5885:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5885:52:25;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5881:437;;6247:60;;;;;9014:42:50;9002:55;;6247:60:25;;;8984:74:50;8957:18;;6247:60:25;8818:246:50;5881:437:25;1327:66:22;5979:40:25;;5975:120;;6046:34;;;;;;;;3433:25:50;;;3406:18;;6046:34:25;3287:177:50;5975:120:25;6108:54;6138:17;6157:4;6108:29;:54::i;:::-;5938:235;5786:538;;:::o;4762:213::-;4836:4;4828:23;4845:6;4828:23;;4824:145;;4929:29;;;;;;;;;;;;;;1181:224:42;1287:107;;18645:66:50;1287:107:42;;;18633:79:50;1333:13:42;18728:11:50;;;18721:27;18799:66;1364:4:42;18786:2:50;18782:15;18778:88;18764:12;;;18757:110;18883:12;;;18876:28;;;1248:7:42;;18920:12:50;;1287:107:42;;;;;;;;;;;;;1270:130;;;;;;1263:137;;1181:224;;;:::o;8900:642::-;9004:17;;;;9139:41;9153:10;9165:14;:10;9176:1;9165:10;;:14;:::i;:::-;9139:13;:41::i;:::-;623:9:48;657:13;;;1586:25:46;;1627:3;1623:14;684:2:48;677:14;;;716:2;703:16;;;657:13;;9387:1:42;2035:23:46;;;2022:37;2075:3;2071:14;677::48;;;;703:16;;;;1623:14:46;;9117:63:42;;-1:-1:-1;703:16:48;2071:14:46;-1:-1:-1;8900:642:42;-1:-1:-1;;;;8900:642:42:o;649:262:44:-;753:17;;;;855:51;879:10;891:14;:10;902:1;891:10;;:14;:::i;:::-;855:23;:51::i;:::-;848:58;;;;;;;;649:262;;;;;;;:::o;405:213:45:-;503:104;;18645:66:50;503:104:45;;;18633:79:50;464:7:45;18728:11:50;;;18721:27;;;18799:66;577:4:45;18786:2:50;18782:15;18778:88;18764:12;;;18757:110;18883:12;;;18876:28;;;464:7:45;18920:12:50;;503:104:45;18347:591:50;2321:2059:43;2429:17;;;;;4106:14:47;2564:1:43;4018:25:47;;4005:39;4064:3;4060:14;2429:17:43;2769:16;4106:14:47;4060;2769:16:43;:::i;:::-;2751:34;-1:-1:-1;2884:72:43;2909:7;2924:26;2751:34;2935:6;2924:10;;:26;:::i;2884:72::-;2792:164;;-1:-1:-1;2792:164:43;;-1:-1:-1;2792:164:43;-1:-1:-1;2792:164:43;-1:-1:-1;2792:164:43;-1:-1:-1;2967:18:43;;;2963:118;;;3028:26;3046:7;3039:6;3028:10;;:26;:::i;:::-;3056:9;3067:6;3002:72;;;;;;;;;;;;;;:::i;2963:118::-;3096:7;3087:16;;3284:1092;3291:26;;;3284:1092;;;4118:1:47;4106:14;;;4018:25;;4005:39;4064:3;4060:14;;-1:-1:-1;3445:16:43;4106:14:47;4060;3445:16:43;:::i;:::-;3435:26;;3470:22;3688:105;3715:34;3739:9;3715:23;:34::i;:::-;3759:10;;3770:6;3759:26;3777:7;3759:26;;;;;;;:::i;3688:105::-;3501:292;;-1:-1:-1;3501:292:43;;-1:-1:-1;3501:292:43;-1:-1:-1;3501:292:43;;-1:-1:-1;;3834:18:43;;;3830:122;;;3897:26;3915:7;3908:6;3897:10;;:26;:::i;:::-;3925:9;3936:6;3871:72;;;;;;;;;;;;;;:::i;3830:122::-;4217:10;4199:14;:28;4195:115;;4246:55;;;;;;;;16854:25:50;;;16895:18;;;16888:34;;;16827:18;;4246:55:43;16680:248:50;4195:115:43;4331:14;-1:-1:-1;4362:7:43;-1:-1:-1;4362:7:43;3284:1092;;;2541:1839;;;2321:2059;;;;;;;;;:::o;7365:162:0:-;7432:27;7449:9;7432:16;:27::i;:::-;7474:46;;7510:9;;7474:46;7497:11;7474:46;;;;;;;7365:162;:::o;1265:154:31:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:31:o;1096:190:36:-;1179:4;1198:24;;;;;:83;;-1:-1:-1;;257:66:40;291:11:39;1226:55:36;;1096:190::o;2779:335:22:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;;;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;3533:4708:42:-;3643:14;3663:12;3704:14;3773:4458;3780:26;;;3773:4458;;;1476:1:47;1464:14;;;1391:25;;1378:39;1433:3;1429:14;3931:20:42;;;3927:402;;2541:2:47;2529:15;;;2382:25;;2369:39;2424:3;2420:14;;;;2454:2;2450:13;2465:42;2446:62;;;1881:23:42;;:49;;4239:4;:59;;4294:4;4239:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;4260:31:42;4232:66;;4310:8;;;;;;3927:402;4343:4;4339:679;;1476:1:47;1464:14;;;1391:25;;;1378:39;1433:3;1429:14;;4568:11:42;;4404:16;4606:72;4639:10;4651:26;4568:11;1464:14:47;4651:10:42;1391:25:47;4651:26:42;:::i;:::-;4606:32;:72::i;:::-;4772:20;;;;;;;;4699:7;;-1:-1:-1;4699:7:42;;4772:20;-1:-1:-1;1901:3:42;1881:23;;;;;1907;;;1881:49;4928:4;:59;;4983:4;4928:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;4949:31:42;4921:66;;4999:8;;;;;;;4339:679;629:1;5032:4;:30;5028:932;;5112:16;;2382:25:47;;;2369:39;2424:3;2420:14;;;;2454:2;2450:13;2465:42;2446:62;2541:2;2529:15;;5154:64:42;-1:-1:-1;5154:64:42;;-1:-1:-1;5154:64:42;-1:-1:-1;5264:12:42;4018:25:47;;;4005:39;4064:3;4060:14;4118:1;4106:14;;5288:46:42;;;;;;;;;;;;;5388:15;5415:4;5406:6;:13;5388:31;;5436:81;5472:10;5484:4;5490:10;;5501:6;5490:26;5508:7;5490:26;;;;;;;:::i;:::-;5436:35;:81::i;:::-;5431:190;;5563:10;5575:4;5581:26;5599:7;5592:6;5581:10;;:26;:::i;:::-;5540:68;;;;;;;;;;;;;;:::i;5431:190::-;5714:20;;;;;;;;;-1:-1:-1;5714:20:42;1901:3;1881:23;;;;;1907;;;1881:49;5870:4;:59;;5925:4;5870:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;5891:31:42;5863:66;;5941:8;;;;;;;;5028:932;672:1;5974:4;:17;5970:243;;5621:2:47;5607:17;;;5558:27;;5545:41;6123:4:42;:59;;6178:4;6123:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;6144:31:42;6116:66;;6194:8;;;;5970:243;717:1;6227:4;:19;6223:472;;4118:1:47;4106:14;;;;4018:25;;;4005:39;4064:3;4060:14;;6417:13:42;;;;6317:12;;6502:53;6516:10;6528:26;6417:13;4106:14:47;6528:10:42;4018:25:47;6528:26:42;:::i;6502:53::-;623:9:48;657:13;;;684:2;677:14;716:2;703:16;;;6568:17:42;;;;;-1:-1:-1;6657:7:42;;-1:-1:-1;6676:8:42;;-1:-1:-1;;;6676:8:42;6223:472;810:1;6709:4;:19;6705:979;;6872:22;1391:25:47;;;1378:39;1433:3;1429:14;1476:1;1464:14;;6906:55:42;-1:-1:-1;6906:55:42;;;-1:-1:-1;6974:25:42;3035::47;;;3022:39;3081:3;3077:14;3133:1;3121:14;;7011:59:42;-1:-1:-1;7011:59:42;;;-1:-1:-1;7083:12:42;4018:25:47;;;4005:39;4064:3;4060:14;4118:1;4106:14;;7107:46:42;;;;;;;;;;;;;7165:15;7192:4;7183:6;:13;7165:31;;7209:22;7233:20;7298:53;7312:10;7324;;7335:6;7324:26;7342:7;7324:26;;;;;;;:::i;7298:53::-;7372:7;;-1:-1:-1;7372:7:42;;7265:86;;-1:-1:-1;7265:86:42;-1:-1:-1;7396:35:42;;;7392:92;;7447:24;;;;7392:92;2984:73;;;23467:66:50;2984:73:42;;;;23455:79:50;;;;23550:12;;;23543:28;;;23587:12;;;23580:28;;;23624:12;;;;23617:28;;;2984:73:42;;;;;;;;;;23661:13:50;;;;2984:73:42;;;2974:84;;;;;7593:4;:59;;7648:4;7593:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;7614:31:42;7586:66;;7665:8;;;;;;;;;;6705:979;765:1;7698:4;:22;7694:485;;5621:2:47;5607:17;;;5558:27;;5545:41;7928:23:42;;;7924:82;;7976:17;7967:26;;7924:82;8018:12;8033:37;8060:9;8033:26;:37::i;:::-;8018:52;-1:-1:-1;8089:4:42;:59;;8144:4;8089:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;8110:31:42;8082:66;;8160:8;;;;;7694:485;8196:26;;;;;;;;3433:25:50;;;3406:18;;8196:26:42;3287:177:50;3773:4458:42;3686:4551;3533:4708;;;;;;:::o;1297:160:43:-;863:44;1373:7;657:13:48;;;684:2;677:14;;;716:2;703:16;;1395:57:43;544:185:48;1967:290:31;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:31;;2106:116;;;-1:-1:-1;2238:12:31;1967:290;-1:-1:-1;;;1967:290:31:o;2186:281:22:-;2263:17;:29;;;2296:1;2263:34;2259:119;;2320:47;;;;;9014:42:50;9002:55;;2320:47:22;;;8984:74:50;8957:18;;2320:47:22;8818:246:50;2259:119:22;1327:66;2387:73;;;;;;;;;;;;;;;2186:281::o;4106:253:28:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:28:o;6598:122:22:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;1768:2316:49;1868:14;1915:2;1894:23;;1890:70;;1949:10;;1926:34;;;;;;;;;;;;:::i;1890:70::-;1966:21;1990:43;2011:21;2031:1;2011:10;:21;:::i;:::-;1227:23:46;;1214:37;1267:3;1263:14;;1072:215;1990:43:49;1966:67;;;-1:-1:-1;2116:2:49;1227:23:46;;1214:37;1267:3;1263:14;796:37;;2203:2:49;809:23:46;;796:37;3210:66:49;3197:79;;3193:135;;;3307:10;;3319:1;3293:28;;;;;;;;;;;;;:::i;3193:135::-;3338:1;:7;;3343:2;3338:7;;:18;;;;;3349:1;:7;;3354:2;3349:7;;3338:18;3334:74;;;3387:10;;3399:1;3373:28;;;;;;;;;;;;;:::i;3334:74::-;1254:1;3448:13;:32;3444:509;;3499:25;;;;;;;;;;;;21627::50;;;21700:4;21688:17;;21668:18;;;21661:45;;;;21722:18;;;21715:34;;;21765:18;;;21758:34;;;3499:25:49;;21599:19:50;;3499:25:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:34;;3444:509;;;1304:1;3609:13;:34;3605:348;;3691:59;;22045:66:50;3691:59:49;;;22033:79:50;22128:12;;;22121:28;;;3662:130:49;;22165:12:50;;3691:59:49;;;;;;;;;;;;;3681:70;;3691:59;3681:70;;;;3662:130;;;;;;;;;21627:25:50;21700:4;21688:17;;21668:18;;;21661:45;21722:18;;;21715:34;;;21765:18;;;21758:34;;;21599:19;;3662:130:49;21400:398:50;3605:348:49;3914:10;;3926:13;3941:4;3889:57;;;;;;;;;;;;;;:::i;3605:348::-;4000:22;;;3996:63;;4048:10;;4031:28;;;;;;;;;;;;:::i;3996:63::-;4066:13;;;;1768:2316;;;;;:::o;4412:951::-;4536:10;4558:22;;;4554:66;;4597:16;;;;;;;;;;;;;;4554:66;4626:21;4656:10;;4667:21;4687:1;4656:10;4667:21;:::i;:::-;4656:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1254:1:49;4700:32;;;:70;;;1304:1;4736:13;:34;4700:70;4696:663;;;4874:7;4838:43;;:32;4852:5;4859:10;;4838:13;:32::i;:::-;:43;;;4830:51;;4696:663;;;1360:1;4899:13;:40;4895:464;;5061:40;;;;5102:5;5109:10;5120:1;5109:10;5122:21;5142:1;5109:10;5122:21;:::i;:::-;5109:35;;;;;;;:::i;:::-;5061:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5031:114;;:26;:114;;-1:-1:-1;4895:464:49;;;5319:10;;5331:13;5346:5;5294:58;;;;;;;;;;;;;;:::i;4895:464::-;4548:815;4412:951;;;;;;:::o;2235:182:42:-;2354:57;;23927:66:50;2354:57:42;;;23915:79:50;24010:12;;;24003:28;;;2322:7:42;;24047:12:50;;2354:57:42;23685:380:50;9229:147:31;9292:7;9322:1;9318;:5;:51;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;9318:51:31;;;-1:-1:-1;623:9:48;657:13;;;684:2;677:14;716:2;703:16;;;9229:147:31:o;4625:582:28:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:28;;;;:23;5045:49;5041:119;;;5121:24;;;;;9014:42:50;9002:55;;5121:24:28;;;8984:74:50;8957:18;;5121:24:28;8818:246:50;5041:119:28;-1:-1:-1;5180:10:28;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:177:50;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:196::-;706:20;;766:42;755:54;;745:65;;735:93;;824:1;821;814:12;735:93;638:196;;;:::o;839:347::-;890:8;900:6;954:3;947:4;939:6;935:17;931:27;921:55;;972:1;969;962:12;921:55;-1:-1:-1;995:20:50;;1038:18;1027:30;;1024:50;;;1070:1;1067;1060:12;1024:50;1107:4;1099:6;1095:17;1083:29;;1159:3;1152:4;1143:6;1135;1131:19;1127:30;1124:39;1121:59;;;1176:1;1173;1166:12;1121:59;839:347;;;;;:::o;1191:672::-;1288:6;1296;1304;1312;1320;1373:3;1361:9;1352:7;1348:23;1344:33;1341:53;;;1390:1;1387;1380:12;1341:53;1413:29;1432:9;1413:29;:::i;:::-;1403:39;;1461:38;1495:2;1484:9;1480:18;1461:38;:::i;:::-;1451:48;-1:-1:-1;1568:2:50;1553:18;;1540:32;;-1:-1:-1;1647:2:50;1632:18;;1619:32;1674:18;1663:30;;1660:50;;;1706:1;1703;1696:12;1660:50;1745:58;1795:7;1786:6;1775:9;1771:22;1745:58;:::i;:::-;1191:672;;;;-1:-1:-1;1191:672:50;;-1:-1:-1;1822:8:50;;1719:84;1191:672;-1:-1:-1;;;1191:672:50:o;2121:523::-;2200:6;2208;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2330:23;;;-1:-1:-1;2428:2:50;2413:18;;2400:32;2455:18;2444:30;;2441:50;;;2487:1;2484;2477:12;2441:50;2526:58;2576:7;2567:6;2556:9;2552:22;2526:58;:::i;:::-;2121:523;;2603:8;;-1:-1:-1;2500:84:50;;-1:-1:-1;;;;2121:523:50:o;2649:633::-;2765:6;2773;2781;2834:2;2822:9;2813:7;2809:23;2805:32;2802:52;;;2850:1;2847;2840:12;2802:52;2890:9;2877:23;2923:18;2915:6;2912:30;2909:50;;;2955:1;2952;2945:12;2909:50;2978:22;;3034:3;3016:16;;;3012:26;3009:46;;;3051:1;3048;3041:12;3009:46;3074:2;3145;3130:18;;3117:32;;-1:-1:-1;3246:2:50;3231:18;;;3218:32;;2649:633;-1:-1:-1;;;2649:633:50:o;3469:712::-;3559:6;3567;3575;3583;3636:2;3624:9;3615:7;3611:23;3607:32;3604:52;;;3652:1;3649;3642:12;3604:52;3692:9;3679:23;3725:18;3717:6;3714:30;3711:50;;;3757:1;3754;3747:12;3711:50;3796:58;3846:7;3837:6;3826:9;3822:22;3796:58;:::i;:::-;3873:8;;-1:-1:-1;3770:84:50;-1:-1:-1;;3961:2:50;3946:18;;3933:32;3990:18;3977:32;;3974:52;;;4022:1;4019;4012:12;3974:52;4061:60;4113:7;4102:8;4091:9;4087:24;4061:60;:::i;:::-;3469:712;;;;-1:-1:-1;4140:8:50;-1:-1:-1;;;;3469:712:50:o;4186:226::-;4245:6;4298:2;4286:9;4277:7;4273:23;4269:32;4266:52;;;4314:1;4311;4304:12;4266:52;-1:-1:-1;4359:23:50;;4186:226;-1:-1:-1;4186:226:50:o;4417:367::-;4480:8;4490:6;4544:3;4537:4;4529:6;4525:17;4521:27;4511:55;;4562:1;4559;4552:12;4511:55;-1:-1:-1;4585:20:50;;4628:18;4617:30;;4614:50;;;4660:1;4657;4650:12;4614:50;4697:4;4689:6;4685:17;4673:29;;4757:3;4750:4;4740:6;4737:1;4733:14;4725:6;4721:27;4717:38;4714:47;4711:67;;;4774:1;4771;4764:12;4789:1110;4958:6;4966;4974;4982;4990;4998;5051:2;5039:9;5030:7;5026:23;5022:32;5019:52;;;5067:1;5064;5057:12;5019:52;5107:9;5094:23;5140:18;5132:6;5129:30;5126:50;;;5172:1;5169;5162:12;5126:50;5211:70;5273:7;5264:6;5253:9;5249:22;5211:70;:::i;:::-;5300:8;;-1:-1:-1;5185:96:50;-1:-1:-1;;5388:2:50;5373:18;;5360:32;5417:18;5404:32;;5401:52;;;5449:1;5446;5439:12;5401:52;5488:72;5552:7;5541:8;5530:9;5526:24;5488:72;:::i;:::-;5579:8;;-1:-1:-1;5462:98:50;-1:-1:-1;;5667:2:50;5652:18;;5639:32;5696:18;5683:32;;5680:52;;;5728:1;5725;5718:12;5680:52;5767:72;5831:7;5820:8;5809:9;5805:24;5767:72;:::i;:::-;4789:1110;;;;-1:-1:-1;4789:1110:50;;-1:-1:-1;4789:1110:50;;5858:8;;4789:1110;-1:-1:-1;;;4789:1110:50:o;5904:184::-;5956:77;5953:1;5946:88;6053:4;6050:1;6043:15;6077:4;6074:1;6067:15;6093:334;6164:2;6158:9;6220:2;6210:13;;6225:66;6206:86;6194:99;;6323:18;6308:34;;6344:22;;;6305:62;6302:88;;;6370:18;;:::i;:::-;6406:2;6399:22;6093:334;;-1:-1:-1;6093:334:50:o;6432:617::-;6474:5;6527:3;6520:4;6512:6;6508:17;6504:27;6494:55;;6545:1;6542;6535:12;6494:55;6585:6;6572:20;6615:18;6607:6;6604:30;6601:56;;;6637:18;;:::i;:::-;6681:118;6793:4;6724:66;6717:4;6709:6;6705:17;6701:90;6697:101;6681:118;:::i;:::-;6824:6;6815:7;6808:23;6878:3;6871:4;6862:6;6854;6850:19;6846:30;6843:39;6840:59;;;6895:1;6892;6885:12;6840:59;6960:6;6953:4;6945:6;6941:17;6934:4;6925:7;6921:18;6908:59;7016:1;6987:20;;;7009:4;6983:31;6976:42;;;;6991:7;6432:617;-1:-1:-1;;;6432:617:50:o;7054:394::-;7131:6;7139;7192:2;7180:9;7171:7;7167:23;7163:32;7160:52;;;7208:1;7205;7198:12;7160:52;7231:29;7250:9;7231:29;:::i;:::-;7221:39;;7311:2;7300:9;7296:18;7283:32;7338:18;7330:6;7327:30;7324:50;;;7370:1;7367;7360:12;7324:50;7393:49;7434:7;7425:6;7414:9;7410:22;7393:49;:::i;:::-;7383:59;;;7054:394;;;;;:::o;8103:250::-;8188:1;8198:113;8212:6;8209:1;8206:13;8198:113;;;8288:11;;;8282:18;8269:11;;;8262:39;8234:2;8227:10;8198:113;;;-1:-1:-1;;8345:1:50;8327:16;;8320:27;8103:250::o;8358:455::-;8507:2;8496:9;8489:21;8470:4;8539:6;8533:13;8582:6;8577:2;8566:9;8562:18;8555:34;8598:79;8670:6;8665:2;8654:9;8650:18;8645:2;8637:6;8633:15;8598:79;:::i;:::-;8729:2;8717:15;8734:66;8713:88;8698:104;;;;8804:2;8694:113;;8358:455;-1:-1:-1;;8358:455:50:o;9069:597::-;9157:6;9165;9173;9181;9234:2;9222:9;9213:7;9209:23;9205:32;9202:52;;;9250:1;9247;9240:12;9202:52;9273:29;9292:9;9273:29;:::i;:::-;9263:39;-1:-1:-1;9371:2:50;9356:18;;9343:32;;-1:-1:-1;9450:2:50;9435:18;;9422:32;9477:18;9466:30;;9463:50;;;9509:1;9506;9499:12;9671:1221;9831:6;9839;9847;9855;9863;9871;9879;9887;9940:3;9928:9;9919:7;9915:23;9911:33;9908:53;;;9957:1;9954;9947:12;9908:53;9980:29;9999:9;9980:29;:::i;:::-;9970:39;;10028:38;10062:2;10051:9;10047:18;10028:38;:::i;:::-;10018:48;;10117:2;10106:9;10102:18;10089:32;10144:18;10136:6;10133:30;10130:50;;;10176:1;10173;10166:12;10130:50;10215:70;10277:7;10268:6;10257:9;10253:22;10215:70;:::i;:::-;10304:8;;-1:-1:-1;10189:96:50;-1:-1:-1;;10392:2:50;10377:18;;10364:32;10421:18;10408:32;;10405:52;;;10453:1;10450;10443:12;10405:52;10492:72;10556:7;10545:8;10534:9;10530:24;10492:72;:::i;:::-;10583:8;;-1:-1:-1;10466:98:50;-1:-1:-1;;10671:3:50;10656:19;;10643:33;10701:18;10688:32;;10685:52;;;10733:1;10730;10723:12;10685:52;10772:60;10824:7;10813:8;10802:9;10798:24;10772:60;:::i;:::-;9671:1221;;;;-1:-1:-1;9671:1221:50;;-1:-1:-1;9671:1221:50;;;;;;10851:8;-1:-1:-1;;;9671:1221:50:o;10897:793::-;11003:6;11011;11019;11027;11035;11043;11096:3;11084:9;11075:7;11071:23;11067:33;11064:53;;;11113:1;11110;11103:12;11064:53;11136:29;11155:9;11136:29;:::i;:::-;11126:39;;11184:38;11218:2;11207:9;11203:18;11184:38;:::i;:::-;11174:48;-1:-1:-1;11291:2:50;11276:18;;11263:32;;-1:-1:-1;11392:2:50;11377:18;;11364:32;;-1:-1:-1;11473:3:50;11458:19;;11445:33;11501:18;11490:30;;11487:50;;;11533:1;11530;11523:12;11487:50;11572:58;11622:7;11613:6;11602:9;11598:22;11572:58;:::i;11695:271::-;11878:6;11870;11865:3;11852:33;11834:3;11904:16;;11929:13;;;11904:16;11695:271;-1:-1:-1;11695:271:50:o;12670:184::-;12722:77;12719:1;12712:88;12819:4;12816:1;12809:15;12843:4;12840:1;12833:15;12859:186;12918:6;12971:2;12959:9;12950:7;12946:23;12942:32;12939:52;;;12987:1;12984;12977:12;12939:52;13010:29;13029:9;13010:29;:::i;13050:580::-;13127:4;13133:6;13193:11;13180:25;13283:66;13272:8;13256:14;13252:29;13248:102;13228:18;13224:127;13214:155;;13365:1;13362;13355:12;13214:155;13392:33;;13444:20;;;-1:-1:-1;13487:18:50;13476:30;;13473:50;;;13519:1;13516;13509:12;13473:50;13552:4;13540:17;;-1:-1:-1;13583:14:50;13579:27;;;13569:38;;13566:58;;;13620:1;13617;13610:12;14469:184;14539:6;14592:2;14580:9;14571:7;14567:23;14563:32;14560:52;;;14608:1;14605;14598:12;14560:52;-1:-1:-1;14631:16:50;;14469:184;-1:-1:-1;14469:184:50:o;15015:331::-;15120:9;15131;15173:8;15161:10;15158:24;15155:44;;;15195:1;15192;15185:12;15155:44;15224:6;15214:8;15211:20;15208:40;;;15244:1;15241;15234:12;15208:40;-1:-1:-1;;15270:23:50;;;15315:25;;;;;-1:-1:-1;15015:331:50:o;15351:1324::-;15462:6;15470;15478;15531:2;15519:9;15510:7;15506:23;15502:32;15499:52;;;15547:1;15544;15537:12;15499:52;15592:23;;;-1:-1:-1;15690:2:50;15675:18;;15662:32;15717:18;15706:30;;15703:50;;;15749:1;15746;15739:12;15703:50;15772:22;;15825:4;15817:13;;15813:27;-1:-1:-1;15803:55:50;;15854:1;15851;15844:12;15803:55;15894:2;15881:16;15920:18;15912:6;15909:30;15906:56;;;15942:18;;:::i;:::-;15988:6;15985:1;15981:14;16015:28;16039:2;16035;16031:11;16015:28;:::i;:::-;16077:19;;;16121:2;16151:11;;;16147:20;;;16112:12;;;;16179:19;;;16176:39;;;16211:1;16208;16201:12;16176:39;16243:2;16239;16235:11;16224:22;;16255:202;16271:6;16266:3;16263:15;16255:202;;;16365:17;;16395:20;;;16444:2;16288:12;;;;16365:17;;-1:-1:-1;16435:12:50;;;;16255:202;;;16476:5;-1:-1:-1;;;;16534:2:50;16519:18;;16506:32;;-1:-1:-1;16563:18:50;16550:32;;16547:52;;;16595:1;16592;16585:12;16547:52;16618:51;16661:7;16650:8;16639:9;16635:24;16618:51;:::i;:::-;16608:61;;;15351:1324;;;;;:::o;16933:184::-;16985:77;16982:1;16975:88;17082:4;17079:1;17072:15;17106:4;17103:1;17096:15;17122:168;17195:9;;;17226;;17243:15;;;17237:22;;17223:37;17213:71;;17264:18;;:::i;17295:125::-;17360:9;;;17381:10;;;17378:36;;;17394:18;;:::i;17635:287::-;17764:3;17802:6;17796:13;17818:66;17877:6;17872:3;17865:4;17857:6;17853:17;17818:66;:::i;:::-;17900:16;;;;;17635:287;-1:-1:-1;;17635:287:50:o;18943:325::-;19031:6;19026:3;19019:19;19083:6;19076:5;19069:4;19064:3;19060:14;19047:43;;19135:1;19128:4;19119:6;19114:3;19110:16;19106:27;19099:38;19001:3;19257:4;19187:66;19182:2;19174:6;19170:15;19166:88;19161:3;19157:98;19153:109;19146:116;;18943:325;;;;:::o;19273:392::-;19492:2;19481:9;19474:21;19455:4;19512:61;19569:2;19558:9;19554:18;19546:6;19538;19512:61;:::i;:::-;19604:2;19589:18;;19582:34;;;;-1:-1:-1;19647:2:50;19632:18;19625:34;19504:69;19273:392;-1:-1:-1;;19273:392:50:o;19923:441::-;20142:6;20131:9;20124:25;20197:42;20189:6;20185:55;20180:2;20169:9;20165:18;20158:83;20277:2;20272;20261:9;20257:18;20250:30;20105:4;20297:61;20354:2;20343:9;20339:18;20331:6;20323;20297:61;:::i;:::-;20289:69;19923:441;-1:-1:-1;;;;;;19923:441:50:o;20369:244::-;20526:2;20515:9;20508:21;20489:4;20546:61;20603:2;20592:9;20588:18;20580:6;20572;20546:61;:::i;20618:128::-;20685:9;;;20706:11;;;20703:37;;;20720:18;;:::i;20751:315::-;20936:2;20925:9;20918:21;20899:4;20956:61;21013:2;21002:9;20998:18;20990:6;20982;20956:61;:::i;:::-;20948:69;;21053:6;21048:2;21037:9;21033:18;21026:34;20751:315;;;;;;:::o;21071:324::-;21254:2;21243:9;21236:21;21217:4;21274:61;21331:2;21320:9;21316:18;21308:6;21300;21274:61;:::i;:::-;21266:69;;21383:4;21375:6;21371:17;21366:2;21355:9;21351:18;21344:45;21071:324;;;;;;:::o;22188:396::-;22395:2;22384:9;22377:21;22358:4;22415:61;22472:2;22461:9;22457:18;22449:6;22441;22415:61;:::i;:::-;22507:2;22492:18;;22485:34;;;;-1:-1:-1;22562:14:50;;22555:22;22550:2;22535:18;;;22528:50;22407:69;22188:396;-1:-1:-1;;22188:396:50:o;22589:321::-;22780:6;22769:9;22762:25;22823:2;22818;22807:9;22803:18;22796:30;22743:4;22843:61;22900:2;22889:9;22885:18;22877:6;22869;22843:61;:::i;22915:249::-;22984:6;23037:2;23025:9;23016:7;23012:23;23008:32;23005:52;;;23053:1;23050;23043:12;23005:52;23085:9;23079:16;23104:30;23128:5;23104:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "49": [
        { "start": 1140, "length": 32 },
        { "start": 3169, "length": 32 },
        { "start": 3678, "length": 32 },
        { "start": 6306, "length": 32 }
      ],
      "5045": [
        { "start": 4791, "length": 32 },
        { "start": 4832, "length": 32 },
        { "start": 5434, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "SET_IMAGE_HASH_TYPE_HASH()": "57c56d6b",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "VERSION()": "ffa1ad74",
    "entryPoint()": "b0d691fe",
    "execute(address,uint256,bytes)": "b61d27f6",
    "executeBatch(address[],uint256[],bytes[])": "47e1da2a",
    "getNonce()": "d087d288",
    "imageHash()": "51605d80",
    "initialize(bytes32)": "9498bd71",
    "isValidSignature(bytes,bytes)": "20c13b0b",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "proxiableUUID()": "52d1902d",
    "signatureRecovery(bytes32,bytes)": "853c5068",
    "supportsInterface(bytes4)": "01ffc9a7",
    "updateImageHash(bytes32)": "29561426",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"LightWalletInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@shunkakinoki\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Should be set to the address of the EntryPoint contract The official EntryPoint contract is at https://etherscan.io/address/0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789\",\"params\":{\"anEntryPoint\":\"The address of the entrypoint contract.\"}},\"execute(address,uint256,bytes)\":{\"params\":{\"dest\":\"The address of the target contract to call.\",\"func\":\"The calldata to send to the target contract.\",\"value\":\"The amount of Wei (ETH) to send along with the call.\"}},\"executeBatch(address[],uint256[],bytes[])\":{\"details\":\"to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\",\"params\":{\"dest\":\"The array of address of the target contract to call.\",\"func\":\"The array of calldata to send to the target contract.\",\"value\":\"The array of amount of Wei (ETH) to send along with the call.\"}},\"initialize(bytes32)\":{\"params\":{\"imageHash\":\"The hash to validate the signature against.\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"title\":\"LightWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"The name for this contract\"},\"VERSION()\":{\"notice\":\"The version for this contract\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Executes a transaction (called directly by entryPoint)\"},\"executeBatch(address[],uint256[],bytes[])\":{\"notice\":\"Executes a sequence of transactions (called directly by entryPoint)\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"},\"initialize(bytes32)\":{\"notice\":\"The _entryPoint member is immutable, to reduce gas consumption. To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"LightWallet is an account abstraction contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/LightWallet.sol\":\"LightWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@/bytecode/=contracts/bytecode/\",\":@/circuit/=contracts/circuits/\",\":@/constant/=contracts/constant/\",\":@/contracts/=contracts/src/\",\":@/script/=contracts/script/\",\":@/test/=contracts/test/\",\":@0xsequence/wallet-contracts-v3/=lib/wallet-contracts-v3/\",\":@0xsequence/wallet-contracts/=lib/wallet-contracts/\",\":@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/\",\":@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":@asynchronous-vault/=lib/asynchronous-vault/src/\",\":@biconomy/account-contracts/=lib/scw-contracts/\",\":@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/\",\":@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/\",\":@eth-infinitism/account-abstraction/=lib/account-abstraction/\",\":@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/\",\":@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/\",\":@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/\",\":@rhinestone/core-modules/=lib/core-modules/src/\",\":@rhinestone/module-bases/=lib/module-bases/src/\",\":@rhinestone/modulekit/=lib/modulekit/src/\",\":@safe-global/safe-contracts/=lib/safe-contracts/\",\":@source/=lib/soul-wallet-contract/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@zerodevapp/contracts/=lib/kernel/src/\",\":account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/\",\":account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":asynchronous-vault/=lib/asynchronous-vault/src/\",\":core-modules/=lib/core-modules/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":magic-spend/=lib/magic-spend/src/\",\":module-bases/=lib/module-bases/src/\",\":modulekit/=lib/modulekit/src/\",\":murky/=lib/murky/src/\",\":nexus/=lib/nexus/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":seaport/=lib/seaport/\",\":singleton-paymaster/=lib/singleton-paymaster/src/\",\":solady/=lib/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solmate/=lib/solmate/src/\",\":src/=lib/kernel/src/\",\":surl/=lib/surl/src/\"]},\"sources\":{\"contracts/src/LightWallet.sol\":{\"keccak256\":\"0x1e125e2f2ad50965d7fdc694c6142e0a23479c76ec1e1c323771f686f0253938\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c383e02e961360a3f6ee48a956e3909d551cc1691692dc1319292a43f50a994a\",\"dweb:/ipfs/QmVd2SkhmMiHF1q2pEzgQJDGxCwfT8JcUTCNM5MFkAZeQr\"]},\"contracts/src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x3936efafeb923536ceda92ae923946a839ba4b09f5b112762f1c7925a31b52f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0afdfe6f5dffd7d948ded75a4db43598cea3ff8fa04e3d4f1d1e94ab5990da0\",\"dweb:/ipfs/QmeLRVV5sQZU6CjKnUs4gpFU4g9z5FRQBvq8ZFyGtTSL9x\"]},\"contracts/src/interfaces/ILightWallet.sol\":{\"keccak256\":\"0x5d3c53f053aa4fbaaf8cba03398637499385735c51a08e374d0236b7eebcc630\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93b0e5d2b7ebbbccce3f901195a8152e836383e206f1798246fe93037e39c3e\",\"dweb:/ipfs/QmZE7xAoJiKXDYEBtBYZgCqi1myWDM9SDCsYnm9drQ8YYR\"]},\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe\",\"dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/wallet-contracts/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0xd5b77e8a67d37eddc09b1ed8e6c928ecc087a007500fb0a5ba9b4f62c03523c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c3e505c269edd609ec16609c584709d1dedb95dae97358e23e842b63b89d83f6\",\"dweb:/ipfs/QmSkaHKc4xw1MESJtTEPYsjLANHGKWtgVaoTM7bQ2yXavx\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0xe60c6f06605e36bf8796a672afc8adf6b803b8dd2200d9b4eb22a567dd0ca0e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e987eaa5ad2b15b6fe5900eae103553b66290bfc6bfa30726b81a8044d70f087\",\"dweb:/ipfs/QmU87dwmFHfcJjnmJqzKcEru1JUR4EZgcu5c3W1E4hHm5B\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleAuthUpgradable.sol\":{\"keccak256\":\"0x24d9f069d0e13ae0c33bcb280bee2572f4ccbfae006f3b581741a6c6f2bc52ee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44cb3390aed7a6782e76255386e760f64323b2b1f00855e560929e87431deaae\",\"dweb:/ipfs/QmSiKZ2A5LVcRUyh7vpKPicUcrU4p7oLCrHmdhJy9h8UZr\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0x9d60bfafc106bf0d36f6d3afd0958c02a0b6564c0d7aebc7df4a4ab0bc84d6b2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2be58dfe657761a82446c8c2bab2c620f22b4d6cb5c012774bceb4bf37dc955b\",\"dweb:/ipfs/QmQWTpfLvSBM7tA6vzud9A6TuS78n3MPymByQsJmhphca1\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0xb679203e33fbbe15f492af6d9d9a173dd9ad04019cc82b6577642617cb7e5d2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://087ba33db9449a77b4c904f2617cc9df5c73e84224666cac88ff1ece2b4f8033\",\"dweb:/ipfs/QmQP6jKGGaDfyY1z1tm7WYfosnkKg3H5ADqR9ftCRBJL9R\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x62aea3f4f8ef814ec443dd5f7e44efd4f2b18b44187b2cf938d6c39f27f2b2d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64558bd50aecdb88893cd8edc8cde2b85770f62b0e40613f280775402fc737bf\",\"dweb:/ipfs/QmeHKeZWaFfMpHXyHtpXvEpvgjcnsECX9CMn4fURJRcgCc\"]},\"lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x0cd19d5eeadd30f6de13cc9127b0e05af7633aa5b1d5cd70f7da74989ae5abb2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://572c801c1a232d5616f02c17222362e9f7051169be54b67f524c009151b00f4d\",\"dweb:/ipfs/QmV2YsNoy6fErAjZF68nUu6RBMYTDXQUqNtGL35PWBcGnZ\"]},\"lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x951597313801c9d6efa4cc00dd2a6e0e01f80a0a6f27c1e28cf72c94a860fc8d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93bf704ada9a2929b850ce45436d0117738a568cfd30572a36d553c8d05d768d\",\"dweb:/ipfs/QmQioto3qH8YLwy5nzYoPC1dhD9rpeVTEm4YJWL43huZeZ\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x1e6e16590f5b517f94057b62303bcc49e2b87e19e22a15002c9d5103b4a46bcf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c98970fb1b3ea998709379ea31ecdcf309b160f724206b96e2d2c4a892a2a6bb\",\"dweb:/ipfs/QmdnMd6N8UZg4K6oC1HpF4CkToKP9NVzf9gFCvD6QGQF9X\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x61e4635b7dab63362caac2c714bc71cb1f527bca1d29139767389a7d59ef5255\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aa727d4b51339ec9bb5e053c8be0d2f2616203afa2971c0a6530bdc51c4e520a\",\"dweb:/ipfs/QmQAQW6og8rweuNuD4513EC1F85ciwLSAEGU1zYWUsQwoK\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x7fd6759893c46259f1d658df3b6da7faed3bb3cc0adb698775364dbf975e3efe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0bbee3f20bd14333b9159841beb10fb143a1de85f3e2e155723c7973a70a272\",\"dweb:/ipfs/QmY8nsfDHbB8uL8onKQoi9T8HShytrK5XmEyqR32EUbwZa\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xe8c45e4a0bdcd33a6b4d6cfd8aeb10f3a0bddb83d2eae4bdd078dc9b120ec99d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://427c63f11f40bf683214f8ddb9eff3a8bc43681a8f165a191a159693f5d68ec1\",\"dweb:/ipfs/QmeT8t6X77eEkigWAKqfaVH4XBqFKs2amC7PptAa5J51Xj\"]},\"lib/wallet-contracts/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x49fc5e7066a52b984ac3d8a89c4a7346b31b8e094f31866c87bf1bfedadeb1ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://612da99bc260e9682fcd9c168be6fdfbd5fa24642fc555f1c994370d98135863\",\"dweb:/ipfs/QmVbnRETAJQPyHh3i5BCft9U3XZ7zJQeAqbLgGAMv5yvJ3\"]},\"lib/wallet-contracts/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x20cc4cc1175833261cf1e6ebbcf4cfad07cb4ed0d999c7d40e0d1e67c8e9839b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b03e2a9b13bfa48ff090df85c4e06498bd65895482f6345c42a2f0cadc4e3b90\",\"dweb:/ipfs/QmcMkEM9JU4xv9cXzVGibpcoUiwJxWXgWJLqw6Z2KsEmD9\"]},\"lib/wallet-contracts/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x32ad5763ec0efb4aa66ce8056d320264cf1d32167f8d564ab32be38622a3cca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff2644d690b3aaea9e84e4f938415ef45dfa7a0af390b2ad7e9d5f72b9a99a37\",\"dweb:/ipfs/QmXPUXuhKdSos5frqJYzBjos9sKb1PiyeZSUzfBYiFdy8U\"]},\"lib/wallet-contracts/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x6a309da4b71b9d267b5f196e08b23628d870f9d208a47c5c06d564f26238dec4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b7b6cd6ce4f31a5432a430bbe3e97dceb0b4159ac75550dc13b04cba6dae43ec\",\"dweb:/ipfs/Qmd8aGwgcVYU7cZDasfGru6NoehfNYdUgzW5ujyqB22kbt\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "anEntryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EmptySignature" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "ImageHashIsZero" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "root", "type": "bytes32" },
            { "internalType": "bytes32", "name": "leaf", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_hash", "type": "bytes32" },
            { "internalType": "address", "name": "_addr", "type": "address" },
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "InvalidNestedSignature"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "bytes32", "name": "_s", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidSValue"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_flag", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidSignatureFlag"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [
            { "internalType": "bytes1", "name": "_type", "type": "bytes1" }
          ],
          "type": "error",
          "name": "InvalidSignatureType"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "uint256", "name": "_v", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidVValue"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_weight", "type": "uint256" }
          ],
          "type": "error",
          "name": "LowWeightChainedSignature"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "address", "name": "_sender", "type": "address" },
            { "internalType": "address", "name": "_self", "type": "address" }
          ],
          "type": "error",
          "name": "OnlySelfAuth"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "SignerIsAddress0"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "uint256", "name": "_type", "type": "uint256" },
            { "internalType": "bool", "name": "_recoverMode", "type": "bool" }
          ],
          "type": "error",
          "name": "UnsupportedSignatureType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_current",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_prev", "type": "uint256" }
          ],
          "type": "error",
          "name": "WrongChainedCheckpointOrder"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "newImageHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ImageHashUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LightWalletInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SET_IMAGE_HASH_TYPE_HASH",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "dest", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "bytes", "name": "func", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "dest",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            { "internalType": "bytes[]", "name": "func", "type": "bytes[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "imageHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "imageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
            { "internalType": "bytes", "name": "signatures", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_data", "type": "bytes" },
            { "internalType": "bytes", "name": "_signatures", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" },
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_digest", "type": "bytes32" },
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signatureRecovery",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "weight", "type": "uint256" },
            {
              "internalType": "bytes32",
              "name": "imageHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "subdigest",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "checkpoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_imageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateImageHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Should be set to the address of the EntryPoint contract The official EntryPoint contract is at https://etherscan.io/address/0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789",
            "params": {
              "anEntryPoint": "The address of the entrypoint contract."
            }
          },
          "execute(address,uint256,bytes)": {
            "params": {
              "dest": "The address of the target contract to call.",
              "func": "The calldata to send to the target contract.",
              "value": "The amount of Wei (ETH) to send along with the call."
            }
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "details": "to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value",
            "params": {
              "dest": "The array of address of the target contract to call.",
              "func": "The array of calldata to send to the target contract.",
              "value": "The array of amount of Wei (ETH) to send along with the call."
            }
          },
          "initialize(bytes32)": {
            "params": {
              "imageHash": "The hash to validate the signature against."
            }
          },
          "isValidSignature(bytes,bytes)": {
            "details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
            "params": {
              "_data": "Arbitrary length data signed on the behalf of address(this)",
              "_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
            },
            "returns": {
              "_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
            "params": {
              "_hash": "keccak256 hash that was signed",
              "_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
            },
            "returns": {
              "_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "signatureRecovery(bytes32,bytes)": {
            "details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
            "params": {
              "_digest": "Digest of the signed data.",
              "_signature": "A Sequence signature."
            },
            "returns": {
              "checkpoint": "A nonce that is incremented every time a new configuration is set.",
              "imageHash": "The imageHash of the configuration that signed the message.",
              "subdigest": "A modified version of the original digest, unique for each wallet/network.",
              "threshold": "The required number of signatures needed to consider the signature valid.",
              "weight": "The actual number of signatures collected in the signature."
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "_interfaceID": "The interface identifier, as specified in ERC-165"
            },
            "returns": {
              "_0": "`true` if the contract implements `_interfaceID`"
            }
          },
          "updateImageHash(bytes32)": {
            "params": {
              "_imageHash": "New required image hash of the signature"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
            "params": {
              "missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
              "userOp": "- The operation that is about to be executed.",
              "userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
            },
            "returns": {
              "validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NAME()": { "notice": "The name for this contract" },
          "VERSION()": { "notice": "The version for this contract" },
          "entryPoint()": {
            "notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
          },
          "execute(address,uint256,bytes)": {
            "notice": "Executes a transaction (called directly by entryPoint)"
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "notice": "Executes a sequence of transactions (called directly by entryPoint)"
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "imageHash()": {
            "notice": "Returns the current image hash of the wallet"
          },
          "initialize(bytes32)": {
            "notice": "The _entryPoint member is immutable, to reduce gas consumption. To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`"
          },
          "isValidSignature(bytes,bytes)": {
            "notice": "Verifies whether the provided signature is valid with respect to the provided data"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies whether the provided signature is valid with respect to the provided hash"
          },
          "signatureRecovery(bytes32,bytes)": {
            "notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface"
          },
          "updateImageHash(bytes32)": {
            "notice": "Updates the signers configuration of the wallet"
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@/bytecode/=contracts/bytecode/",
        "@/circuit/=contracts/circuits/",
        "@/constant/=contracts/constant/",
        "@/contracts/=contracts/src/",
        "@/script/=contracts/script/",
        "@/test/=contracts/test/",
        "@0xsequence/wallet-contracts-v3/=lib/wallet-contracts-v3/",
        "@0xsequence/wallet-contracts/=lib/wallet-contracts/",
        "@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/",
        "@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/",
        "@account-abstraction/=lib/account-abstraction/contracts/",
        "@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "@asynchronous-vault/=lib/asynchronous-vault/src/",
        "@biconomy/account-contracts/=lib/scw-contracts/",
        "@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/",
        "@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/",
        "@eth-infinitism/account-abstraction/=lib/account-abstraction/",
        "@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/",
        "@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/",
        "@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/",
        "@rhinestone/core-modules/=lib/core-modules/src/",
        "@rhinestone/module-bases/=lib/module-bases/src/",
        "@rhinestone/modulekit/=lib/modulekit/src/",
        "@safe-global/safe-contracts/=lib/safe-contracts/",
        "@source/=lib/soul-wallet-contract/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "@zerodevapp/contracts/=lib/kernel/src/",
        "account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/",
        "account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "asynchronous-vault/=lib/asynchronous-vault/src/",
        "core-modules/=lib/core-modules/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "magic-spend/=lib/magic-spend/src/",
        "module-bases/=lib/module-bases/src/",
        "modulekit/=lib/modulekit/src/",
        "murky/=lib/murky/src/",
        "nexus/=lib/nexus/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "seaport/=lib/seaport/",
        "singleton-paymaster/=lib/singleton-paymaster/src/",
        "solady/=lib/solady/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/kernel/src/",
        "surl/=lib/surl/src/"
      ],
      "optimizer": { "enabled": true, "runs": 4294967295 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "contracts/src/LightWallet.sol": "LightWallet" },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "contracts/src/LightWallet.sol": {
        "keccak256": "0x1e125e2f2ad50965d7fdc694c6142e0a23479c76ec1e1c323771f686f0253938",
        "urls": [
          "bzz-raw://c383e02e961360a3f6ee48a956e3909d551cc1691692dc1319292a43f50a994a",
          "dweb:/ipfs/QmVd2SkhmMiHF1q2pEzgQJDGxCwfT8JcUTCNM5MFkAZeQr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IERC1271.sol": {
        "keccak256": "0x3936efafeb923536ceda92ae923946a839ba4b09f5b112762f1c7925a31b52f3",
        "urls": [
          "bzz-raw://e0afdfe6f5dffd7d948ded75a4db43598cea3ff8fa04e3d4f1d1e94ab5990da0",
          "dweb:/ipfs/QmeLRVV5sQZU6CjKnUs4gpFU4g9z5FRQBvq8ZFyGtTSL9x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/ILightWallet.sol": {
        "keccak256": "0x5d3c53f053aa4fbaaf8cba03398637499385735c51a08e374d0236b7eebcc630",
        "urls": [
          "bzz-raw://b93b0e5d2b7ebbbccce3f901195a8152e836383e206f1798246fe93037e39c3e",
          "dweb:/ipfs/QmZE7xAoJiKXDYEBtBYZgCqi1myWDM9SDCsYnm9drQ8YYR"
        ],
        "license": "Apache-2.0"
      },
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358",
        "urls": [
          "bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07",
          "dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
        "urls": [
          "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
          "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
        "urls": [
          "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
          "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
        "urls": [
          "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
          "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
        "urls": [
          "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
          "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7",
        "urls": [
          "bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe",
          "dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7",
        "urls": [
          "bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd",
          "dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3",
        "urls": [
          "bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23",
          "dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/wallet-contracts/contracts/interfaces/IERC1271Wallet.sol": {
        "keccak256": "0xd5b77e8a67d37eddc09b1ed8e6c928ecc087a007500fb0a5ba9b4f62c03523c0",
        "urls": [
          "bzz-raw://c3e505c269edd609ec16609c584709d1dedb95dae97358e23e842b63b89d83f6",
          "dweb:/ipfs/QmSkaHKc4xw1MESJtTEPYsjLANHGKWtgVaoTM7bQ2yXavx"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleAuth.sol": {
        "keccak256": "0xe60c6f06605e36bf8796a672afc8adf6b803b8dd2200d9b4eb22a567dd0ca0e6",
        "urls": [
          "bzz-raw://e987eaa5ad2b15b6fe5900eae103553b66290bfc6bfa30726b81a8044d70f087",
          "dweb:/ipfs/QmU87dwmFHfcJjnmJqzKcEru1JUR4EZgcu5c3W1E4hHm5B"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleAuthUpgradable.sol": {
        "keccak256": "0x24d9f069d0e13ae0c33bcb280bee2572f4ccbfae006f3b581741a6c6f2bc52ee",
        "urls": [
          "bzz-raw://44cb3390aed7a6782e76255386e760f64323b2b1f00855e560929e87431deaae",
          "dweb:/ipfs/QmSiKZ2A5LVcRUyh7vpKPicUcrU4p7oLCrHmdhJy9h8UZr"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleERC165.sol": {
        "keccak256": "0x9d60bfafc106bf0d36f6d3afd0958c02a0b6564c0d7aebc7df4a4ab0bc84d6b2",
        "urls": [
          "bzz-raw://2be58dfe657761a82446c8c2bab2c620f22b4d6cb5c012774bceb4bf37dc955b",
          "dweb:/ipfs/QmQWTpfLvSBM7tA6vzud9A6TuS78n3MPymByQsJmhphca1"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleSelfAuth.sol": {
        "keccak256": "0xb679203e33fbbe15f492af6d9d9a173dd9ad04019cc82b6577642617cb7e5d2b",
        "urls": [
          "bzz-raw://087ba33db9449a77b4c904f2617cc9df5c73e84224666cac88ff1ece2b4f8033",
          "dweb:/ipfs/QmQP6jKGGaDfyY1z1tm7WYfosnkKg3H5ADqR9ftCRBJL9R"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleStorage.sol": {
        "keccak256": "0x62aea3f4f8ef814ec443dd5f7e44efd4f2b18b44187b2cf938d6c39f27f2b2d6",
        "urls": [
          "bzz-raw://64558bd50aecdb88893cd8edc8cde2b85770f62b0e40613f280775402fc737bf",
          "dweb:/ipfs/QmeHKeZWaFfMpHXyHtpXvEpvgjcnsECX9CMn4fURJRcgCc"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuth.sol": {
        "keccak256": "0x0cd19d5eeadd30f6de13cc9127b0e05af7633aa5b1d5cd70f7da74989ae5abb2",
        "urls": [
          "bzz-raw://572c801c1a232d5616f02c17222362e9f7051169be54b67f524c009151b00f4d",
          "dweb:/ipfs/QmV2YsNoy6fErAjZF68nUu6RBMYTDXQUqNtGL35PWBcGnZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol": {
        "keccak256": "0x951597313801c9d6efa4cc00dd2a6e0e01f80a0a6f27c1e28cf72c94a860fc8d",
        "urls": [
          "bzz-raw://93bf704ada9a2929b850ce45436d0117738a568cfd30572a36d553c8d05d768d",
          "dweb:/ipfs/QmQioto3qH8YLwy5nzYoPC1dhD9rpeVTEm4YJWL43huZeZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
        "keccak256": "0x1e6e16590f5b517f94057b62303bcc49e2b87e19e22a15002c9d5103b4a46bcf",
        "urls": [
          "bzz-raw://c98970fb1b3ea998709379ea31ecdcf309b160f724206b96e2d2c4a892a2a6bb",
          "dweb:/ipfs/QmdnMd6N8UZg4K6oC1HpF4CkToKP9NVzf9gFCvD6QGQF9X"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
        "keccak256": "0x61e4635b7dab63362caac2c714bc71cb1f527bca1d29139767389a7d59ef5255",
        "urls": [
          "bzz-raw://aa727d4b51339ec9bb5e053c8be0d2f2616203afa2971c0a6530bdc51c4e520a",
          "dweb:/ipfs/QmQAQW6og8rweuNuD4513EC1F85ciwLSAEGU1zYWUsQwoK"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
        "keccak256": "0x7fd6759893c46259f1d658df3b6da7faed3bb3cc0adb698775364dbf975e3efe",
        "urls": [
          "bzz-raw://e0bbee3f20bd14333b9159841beb10fb143a1de85f3e2e155723c7973a70a272",
          "dweb:/ipfs/QmY8nsfDHbB8uL8onKQoi9T8HShytrK5XmEyqR32EUbwZa"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
        "keccak256": "0xe8c45e4a0bdcd33a6b4d6cfd8aeb10f3a0bddb83d2eae4bdd078dc9b120ec99d",
        "urls": [
          "bzz-raw://427c63f11f40bf683214f8ddb9eff3a8bc43681a8f165a191a159693f5d68ec1",
          "dweb:/ipfs/QmeT8t6X77eEkigWAKqfaVH4XBqFKs2amC7PptAa5J51Xj"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibBytes.sol": {
        "keccak256": "0x49fc5e7066a52b984ac3d8a89c4a7346b31b8e094f31866c87bf1bfedadeb1ac",
        "urls": [
          "bzz-raw://612da99bc260e9682fcd9c168be6fdfbd5fa24642fc555f1c994370d98135863",
          "dweb:/ipfs/QmVbnRETAJQPyHh3i5BCft9U3XZ7zJQeAqbLgGAMv5yvJ3"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibBytesPointer.sol": {
        "keccak256": "0x20cc4cc1175833261cf1e6ebbcf4cfad07cb4ed0d999c7d40e0d1e67c8e9839b",
        "urls": [
          "bzz-raw://b03e2a9b13bfa48ff090df85c4e06498bd65895482f6345c42a2f0cadc4e3b90",
          "dweb:/ipfs/QmcMkEM9JU4xv9cXzVGibpcoUiwJxWXgWJLqw6Z2KsEmD9"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibOptim.sol": {
        "keccak256": "0x32ad5763ec0efb4aa66ce8056d320264cf1d32167f8d564ab32be38622a3cca6",
        "urls": [
          "bzz-raw://ff2644d690b3aaea9e84e4f938415ef45dfa7a0af390b2ad7e9d5f72b9a99a37",
          "dweb:/ipfs/QmXPUXuhKdSos5frqJYzBjos9sKb1PiyeZSUzfBYiFdy8U"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/SignatureValidator.sol": {
        "keccak256": "0x6a309da4b71b9d267b5f196e08b23628d870f9d208a47c5c06d564f26238dec4",
        "urls": [
          "bzz-raw://b7b6cd6ce4f31a5432a430bbe3e97dceb0b4159ac75550dc13b04cba6dae43ec",
          "dweb:/ipfs/Qmd8aGwgcVYU7cZDasfGru6NoehfNYdUgzW5ujyqB22kbt"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "id": 0
}
