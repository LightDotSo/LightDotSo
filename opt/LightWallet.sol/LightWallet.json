{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "anEntryPoint",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "NAME",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SET_IMAGE_HASH_TYPE_HASH",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "entryPoint",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "dest", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "func", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        { "name": "dest", "type": "address[]", "internalType": "address[]" },
        { "name": "value", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "func", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getNonce",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "imageHash",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "imageHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        { "name": "hash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        { "name": "_data", "type": "bytes", "internalType": "bytes" },
        { "name": "_signatures", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onERC1155BatchReceived",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC1155Received",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC721Received",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "signatureRecovery",
      "inputs": [
        { "name": "_digest", "type": "bytes32", "internalType": "bytes32" },
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "threshold", "type": "uint256", "internalType": "uint256" },
        { "name": "weight", "type": "uint256", "internalType": "uint256" },
        { "name": "imageHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "subdigest", "type": "bytes32", "internalType": "bytes32" },
        { "name": "checkpoint", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "updateImageHash",
      "inputs": [
        { "name": "_imageHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "initCode", "type": "bytes", "internalType": "bytes" },
            { "name": "callData", "type": "bytes", "internalType": "bytes" },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "gasFees", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "userOpHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ImageHashUpdated",
      "inputs": [
        {
          "name": "newImageHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LightWalletInitialized",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "indexed": true,
          "internalType": "contract IEntryPoint"
        },
        {
          "name": "hash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EmptySignature", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "ImageHashIsZero", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": [
        { "name": "root", "type": "bytes32", "internalType": "bytes32" },
        { "name": "leaf", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidNestedSignature",
      "inputs": [
        { "name": "_hash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "_addr", "type": "address", "internalType": "address" },
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSValue",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_s", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureFlag",
      "inputs": [
        { "name": "_flag", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureLength",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureType",
      "inputs": [
        { "name": "_type", "type": "bytes1", "internalType": "bytes1" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidVValue",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_v", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "LowWeightChainedSignature",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" },
        { "name": "_weight", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OnlySelfAuth",
      "inputs": [
        { "name": "_sender", "type": "address", "internalType": "address" },
        { "name": "_self", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SignerIsAddress0",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "UnsupportedSignatureType",
      "inputs": [
        { "name": "_signature", "type": "bytes", "internalType": "bytes" },
        { "name": "_type", "type": "uint256", "internalType": "uint256" },
        { "name": "_recoverMode", "type": "bool", "internalType": "bool" }
      ]
    },
    {
      "type": "error",
      "name": "WrongChainedCheckpointOrder",
      "inputs": [
        { "name": "_current", "type": "uint256", "internalType": "uint256" },
        { "name": "_prev", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60c060405230608052348015610013575f5ffd5b506040516130e43803806130e4833981016040819052610032916100ff565b6001600160a01b03811660a05261004761004d565b5061012c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561009d5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100fc5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f6020828403121561010f575f5ffd5b81516001600160a01b0381168114610125575f5ffd5b9392505050565b60805160a051612f746101705f395f818161045b01528181610c2f01528181610e26015261185101525f818161126d0152818161129601526114f00152612f745ff3fe608060405260043610610165575f3560e01c806357c56d6b116100c6578063b0d691fe1161007c578063d087d28811610057578063d087d288146104eb578063f23a6e61146104ff578063ffa1ad7414610544575f5ffd5b8063b0d691fe14610435578063b61d27f614610485578063bc197c81146104a4575f5ffd5b80639498bd71116100ac5780639498bd7114610379578063a3f4df7e14610398578063ad3cb1cc146103ed575f5ffd5b806357c56d6b146102ff578063853c506814610332575f5ffd5b8063295614261161011b5780634f1ef286116101015780634f1ef286146102c457806351605d80146102d757806352d1902d146102eb575f5ffd5b8063295614261461028457806347e1da2a146102a5575f5ffd5b80631626ba7e1161014b5780631626ba7e1461021957806319822f7c1461023857806320c13b0b14610265575f5ffd5b806301ffc9a714610170578063150b7a02146101a4575f5ffd5b3661016c57005b5f5ffd5b34801561017b575f5ffd5b5061018f61018a3660046125be565b61058c565b60405190151581526020015b60405180910390f35b3480156101af575f5ffd5b506101e86101be366004612646565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b348015610224575f5ffd5b506101e86102333660046126b0565b61059c565b348015610243575f5ffd5b506102576102523660046126f8565b6105b2565b60405190815260200161019b565b348015610270575f5ffd5b506101e861027f366004612747565b6105d0565b34801561028f575f5ffd5b506102a361029e3660046127b3565b610633565b005b3480156102b0575f5ffd5b506102a36102bf36600461280b565b610685565b6102a36102d23660046129b0565b610822565b3480156102e2575f5ffd5b50610257610841565b3480156102f6575f5ffd5b5061025761086f565b34801561030a575f5ffd5b506102577f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561033d575f5ffd5b5061035161034c3660046126b0565b61089d565b604080519586526020860194909452928401919091526060830152608082015260a00161019b565b348015610384575f5ffd5b506102a36103933660046127b3565b610a61565b3480156103a3575f5ffd5b506103e06040518060400160405280600b81526020017f4c6967687457616c6c657400000000000000000000000000000000000000000081525081565b60405161019b91906129fb565b3480156103f8575f5ffd5b506103e06040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610440575f5ffd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161019b565b348015610490575f5ffd5b506102a361049f366004612a4e565b610bde565b3480156104af575f5ffd5b506101e86104be366004612a8c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156104f6575f5ffd5b50610257610c2c565b34801561050a575f5ffd5b506101e8610519366004612b4b565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561054f575f5ffd5b506103e06040518060400160405280600581526020017f302e342e3000000000000000000000000000000000000000000000000000000081525081565b5f61059682610ce2565b92915050565b5f6105a8848484610dc5565b90505b9392505050565b5f6105bb610e0e565b6105c58484610eaf565b90506105ab82611097565b5f5f6105f486866040516105e5929190612bac565b6040518091039020858561110b565b509050801561062657507f20c13b0b00000000000000000000000000000000000000000000000000000000905061062b565b505f90505b949350505050565b333014610679576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61068281611146565b50565b61068d610e0e565b84811480156106a357508215806106a357508281145b610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606401610670565b5f8390036107b1575f5b858110156107ab576107a387878381811061073057610730612bbb565b90506020020160208101906107459190612be8565b5f85858581811061075857610758612bbb565b905060200281019061076a9190612c01565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111dc92505050565b600101610713565b5061081a565b5f5b85811015610818576108108787838181106107d0576107d0612bbb565b90506020020160208101906107e59190612be8565b8686848181106107f7576107f7612bbb565b9050602002013585858581811061075857610758612bbb565b6001016107b3565b505b505050505050565b61082a611255565b61083382611359565b61083d828261139a565b5050565b5f61086a7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b5f6108786114d8565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b5f5f5f5f5f5f87875f8181106108b5576108b5612bbb565b909101357fff0000000000000000000000000000000000000000000000000000000000000016915081905061090b576108ed89611547565b92506108fa8389896115cb565b92985090965094509150610a569050565b7fff000000000000000000000000000000000000000000000000000000000000008181160161094a5761093d89611547565b92506108fa83898961161a565b7ffe000000000000000000000000000000000000000000000000000000000000007fff0000000000000000000000000000000000000000000000000000000000000082160161099c5761093d89611645565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610a00576109f08989896116b1565b9550955095509550955050610a56565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff0000000000000000000000000000000000000000000000000000000000000082166004820152602401610670565b939792965093509350565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610aab5750825b90505f8267ffffffffffffffff166001148015610ac75750303b155b905081158015610ad5575080155b15610b0c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b6d5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610b768661182c565b831561081a5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b610be6610e0e565b610c26848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111dc92505050565b50505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201525f602482015273ffffffffffffffffffffffffffffffffffffffff91909116906335567e1a90604401602060405180830381865afa158015610cbe573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086a9190612c62565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a02000000000000000000000000000000000000000000000000000000001480610d7457507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061059657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a7000000000000000000000000000000000000000000000000000000001492915050565b5f5f610dd285858561110b565b5090508015610e0457507f1626ba7e0000000000000000000000000000000000000000000000000000000090506105ab565b505f949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ead576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610670565b565b5f80610ebf610100850185612c01565b5f818110610ecf57610ecf612bbb565b7fff000000000000000000000000000000000000000000000000000000000000009201359182169250507f030000000000000000000000000000000000000000000000000000000000000016819003610f57575f610f3a84610f35610100880188612c01565b61110b565b50905080610f4d57600192505050610596565b5f92505050610596565b7fff0000000000000000000000000000000000000000000000000000000000000081167f04000000000000000000000000000000000000000000000000000000000000000361108d575f8080610fb1610100880188612c01565b610fbf916001908290612c79565b810190610fcc9190612ca0565b925092509250610fdd82848861189a565b61101d576040517faab788dc0000000000000000000000000000000000000000000000000000000081526004810184905260248101879052604401610670565b5f8251602061102c9190612dad565b6110379060a1612dc4565b90505f6110688561104c6101008c018c612c01565b859087518761105b9190612dc4565b92610f3593929190612c79565b5090508061107f5760019650505050505050610596565b5f9650505050505050610596565b5060019392505050565b8015610682576040515f9033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d805f81146110ff576040519150601f19603f3d011682016040523d82523d5f602084013e611104565b606091505b5050505050565b5f5f5f5f5f61111b88888861089d565b509650919450925090508282108015906111395750611139816118af565b9450505050935093915050565b8061117d576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111a67fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a150565b5f5f8473ffffffffffffffffffffffffffffffffffffffff1684846040516112049190612dd7565b5f6040518083038185875af1925050503d805f811461123e576040519150601f19603f3d011682016040523d82523d5f602084013e611243565b606091505b50915091508161110457805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061132257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113097f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ead576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b333014610682576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610670565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561141f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261141c91810190612c62565b60015b61146d576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610670565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146114c9576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610670565b6114d383836118e1565b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ead576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290525f906076015b604051602081830303815290604052805190602001209050919050565b5f8080806115e5876115e0876006818b612c79565b611943565b5f908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b5f8080806116348761162f876001818b612c79565b6115cb565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201525f602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115ae565b5f808080806004600188013560e81c826116cb8383612dc4565b90506116dd8b61034c83868d8f612c79565b939b5091995097509550935087871015611735576116fd81848b8d612c79565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106709493929190612e34565b8092505b8883101561181e5760038301928a013560e81c91506117588383612dc4565b90505f61177961176788611dc5565b8c8c8790869261034c93929190612c79565b939c50919a50985090915050888810156117d15761179982858c8e612c79565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106709493929190612e34565b848110611814576040517f37daf62b0000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610670565b9350915081611739565b505050939792965093509350565b61183581611146565b604051819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f6f2a6aac3f1c9fc5bb4eec9d305f0036888047b27e7ca599572afe083d9879e8905f90a350565b5f826118a68584611df8565b14949350505050565b5f81158015906105965750507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8541490565b6118ea82611e3a565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561193b576114d38282611f08565b61083d611f87565b5f5f5f5b83811015611dbc57600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81016119e757601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff0000000000000000000000000000000000000000168117856119ce57806119dc565b5f8681526020829052604090205b955050505050611947565b80611a7b5760018201918681013560f81c906043015f611a128a611a0d84888c8e612c79565b611fbf565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611a615780611a6f565b5f8781526020829052604090205b96505050505050611947565b60028103611b9f575f808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff1660158601955090925090505f8885013560e81c600386018162ffffff16915080965081925050505f8186019050611af18b848c8c8a908692611aec93929190612c79565b61227c565b611b39578a83611b0383898d8f612c79565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016106709493929190612e5a565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611b845780611b92565b5f8881526020829052604090205b9750505050505050611947565b60038103611bd157602082019186013583611bba5780611bc8565b5f8481526020829052604090205b93505050611947565b60048103611c1b576003808301928781013560e81c91908201015f80611bfd8b6115e085898d8f612c79565b5f988952602052604090972096909701965090935061194792505050565b60068103611d1d575f8287013560f81c60018401935060ff1690505f8784013560f01c60028501945061ffff1690505f8885013560e81c600386018162ffffff16915080965081925050505f81860190505f5f611c848d8d8d8b9087926115e093929190612c79565b93985088939092509050848210611c9a57988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a9052835180840390910181526098909201909252805191012089611d005780611d0e565b5f8a81526020829052604090205b99505050505050505050611947565b60058103611d87576020820191860135878103611d58577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b5f611d628261245d565b905084611d6f5780611d7d565b5f8581526020829052604090205b9450505050611947565b6040517fb2505f7c00000000000000000000000000000000000000000000000000000000815260048101829052602401610670565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d15f908152602082905260408120610596565b5f81815b8451811015611e3257611e2882868381518110611e1b57611e1b612bbb565b6020026020010151612497565b9150600101611dfc565b509392505050565b8073ffffffffffffffffffffffffffffffffffffffff163b5f03611ea2576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610670565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611f319190612dd7565b5f60405180830381855af49150503d805f8114611f69576040519150601f19603f3d011682016040523d82523d5f602084013e611f6e565b606091505b5091509150611f7e8583836124c0565b95945050505050565b3415610ead576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60428214611ffe5782826040517f2ee17a3d000000000000000000000000000000000000000000000000000000008152600401610670929190612e99565b5f61201661200d600185612eac565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561208a578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161067093929190612ebf565b8260ff16601b141580156120a257508260ff16601c14155b156120df578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161067093929190612ee2565b6001840361214957604080515f8152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa158015612138573d5f5f3e3d5ffd5b505050602060405103519450612220565b600284036121e5576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201205f84529083018083525260ff861690820152606081018490526080810183905260a001612118565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106709493929190612f08565b73ffffffffffffffffffffffffffffffffffffffff85166122715786866040517f6c1719d2000000000000000000000000000000000000000000000000000000008152600401610670929190612e99565b505050509392505050565b5f8181036122b6576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f83836122c4600182612eac565b8181106122d3576122d3612bbb565b919091013560f81c91505060018114806122ed5750600281145b15612332578473ffffffffffffffffffffffffffffffffffffffff16612314878686611fbf565b73ffffffffffffffffffffffffffffffffffffffff16149150612454565b6003810361241a5773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87865f87612365600182612eac565b9261237293929190612c79565b6040518463ffffffff1660e01b815260040161239093929190612f33565b602060405180830381865afa1580156123ab573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123cf9190612f4c565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612454565b8383825f6040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106709493929190612f08565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290525f906058016115ae565b5f8183106124b1575f8281526020849052604090206105ab565b505f9182526020526040902090565b6060826124d5576124d08261254f565b6105ab565b81511580156124f9575073ffffffffffffffffffffffffffffffffffffffff84163b155b15612548576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610670565b50806105ab565b80511561255f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610682575f5ffd5b5f602082840312156125ce575f5ffd5b81356105ab81612591565b803573ffffffffffffffffffffffffffffffffffffffff811681146125fc575f5ffd5b919050565b5f5f83601f840112612611575f5ffd5b50813567ffffffffffffffff811115612628575f5ffd5b60208301915083602082850101111561263f575f5ffd5b9250929050565b5f5f5f5f5f6080868803121561265a575f5ffd5b612663866125d9565b9450612671602087016125d9565b935060408601359250606086013567ffffffffffffffff811115612693575f5ffd5b61269f88828901612601565b969995985093965092949392505050565b5f5f5f604084860312156126c2575f5ffd5b83359250602084013567ffffffffffffffff8111156126df575f5ffd5b6126eb86828701612601565b9497909650939450505050565b5f5f5f6060848603121561270a575f5ffd5b833567ffffffffffffffff811115612720575f5ffd5b84016101208187031215612732575f5ffd5b95602085013595506040909401359392505050565b5f5f5f5f6040858703121561275a575f5ffd5b843567ffffffffffffffff811115612770575f5ffd5b61277c87828801612601565b909550935050602085013567ffffffffffffffff81111561279b575f5ffd5b6127a787828801612601565b95989497509550505050565b5f602082840312156127c3575f5ffd5b5035919050565b5f5f83601f8401126127da575f5ffd5b50813567ffffffffffffffff8111156127f1575f5ffd5b6020830191508360208260051b850101111561263f575f5ffd5b5f5f5f5f5f5f60608789031215612820575f5ffd5b863567ffffffffffffffff811115612836575f5ffd5b61284289828a016127ca565b909750955050602087013567ffffffffffffffff811115612861575f5ffd5b61286d89828a016127ca565b909550935050604087013567ffffffffffffffff81111561288c575f5ffd5b61289889828a016127ca565b979a9699509497509295939492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561291e5761291e6128aa565b604052919050565b5f82601f830112612935575f5ffd5b813567ffffffffffffffff81111561294f5761294f6128aa565b61298060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016128d7565b818152846020838601011115612994575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f604083850312156129c1575f5ffd5b6129ca836125d9565b9150602083013567ffffffffffffffff8111156129e5575f5ffd5b6129f185828601612926565b9150509250929050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b5f5f5f5f60608587031215612a61575f5ffd5b612a6a856125d9565b935060208501359250604085013567ffffffffffffffff81111561279b575f5ffd5b5f5f5f5f5f5f5f5f60a0898b031215612aa3575f5ffd5b612aac896125d9565b9750612aba60208a016125d9565b9650604089013567ffffffffffffffff811115612ad5575f5ffd5b612ae18b828c016127ca565b909750955050606089013567ffffffffffffffff811115612b00575f5ffd5b612b0c8b828c016127ca565b909550935050608089013567ffffffffffffffff811115612b2b575f5ffd5b612b378b828c01612601565b999c989b5096995094979396929594505050565b5f5f5f5f5f5f60a08789031215612b60575f5ffd5b612b69876125d9565b9550612b77602088016125d9565b94506040870135935060608701359250608087013567ffffffffffffffff811115612ba0575f5ffd5b61289889828a01612601565b818382375f9101908152919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215612bf8575f5ffd5b6105ab826125d9565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c34575f5ffd5b83018035915067ffffffffffffffff821115612c4e575f5ffd5b60200191503681900382131561263f575f5ffd5b5f60208284031215612c72575f5ffd5b5051919050565b5f5f85851115612c87575f5ffd5b83861115612c93575f5ffd5b5050820193919092039150565b5f5f5f60608486031215612cb2575f5ffd5b83359250602084013567ffffffffffffffff811115612ccf575f5ffd5b8401601f81018613612cdf575f5ffd5b803567ffffffffffffffff811115612cf957612cf96128aa565b8060051b612d09602082016128d7565b91825260208184018101929081019089841115612d24575f5ffd5b6020850194505b83851015612d4a57843580835260209586019590935090910190612d2b565b95505050506040850135905067ffffffffffffffff811115612d6a575f5ffd5b612d7686828701612926565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808202811582820484141761059657610596612d80565b8082018082111561059657610596612d80565b5f82518060208501845e5f920191825250919050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081525f612e47606083018688612ded565b6020830194909452506040015292915050565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201525f612e8f606083018486612ded565b9695505050505050565b602081525f6105a8602083018486612ded565b8181038181111561059657610596612d80565b604081525f612ed2604083018587612ded565b9050826020830152949350505050565b604081525f612ef5604083018587612ded565b905060ff83166020830152949350505050565b606081525f612f1b606083018688612ded565b60208301949094525090151560409091015292915050565b838152604060208201525f611f7e604083018486612ded565b5f60208284031215612f5c575f5ffd5b81516105ab8161259156fea164736f6c634300081b000a",
    "sourceMap": "3136:8748:0:-:0;;;1060:4:25;1017:48;;4658:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4706:26:0;;;;4742:22;:20;:22::i;:::-;4658:113;3136:8748;;7711:422:24;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:24;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:24;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:24;-1:-1:-1;;;;;8035:33:24;;;;;8087:29;;473:50:50;;;8087:29:24;;461:2:50;446:18;8087:29:24;;;;;;;7981:146;7760:373;7711:422::o;14:310:50:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:50;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:50:o;329:200::-;3136:8748:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610610165575f3560e01c806357c56d6b116100c6578063b0d691fe1161007c578063d087d28811610057578063d087d288146104eb578063f23a6e61146104ff578063ffa1ad7414610544575f5ffd5b8063b0d691fe14610435578063b61d27f614610485578063bc197c81146104a4575f5ffd5b80639498bd71116100ac5780639498bd7114610379578063a3f4df7e14610398578063ad3cb1cc146103ed575f5ffd5b806357c56d6b146102ff578063853c506814610332575f5ffd5b8063295614261161011b5780634f1ef286116101015780634f1ef286146102c457806351605d80146102d757806352d1902d146102eb575f5ffd5b8063295614261461028457806347e1da2a146102a5575f5ffd5b80631626ba7e1161014b5780631626ba7e1461021957806319822f7c1461023857806320c13b0b14610265575f5ffd5b806301ffc9a714610170578063150b7a02146101a4575f5ffd5b3661016c57005b5f5ffd5b34801561017b575f5ffd5b5061018f61018a3660046125be565b61058c565b60405190151581526020015b60405180910390f35b3480156101af575f5ffd5b506101e86101be366004612646565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b348015610224575f5ffd5b506101e86102333660046126b0565b61059c565b348015610243575f5ffd5b506102576102523660046126f8565b6105b2565b60405190815260200161019b565b348015610270575f5ffd5b506101e861027f366004612747565b6105d0565b34801561028f575f5ffd5b506102a361029e3660046127b3565b610633565b005b3480156102b0575f5ffd5b506102a36102bf36600461280b565b610685565b6102a36102d23660046129b0565b610822565b3480156102e2575f5ffd5b50610257610841565b3480156102f6575f5ffd5b5061025761086f565b34801561030a575f5ffd5b506102577f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561033d575f5ffd5b5061035161034c3660046126b0565b61089d565b604080519586526020860194909452928401919091526060830152608082015260a00161019b565b348015610384575f5ffd5b506102a36103933660046127b3565b610a61565b3480156103a3575f5ffd5b506103e06040518060400160405280600b81526020017f4c6967687457616c6c657400000000000000000000000000000000000000000081525081565b60405161019b91906129fb565b3480156103f8575f5ffd5b506103e06040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610440575f5ffd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161019b565b348015610490575f5ffd5b506102a361049f366004612a4e565b610bde565b3480156104af575f5ffd5b506101e86104be366004612a8c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156104f6575f5ffd5b50610257610c2c565b34801561050a575f5ffd5b506101e8610519366004612b4b565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561054f575f5ffd5b506103e06040518060400160405280600581526020017f302e342e3000000000000000000000000000000000000000000000000000000081525081565b5f61059682610ce2565b92915050565b5f6105a8848484610dc5565b90505b9392505050565b5f6105bb610e0e565b6105c58484610eaf565b90506105ab82611097565b5f5f6105f486866040516105e5929190612bac565b6040518091039020858561110b565b509050801561062657507f20c13b0b00000000000000000000000000000000000000000000000000000000905061062b565b505f90505b949350505050565b333014610679576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61068281611146565b50565b61068d610e0e565b84811480156106a357508215806106a357508281145b610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606401610670565b5f8390036107b1575f5b858110156107ab576107a387878381811061073057610730612bbb565b90506020020160208101906107459190612be8565b5f85858581811061075857610758612bbb565b905060200281019061076a9190612c01565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111dc92505050565b600101610713565b5061081a565b5f5b85811015610818576108108787838181106107d0576107d0612bbb565b90506020020160208101906107e59190612be8565b8686848181106107f7576107f7612bbb565b9050602002013585858581811061075857610758612bbb565b6001016107b3565b505b505050505050565b61082a611255565b61083382611359565b61083d828261139a565b5050565b5f61086a7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b5f6108786114d8565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b5f5f5f5f5f5f87875f8181106108b5576108b5612bbb565b909101357fff0000000000000000000000000000000000000000000000000000000000000016915081905061090b576108ed89611547565b92506108fa8389896115cb565b92985090965094509150610a569050565b7fff000000000000000000000000000000000000000000000000000000000000008181160161094a5761093d89611547565b92506108fa83898961161a565b7ffe000000000000000000000000000000000000000000000000000000000000007fff0000000000000000000000000000000000000000000000000000000000000082160161099c5761093d89611645565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610a00576109f08989896116b1565b9550955095509550955050610a56565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff0000000000000000000000000000000000000000000000000000000000000082166004820152602401610670565b939792965093509350565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610aab5750825b90505f8267ffffffffffffffff166001148015610ac75750303b155b905081158015610ad5575080155b15610b0c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b6d5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610b768661182c565b831561081a5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b610be6610e0e565b610c26848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506111dc92505050565b50505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201525f602482015273ffffffffffffffffffffffffffffffffffffffff91909116906335567e1a90604401602060405180830381865afa158015610cbe573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086a9190612c62565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a02000000000000000000000000000000000000000000000000000000001480610d7457507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061059657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a7000000000000000000000000000000000000000000000000000000001492915050565b5f5f610dd285858561110b565b5090508015610e0457507f1626ba7e0000000000000000000000000000000000000000000000000000000090506105ab565b505f949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ead576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610670565b565b5f80610ebf610100850185612c01565b5f818110610ecf57610ecf612bbb565b7fff000000000000000000000000000000000000000000000000000000000000009201359182169250507f030000000000000000000000000000000000000000000000000000000000000016819003610f57575f610f3a84610f35610100880188612c01565b61110b565b50905080610f4d57600192505050610596565b5f92505050610596565b7fff0000000000000000000000000000000000000000000000000000000000000081167f04000000000000000000000000000000000000000000000000000000000000000361108d575f8080610fb1610100880188612c01565b610fbf916001908290612c79565b810190610fcc9190612ca0565b925092509250610fdd82848861189a565b61101d576040517faab788dc0000000000000000000000000000000000000000000000000000000081526004810184905260248101879052604401610670565b5f8251602061102c9190612dad565b6110379060a1612dc4565b90505f6110688561104c6101008c018c612c01565b859087518761105b9190612dc4565b92610f3593929190612c79565b5090508061107f5760019650505050505050610596565b5f9650505050505050610596565b5060019392505050565b8015610682576040515f9033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d805f81146110ff576040519150601f19603f3d011682016040523d82523d5f602084013e611104565b606091505b5050505050565b5f5f5f5f5f61111b88888861089d565b509650919450925090508282108015906111395750611139816118af565b9450505050935093915050565b8061117d576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111a67fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a150565b5f5f8473ffffffffffffffffffffffffffffffffffffffff1684846040516112049190612dd7565b5f6040518083038185875af1925050503d805f811461123e576040519150601f19603f3d011682016040523d82523d5f602084013e611243565b606091505b50915091508161110457805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061132257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113097f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ead576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b333014610682576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610670565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561141f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261141c91810190612c62565b60015b61146d576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610670565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146114c9576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610670565b6114d383836118e1565b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ead576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290525f906076015b604051602081830303815290604052805190602001209050919050565b5f8080806115e5876115e0876006818b612c79565b611943565b5f908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b5f8080806116348761162f876001818b612c79565b6115cb565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201525f602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115ae565b5f808080806004600188013560e81c826116cb8383612dc4565b90506116dd8b61034c83868d8f612c79565b939b5091995097509550935087871015611735576116fd81848b8d612c79565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106709493929190612e34565b8092505b8883101561181e5760038301928a013560e81c91506117588383612dc4565b90505f61177961176788611dc5565b8c8c8790869261034c93929190612c79565b939c50919a50985090915050888810156117d15761179982858c8e612c79565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016106709493929190612e34565b848110611814576040517f37daf62b0000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610670565b9350915081611739565b505050939792965093509350565b61183581611146565b604051819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f6f2a6aac3f1c9fc5bb4eec9d305f0036888047b27e7ca599572afe083d9879e8905f90a350565b5f826118a68584611df8565b14949350505050565b5f81158015906105965750507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8541490565b6118ea82611e3a565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561193b576114d38282611f08565b61083d611f87565b5f5f5f5b83811015611dbc57600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81016119e757601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff0000000000000000000000000000000000000000168117856119ce57806119dc565b5f8681526020829052604090205b955050505050611947565b80611a7b5760018201918681013560f81c906043015f611a128a611a0d84888c8e612c79565b611fbf565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611a615780611a6f565b5f8781526020829052604090205b96505050505050611947565b60028103611b9f575f808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff1660158601955090925090505f8885013560e81c600386018162ffffff16915080965081925050505f8186019050611af18b848c8c8a908692611aec93929190612c79565b61227c565b611b39578a83611b0383898d8f612c79565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016106709493929190612e5a565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611b845780611b92565b5f8881526020829052604090205b9750505050505050611947565b60038103611bd157602082019186013583611bba5780611bc8565b5f8481526020829052604090205b93505050611947565b60048103611c1b576003808301928781013560e81c91908201015f80611bfd8b6115e085898d8f612c79565b5f988952602052604090972096909701965090935061194792505050565b60068103611d1d575f8287013560f81c60018401935060ff1690505f8784013560f01c60028501945061ffff1690505f8885013560e81c600386018162ffffff16915080965081925050505f81860190505f5f611c848d8d8d8b9087926115e093929190612c79565b93985088939092509050848210611c9a57988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a9052835180840390910181526098909201909252805191012089611d005780611d0e565b5f8a81526020829052604090205b99505050505050505050611947565b60058103611d87576020820191860135878103611d58577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b5f611d628261245d565b905084611d6f5780611d7d565b5f8581526020829052604090205b9450505050611947565b6040517fb2505f7c00000000000000000000000000000000000000000000000000000000815260048101829052602401610670565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d15f908152602082905260408120610596565b5f81815b8451811015611e3257611e2882868381518110611e1b57611e1b612bbb565b6020026020010151612497565b9150600101611dfc565b509392505050565b8073ffffffffffffffffffffffffffffffffffffffff163b5f03611ea2576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610670565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff1684604051611f319190612dd7565b5f60405180830381855af49150503d805f8114611f69576040519150601f19603f3d011682016040523d82523d5f602084013e611f6e565b606091505b5091509150611f7e8583836124c0565b95945050505050565b3415610ead576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60428214611ffe5782826040517f2ee17a3d000000000000000000000000000000000000000000000000000000008152600401610670929190612e99565b5f61201661200d600185612eac565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561208a578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161067093929190612ebf565b8260ff16601b141580156120a257508260ff16601c14155b156120df578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161067093929190612ee2565b6001840361214957604080515f8152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa158015612138573d5f5f3e3d5ffd5b505050602060405103519450612220565b600284036121e5576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201205f84529083018083525260ff861690820152606081018490526080810183905260a001612118565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106709493929190612f08565b73ffffffffffffffffffffffffffffffffffffffff85166122715786866040517f6c1719d2000000000000000000000000000000000000000000000000000000008152600401610670929190612e99565b505050509392505050565b5f8181036122b6576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f83836122c4600182612eac565b8181106122d3576122d3612bbb565b919091013560f81c91505060018114806122ed5750600281145b15612332578473ffffffffffffffffffffffffffffffffffffffff16612314878686611fbf565b73ffffffffffffffffffffffffffffffffffffffff16149150612454565b6003810361241a5773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87865f87612365600182612eac565b9261237293929190612c79565b6040518463ffffffff1660e01b815260040161239093929190612f33565b602060405180830381865afa1580156123ab573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123cf9190612f4c565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612454565b8383825f6040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016106709493929190612f08565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290525f906058016115ae565b5f8183106124b1575f8281526020849052604090206105ab565b505f9182526020526040902090565b6060826124d5576124d08261254f565b6105ab565b81511580156124f9575073ffffffffffffffffffffffffffffffffffffffff84163b155b15612548576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610670565b50806105ab565b80511561255f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610682575f5ffd5b5f602082840312156125ce575f5ffd5b81356105ab81612591565b803573ffffffffffffffffffffffffffffffffffffffff811681146125fc575f5ffd5b919050565b5f5f83601f840112612611575f5ffd5b50813567ffffffffffffffff811115612628575f5ffd5b60208301915083602082850101111561263f575f5ffd5b9250929050565b5f5f5f5f5f6080868803121561265a575f5ffd5b612663866125d9565b9450612671602087016125d9565b935060408601359250606086013567ffffffffffffffff811115612693575f5ffd5b61269f88828901612601565b969995985093965092949392505050565b5f5f5f604084860312156126c2575f5ffd5b83359250602084013567ffffffffffffffff8111156126df575f5ffd5b6126eb86828701612601565b9497909650939450505050565b5f5f5f6060848603121561270a575f5ffd5b833567ffffffffffffffff811115612720575f5ffd5b84016101208187031215612732575f5ffd5b95602085013595506040909401359392505050565b5f5f5f5f6040858703121561275a575f5ffd5b843567ffffffffffffffff811115612770575f5ffd5b61277c87828801612601565b909550935050602085013567ffffffffffffffff81111561279b575f5ffd5b6127a787828801612601565b95989497509550505050565b5f602082840312156127c3575f5ffd5b5035919050565b5f5f83601f8401126127da575f5ffd5b50813567ffffffffffffffff8111156127f1575f5ffd5b6020830191508360208260051b850101111561263f575f5ffd5b5f5f5f5f5f5f60608789031215612820575f5ffd5b863567ffffffffffffffff811115612836575f5ffd5b61284289828a016127ca565b909750955050602087013567ffffffffffffffff811115612861575f5ffd5b61286d89828a016127ca565b909550935050604087013567ffffffffffffffff81111561288c575f5ffd5b61289889828a016127ca565b979a9699509497509295939492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561291e5761291e6128aa565b604052919050565b5f82601f830112612935575f5ffd5b813567ffffffffffffffff81111561294f5761294f6128aa565b61298060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016128d7565b818152846020838601011115612994575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f604083850312156129c1575f5ffd5b6129ca836125d9565b9150602083013567ffffffffffffffff8111156129e5575f5ffd5b6129f185828601612926565b9150509250929050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b5f5f5f5f60608587031215612a61575f5ffd5b612a6a856125d9565b935060208501359250604085013567ffffffffffffffff81111561279b575f5ffd5b5f5f5f5f5f5f5f5f60a0898b031215612aa3575f5ffd5b612aac896125d9565b9750612aba60208a016125d9565b9650604089013567ffffffffffffffff811115612ad5575f5ffd5b612ae18b828c016127ca565b909750955050606089013567ffffffffffffffff811115612b00575f5ffd5b612b0c8b828c016127ca565b909550935050608089013567ffffffffffffffff811115612b2b575f5ffd5b612b378b828c01612601565b999c989b5096995094979396929594505050565b5f5f5f5f5f5f60a08789031215612b60575f5ffd5b612b69876125d9565b9550612b77602088016125d9565b94506040870135935060608701359250608087013567ffffffffffffffff811115612ba0575f5ffd5b61289889828a01612601565b818382375f9101908152919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215612bf8575f5ffd5b6105ab826125d9565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c34575f5ffd5b83018035915067ffffffffffffffff821115612c4e575f5ffd5b60200191503681900382131561263f575f5ffd5b5f60208284031215612c72575f5ffd5b5051919050565b5f5f85851115612c87575f5ffd5b83861115612c93575f5ffd5b5050820193919092039150565b5f5f5f60608486031215612cb2575f5ffd5b83359250602084013567ffffffffffffffff811115612ccf575f5ffd5b8401601f81018613612cdf575f5ffd5b803567ffffffffffffffff811115612cf957612cf96128aa565b8060051b612d09602082016128d7565b91825260208184018101929081019089841115612d24575f5ffd5b6020850194505b83851015612d4a57843580835260209586019590935090910190612d2b565b95505050506040850135905067ffffffffffffffff811115612d6a575f5ffd5b612d7686828701612926565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808202811582820484141761059657610596612d80565b8082018082111561059657610596612d80565b5f82518060208501845e5f920191825250919050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081525f612e47606083018688612ded565b6020830194909452506040015292915050565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201525f612e8f606083018486612ded565b9695505050505050565b602081525f6105a8602083018486612ded565b8181038181111561059657610596612d80565b604081525f612ed2604083018587612ded565b9050826020830152949350505050565b604081525f612ef5604083018587612ded565b905060ff83166020830152949350505050565b606081525f612f1b606083018688612ded565b60208301949094525090151560409091015292915050565b838152604060208201525f611f7e604083018486612ded565b5f60208284031215612f5c575f5ffd5b81516105ab8161259156fea164736f6c634300081b000a",
    "sourceMap": "3136:8748:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11645:237;;;;;;;;;;-1:-1:-1;11645:237:0;;;;;:::i;:::-;;:::i;:::-;;;611:14:50;;604:22;586:41;;574:2;559:18;11645:237:0;;;;;;;;505:212:19;;;;;;;;;;-1:-1:-1;505:212:19;;;;;:::i;:::-;669:41;505:212;;;;;;;;;;;2042:66:50;2030:79;;;2012:98;;2000:2;1985:18;505:212:19;1868:248:50;6233:231:0;;;;;;;;;;-1:-1:-1;6233:231:0;;;;;:::i;:::-;;:::i;1139:385:4:-;;;;;;;;;;-1:-1:-1;1139:385:4;;;;;:::i;:::-;;:::i;:::-;;;3433:25:50;;;3421:2;3406:18;1139:385:4;3287:177:50;4526:332:35;;;;;;;;;;-1:-1:-1;4526:332:35;;;;;:::i;:::-;;:::i;6457:119::-;;;;;;;;;;-1:-1:-1;6457:119:35;;;;;:::i;:::-;;:::i;:::-;;5633:563:0;;;;;;;;;;-1:-1:-1;5633:563:0;;;;;:::i;:::-;;:::i;3892:214:25:-;;;;;;:::i;:::-;;:::i;748:129:36:-;;;;;;;;;;;;;:::i;3439:134:25:-;;;;;;;;;;;;;:::i;812:95:43:-;;;;;;;;;;;;863:44;812:95;;1676:1486:35;;;;;;;;;;-1:-1:-1;1676:1486:35;;;;;:::i;:::-;;:::i;:::-;;;;7894:25:50;;;7950:2;7935:18;;7928:34;;;;7978:18;;;7971:34;;;;8036:2;8021:18;;8014:34;8079:3;8064:19;;8057:35;7881:3;7866:19;1676:1486:35;7635:463:50;6805:105:0;;;;;;;;;;-1:-1:-1;6805:105:0;;;;;:::i;:::-;;:::i;3514:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1708:58:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4177:135:0;;;;;;;;;;-1:-1:-1;4177:135:0;;8781:42:50;4294:11:0;8769:55:50;8751:74;;8739:2;8724:18;4177:135:0;8585:246:50;5051:151:0;;;;;;;;;;-1:-1:-1;5051:151:0;;;;;:::i;:::-;;:::i;961:264:19:-;;;;;;;;;;-1:-1:-1;961:264:19;;;;;:::i;:::-;1170:48;961:264;;;;;;;;;;;771:121:4;;;;;;;;;;;;;:::i;723:232:19:-;;;;;;;;;;-1:-1:-1;723:232:19;;;;;:::i;:::-;905:43;723:232;;;;;;;;;3610:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11645:237;11812:4;11839:36;11863:11;11839:23;:36::i;:::-;11832:43;11645:237;-1:-1:-1;;11645:237:0:o;6233:231::-;6388:6;6417:40;6440:4;6446:10;;6417:22;:40::i;:::-;6410:47;;6233:231;;;;;;:::o;1139:385:4:-;1314:22;1348:24;:22;:24::i;:::-;1399:38;1418:6;1426:10;1399:18;:38::i;:::-;1382:55;;1485:32;1497:19;1485:11;:32::i;4526:332:35:-;4652:6;4694:12;4711:51;4742:5;;4732:16;;;;;;;:::i;:::-;;;;;;;;4750:11;;4711:20;:51::i;:::-;4693:69;;;4772:7;4768:63;;;-1:-1:-1;4796:28:35;;-1:-1:-1;4789:35:35;;4768:63;-1:-1:-1;4851:1:35;;-1:-1:-1;4526:332:35;;;;;;;:::o;6457:119::-;179:10:38;201:4;179:27;175:94;;223:39;;;;;236:10;223:39;;;11912:74:50;256:4:38;12002:18:50;;;11995:83;11885:18;;223:39:38;;;;;;;;175:94;6543:28:35::1;6560:10;6543:16;:28::i;:::-;6457:119:::0;:::o;5633:563:0:-;5748:24;:22;:24::i;:::-;5790:26;;;:80;;;;-1:-1:-1;5821:17:0;;;:48;;-1:-1:-1;5842:27:0;;;5821:48;5782:112;;;;;;;12291:2:50;5782:112:0;;;12273:21:50;12330:2;12310:18;;;12303:30;12369:21;12349:18;;;12342:49;12408:18;;5782:112:0;12089:343:50;5782:112:0;5924:1;5908:17;;;5904:286;;5946:9;5941:101;5961:15;;;5941:101;;;6001:26;6007:4;;6012:1;6007:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6016:1;6019:4;;6024:1;6019:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6001:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6001:5:0;;-1:-1:-1;;;6001:26:0:i;:::-;5978:3;;5941:101;;;;5904:286;;;6077:9;6072:108;6092:15;;;6072:108;;;6132:33;6138:4;;6143:1;6138:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6147:5;;6153:1;6147:8;;;;;;;:::i;:::-;;;;;;;6157:4;;6162:1;6157:7;;;;;;;:::i;6132:33::-;6109:3;;6072:108;;;;5904:286;5633:563;;;;;;:::o;3892:214:25:-;2542:13;:11;:13::i;:::-;4007:36:::1;4025:17;4007;:36::i;:::-;4053:46;4075:17;4094:4;4053:21;:46::i;:::-;3892:214:::0;;:::o;748:129:36:-;809:7;831:41;257:66:40;291:11:39;;196:112;831:41:36;824:48;;748:129;:::o;3439:134:25:-;3508:7;2813:20;:18;:20::i;:::-;-1:-1:-1;1327:66:22::1;3439:134:25::0;:::o;1676:1486:35:-;1802:17;1825:14;1845:17;1868;1891:18;1920:20;1943:10;;1954:1;1943:13;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1943:13:35;;-1:-1:-1;1963:303:35;;2058:34;2084:7;2058:25;:34::i;:::-;2046:46;;2145;2169:9;2180:10;;2145:23;:46::i;:::-;2100:91;;-1:-1:-1;2100:91:35;;-1:-1:-1;2100:91:35;-1:-1:-1;2100:91:35;-1:-1:-1;2199:60:35;;-1:-1:-1;2199:60:35;1963:303;2276:29;;;;;2272:310;;2371:34;2397:7;2371:25;:34::i;:::-;2359:46;;2458:49;2485:9;2496:10;;2458:26;:49::i;2272:310::-;2592:33;;;;;2588:319;;2691:39;2722:7;2691:30;:39::i;2588:319::-;2917:29;;;;;2913:196;;3067:35;3082:7;3091:10;;3067:14;:35::i;:::-;3060:42;;;;;;;;;;;;;2913:196;3122:35;;;;;13576:66:50;13564:79;;3122:35:35;;;13546:98:50;13519:18;;3122:35:35;13402:248:50;1676:1486:35;;;;;;;;;;:::o;6805:105:0:-;8870:21:24;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:24;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;6881:22:0::1;6893:9;6881:11;:22::i;:::-;5070:14:24::0;5066:101;;;5100:23;;;;;;5142:14;;-1:-1:-1;13808:50:50;;5142:14:24;;13796:2:50;13781:18;5142:14:24;;;;;;;4092:1081;;;;;6805:105:0;:::o;5051:151::-;5137:24;:22;:24::i;:::-;5171;5177:4;5183:5;5190:4;;5171:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5171:5:0;;-1:-1:-1;;;5171:24:0:i;:::-;5051:151;;;;:::o;771:121:4:-;820:7;4294:11:0;846:39:4;;;;;876:4;846:39;;;14051:74:50;883:1:4;14141:18:50;;;14134:91;846:21:4;;;;;;;;14024:18:50;;846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1231:298:19:-;1318:4;1353:48;;;1368:33;1353:48;;:113;;-1:-1:-1;1417:49:19;;;1432:34;1417:49;1353:113;:169;;;-1:-1:-1;1482:40:19;;;1497:25;1482:40;1334:188;1231:298;-1:-1:-1;;1231:298:19:o;5490:316:35:-;5609:6;5651:12;5668:40;5689:5;5696:11;;5668:20;:40::i;:::-;5650:58;;;5718:7;5714:65;;;-1:-1:-1;5742:30:35;;-1:-1:-1;5735:37:35;;5714:65;-1:-1:-1;5799:1:35;;5490:316;-1:-1:-1;;;;5490:316:35:o;1605:183:4:-;1692:10;:35;4294:11:0;1692:35:4;;1671:110;;;;;;;14627:2:50;1671:110:4;;;14609:21:50;14666:2;14646:18;;;14639:30;14705;14685:18;;;14678:58;14753:18;;1671:110:4;14425:352:50;1671:110:4;1605:183::o;7434:2430:0:-;7586:22;;7647:16;;;;:6;:16;:::i;:::-;7664:1;7647:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;7888:20:0;;:37;;;7884:267;;7942:12;7959:50;7980:10;7992:16;;;;:6;:16;:::i;:::-;7959:20;:50::i;:::-;7941:68;;;8028:7;8023:75;;305:1:6;8055:28:0;;;;;;8023:75;465:1:6;8111:29:0;;;;;;7884:267;8379:21;;;;;8375:1377;;8417:22;;;8530:16;;;;:6;:16;:::i;:::-;:20;;8547:1;;8530:20;;;:::i;:::-;8519:61;;;;;;;:::i;:::-;8416:164;;;;;;8672:59;8691:11;8704:14;8720:10;8672:18;:59::i;:::-;8667:152;;8758:46;;;;;;;;16621:25:50;;;16662:18;;;16655:34;;;16594:18;;8758:46:0;16447:248:50;8667:152:0;9422:14;9445:11;:18;9466:2;9445:23;;;;:::i;:::-;9439:29;;:3;:29;:::i;:::-;9422:46;-1:-1:-1;9483:12:0;9516:94;9537:14;9553:16;;;;:6;:16;:::i;:::-;9570:6;9553:56;9586:15;:22;9577:6;:31;;;;:::i;:::-;9553:56;;;;;;;:::i;9516:94::-;9482:128;;;9629:7;9624:75;;305:1:6;9656:28:0;;;;;;;;;;9624:75;465:1:6;9712:29:0;;;;;;;;;;8375:1377;-1:-1:-1;305:1:6;;7434:2430:0;-1:-1:-1;;;7434:2430:0:o;4356:382:4:-;4437:24;;4433:299;;4496:126;;4478:12;;4504:10;;4587:17;;4545:19;;4478:12;4496:126;4478:12;4496:126;4545:19;4504:10;4587:17;4496:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4356:382:4;:::o;3481:386:35:-;3612:12;3630:17;3658;3677:14;3693:17;3761:38;3779:7;3788:10;;3761:17;:38::i;:::-;-1:-1:-1;3716:83:35;-1:-1:-1;3716:83:35;;-1:-1:-1;3716:83:35;-1:-1:-1;3716:83:35;-1:-1:-1;3815:19:35;;;;;;:47;;;3838:24;3852:9;3838:13;:24::i;:::-;3805:57;;3652:215;;;3481:386;;;;;;:::o;438:236:36:-;520:10;516:54;;553:17;;;;;;;;;;;;;;516:54;576;257:66:40;619:10:36;168:18:39;;92:100;576:54:36;641:28;;3433:25:50;;;641:28:36;;3421:2:50;3406:18;641:28:36;;;;;;;438:236;:::o;10594:384:0:-;10727:12;10741:19;10764:6;:11;;10783:5;10790:4;10764:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10726:69;;;;10810:7;10805:167;;10940:6;10934:13;10929:2;10921:6;10917:15;10910:38;4333:312:25;4413:4;4405:23;4422:6;4405:23;;;:120;;;4519:6;4483:42;;:32;1327:66:22;2035:53;;;;1957:138;4483:32:25;:42;;;;4405:120;4388:251;;;4599:29;;;;;;;;;;;;;;11293:70:0;179:10:38;201:4;179:27;175:94;;223:39;;;;;236:10;223:39;;;11912:74:50;256:4:38;12002:18:50;;;11995:83;11885:18;;223:39:38;11738:346:50;5786:538:25;5903:17;5885:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5885:52:25;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5881:437;;6247:60;;;;;8781:42:50;8769:55;;6247:60:25;;;8751:74:50;8724:18;;6247:60:25;8585:246:50;5881:437:25;1327:66:22;5979:40:25;;5975:120;;6046:34;;;;;;;;3433:25:50;;;3406:18;;6046:34:25;3287:177:50;5975:120:25;6108:54;6138:17;6157:4;6108:29;:54::i;:::-;5938:235;5786:538;;:::o;4762:213::-;4836:4;4828:23;4845:6;4828:23;;4824:145;;4929:29;;;;;;;;;;;;;;1181:224:42;1287:107;;18426:66:50;1287:107:42;;;18414:79:50;1333:13:42;18509:11:50;;;18502:27;18580:66;1364:4:42;18567:2:50;18563:15;18559:88;18545:12;;;18538:110;18664:12;;;18657:28;;;1248:7:42;;18701:12:50;;1287:107:42;;;;;;;;;;;;;1270:130;;;;;;1263:137;;1181:224;;;:::o;8900:642::-;9004:17;;;;9139:41;9153:10;9165:14;:10;9176:1;9165:10;;:14;:::i;:::-;9139:13;:41::i;:::-;623:9:48;657:13;;;1586:25:46;;1627:3;1623:14;684:2:48;677:14;;;716:2;703:16;;;657:13;;9387:1:42;2035:23:46;;;2022:37;2075:3;2071:14;677::48;;;;703:16;;;;1623:14:46;;9117:63:42;;-1:-1:-1;703:16:48;2071:14:46;-1:-1:-1;8900:642:42;-1:-1:-1;;;;8900:642:42:o;649:262:44:-;753:17;;;;855:51;879:10;891:14;:10;902:1;891:10;;:14;:::i;:::-;855:23;:51::i;:::-;848:58;;;;;;;;649:262;;;;;;;:::o;405:213:45:-;503:104;;18426:66:50;503:104:45;;;18414:79:50;464:7:45;18509:11:50;;;18502:27;;;18580:66;577:4:45;18567:2:50;18563:15;18559:88;18545:12;;;18538:110;18664:12;;;18657:28;;;464:7:45;18701:12:50;;503:104:45;18128:591:50;2321:2059:43;2429:17;;;;;4106:14:47;2564:1:43;4018:25:47;;4005:39;4064:3;4060:14;2429:17:43;2769:16;4106:14:47;4060;2769:16:43;:::i;:::-;2751:34;-1:-1:-1;2884:72:43;2909:7;2924:26;2751:34;2935:6;2924:10;;:26;:::i;2884:72::-;2792:164;;-1:-1:-1;2792:164:43;;-1:-1:-1;2792:164:43;-1:-1:-1;2792:164:43;-1:-1:-1;2792:164:43;-1:-1:-1;2967:18:43;;;2963:118;;;3028:26;3046:7;3039:6;3028:10;;:26;:::i;:::-;3056:9;3067:6;3002:72;;;;;;;;;;;;;;:::i;2963:118::-;3096:7;3087:16;;3284:1092;3291:26;;;3284:1092;;;4118:1:47;4106:14;;;4018:25;;4005:39;4064:3;4060:14;;-1:-1:-1;3445:16:43;4106:14:47;4060;3445:16:43;:::i;:::-;3435:26;;3470:22;3688:105;3715:34;3739:9;3715:23;:34::i;:::-;3759:10;;3770:6;3759:26;3777:7;3759:26;;;;;;;:::i;3688:105::-;3501:292;;-1:-1:-1;3501:292:43;;-1:-1:-1;3501:292:43;-1:-1:-1;3501:292:43;;-1:-1:-1;;3834:18:43;;;3830:122;;;3897:26;3915:7;3908:6;3897:10;;:26;:::i;:::-;3925:9;3936:6;3871:72;;;;;;;;;;;;;;:::i;3830:122::-;4217:10;4199:14;:28;4195:115;;4246:55;;;;;;;;16621:25:50;;;16662:18;;;16655:34;;;16594:18;;4246:55:43;16447:248:50;4195:115:43;4331:14;-1:-1:-1;4362:7:43;-1:-1:-1;4362:7:43;3284:1092;;;2541:1839;;;2321:2059;;;;;;;;;:::o;7234:162:0:-;7301:27;7318:9;7301:16;:27::i;:::-;7343:46;;7379:9;;7343:46;7366:11;7343:46;;;;;;;7234:162;:::o;1265:154:31:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:31:o;1096:190:36:-;1179:4;1198:24;;;;;:83;;-1:-1:-1;;257:66:40;291:11:39;1226:55:36;;1096:190::o;2779:335:22:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;;;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;3533:4708:42:-;3643:14;3663:12;3704:14;3773:4458;3780:26;;;3773:4458;;;1476:1:47;1464:14;;;1391:25;;1378:39;1433:3;1429:14;3931:20:42;;;3927:402;;2541:2:47;2529:15;;;2382:25;;2369:39;2424:3;2420:14;;;;2454:2;2450:13;2465:42;2446:62;;;1881:23:42;;:49;;4239:4;:59;;4294:4;4239:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;4260:31:42;4232:66;;4310:8;;;;;;3927:402;4343:4;4339:679;;1476:1:47;1464:14;;;1391:25;;;1378:39;1433:3;1429:14;;4568:11:42;;4404:16;4606:72;4639:10;4651:26;4568:11;1464:14:47;4651:10:42;1391:25:47;4651:26:42;:::i;:::-;4606:32;:72::i;:::-;4772:20;;;;;;;;4699:7;;-1:-1:-1;4699:7:42;;4772:20;-1:-1:-1;1901:3:42;1881:23;;;;;1907;;;1881:49;4928:4;:59;;4983:4;4928:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;4949:31:42;4921:66;;4999:8;;;;;;;4339:679;629:1;5032:4;:30;5028:932;;5112:16;;2382:25:47;;;2369:39;2424:3;2420:14;;;;2454:2;2450:13;2465:42;2446:62;2541:2;2529:15;;5154:64:42;-1:-1:-1;5154:64:42;;-1:-1:-1;5154:64:42;-1:-1:-1;5264:12:42;4018:25:47;;;4005:39;4064:3;4060:14;4118:1;4106:14;;5288:46:42;;;;;;;;;;;;;5388:15;5415:4;5406:6;:13;5388:31;;5436:81;5472:10;5484:4;5490:10;;5501:6;5490:26;5508:7;5490:26;;;;;;;:::i;:::-;5436:35;:81::i;:::-;5431:190;;5563:10;5575:4;5581:26;5599:7;5592:6;5581:10;;:26;:::i;:::-;5540:68;;;;;;;;;;;;;;:::i;5431:190::-;5714:20;;;;;;;;;-1:-1:-1;5714:20:42;1901:3;1881:23;;;;;1907;;;1881:49;5870:4;:59;;5925:4;5870:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;5891:31:42;5863:66;;5941:8;;;;;;;;5028:932;672:1;5974:4;:17;5970:243;;5621:2:47;5607:17;;;5558:27;;5545:41;6123:4:42;:59;;6178:4;6123:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;6144:31:42;6116:66;;6194:8;;;;5970:243;717:1;6227:4;:19;6223:472;;4118:1:47;4106:14;;;;4018:25;;;4005:39;4064:3;4060:14;;6417:13:42;;;;6317:12;;6502:53;6516:10;6528:26;6417:13;4106:14:47;6528:10:42;4018:25:47;6528:26:42;:::i;6502:53::-;623:9:48;657:13;;;684:2;677:14;716:2;703:16;;;6568:17:42;;;;;-1:-1:-1;6657:7:42;;-1:-1:-1;6676:8:42;;-1:-1:-1;;;6676:8:42;6223:472;810:1;6709:4;:19;6705:979;;6872:22;1391:25:47;;;1378:39;1433:3;1429:14;1476:1;1464:14;;6906:55:42;-1:-1:-1;6906:55:42;;;-1:-1:-1;6974:25:42;3035::47;;;3022:39;3081:3;3077:14;3133:1;3121:14;;7011:59:42;-1:-1:-1;7011:59:42;;;-1:-1:-1;7083:12:42;4018:25:47;;;4005:39;4064:3;4060:14;4118:1;4106:14;;7107:46:42;;;;;;;;;;;;;7165:15;7192:4;7183:6;:13;7165:31;;7209:22;7233:20;7298:53;7312:10;7324;;7335:6;7324:26;7342:7;7324:26;;;;;;;:::i;7298:53::-;7372:7;;-1:-1:-1;7372:7:42;;7265:86;;-1:-1:-1;7265:86:42;-1:-1:-1;7396:35:42;;;7392:92;;7447:24;;;;7392:92;2984:73;;;23248:66:50;2984:73:42;;;;23236:79:50;;;;23331:12;;;23324:28;;;23368:12;;;23361:28;;;23405:12;;;;23398:28;;;2984:73:42;;;;;;;;;;23442:13:50;;;;2984:73:42;;;2974:84;;;;;7593:4;:59;;7648:4;7593:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;7614:31:42;7586:66;;7665:8;;;;;;;;;;6705:979;765:1;7698:4;:22;7694:485;;5621:2:47;5607:17;;;5558:27;;5545:41;7928:23:42;;;7924:82;;7976:17;7967:26;;7924:82;8018:12;8033:37;8060:9;8033:26;:37::i;:::-;8018:52;-1:-1:-1;8089:4:42;:59;;8144:4;8089:59;;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;8110:31:42;8082:66;;8160:8;;;;;7694:485;8196:26;;;;;;;;3433:25:50;;;3406:18;;8196:26:42;3287:177:50;3773:4458:42;3686:4551;3533:4708;;;;;;:::o;1297:160:43:-;863:44;1373:7;657:13:48;;;684:2;677:14;;;716:2;703:16;;1395:57:43;544:185:48;1967:290:31;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:31;;2106:116;;;-1:-1:-1;2238:12:31;1967:290;-1:-1:-1;;;1967:290:31:o;2186:281:22:-;2263:17;:29;;;2296:1;2263:34;2259:119;;2320:47;;;;;8781:42:50;8769:55;;2320:47:22;;;8751:74:50;8724:18;;2320:47:22;8585:246:50;2259:119:22;1327:66;2387:73;;;;;;;;;;;;;;;2186:281::o;4106:253:28:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:28:o;6598:122:22:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;1768:2316:49;1868:14;1915:2;1894:23;;1890:70;;1949:10;;1926:34;;;;;;;;;;;;:::i;1890:70::-;1966:21;1990:43;2011:21;2031:1;2011:10;:21;:::i;:::-;1227:23:46;;1214:37;1267:3;1263:14;;1072:215;1990:43:49;1966:67;;;-1:-1:-1;2116:2:49;1227:23:46;;1214:37;1267:3;1263:14;796:37;;2203:2:49;809:23:46;;796:37;3210:66:49;3197:79;;3193:135;;;3307:10;;3319:1;3293:28;;;;;;;;;;;;;:::i;3193:135::-;3338:1;:7;;3343:2;3338:7;;:18;;;;;3349:1;:7;;3354:2;3349:7;;3338:18;3334:74;;;3387:10;;3399:1;3373:28;;;;;;;;;;;;;:::i;3334:74::-;1254:1;3448:13;:32;3444:509;;3499:25;;;;;;;;;;;;21408::50;;;21481:4;21469:17;;21449:18;;;21442:45;;;;21503:18;;;21496:34;;;21546:18;;;21539:34;;;3499:25:49;;21380:19:50;;3499:25:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:34;;3444:509;;;1304:1;3609:13;:34;3605:348;;3691:59;;21826:66:50;3691:59:49;;;21814:79:50;21909:12;;;21902:28;;;3662:130:49;;21946:12:50;;3691:59:49;;;;;;;;;;;;;3681:70;;3691:59;3681:70;;;;3662:130;;;;;;;;;21408:25:50;21481:4;21469:17;;21449:18;;;21442:45;21503:18;;;21496:34;;;21546:18;;;21539:34;;;21380:19;;3662:130:49;21181:398:50;3605:348:49;3914:10;;3926:13;3941:4;3889:57;;;;;;;;;;;;;;:::i;3605:348::-;4000:22;;;3996:63;;4048:10;;4031:28;;;;;;;;;;;;:::i;3996:63::-;4066:13;;;;1768:2316;;;;;:::o;4412:951::-;4536:10;4558:22;;;4554:66;;4597:16;;;;;;;;;;;;;;4554:66;4626:21;4656:10;;4667:21;4687:1;4656:10;4667:21;:::i;:::-;4656:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1254:1:49;4700:32;;;:70;;;1304:1;4736:13;:34;4700:70;4696:663;;;4874:7;4838:43;;:32;4852:5;4859:10;;4838:13;:32::i;:::-;:43;;;4830:51;;4696:663;;;1360:1;4899:13;:40;4895:464;;5061:40;;;;5102:5;5109:10;5120:1;5109:10;5122:21;5142:1;5109:10;5122:21;:::i;:::-;5109:35;;;;;;;:::i;:::-;5061:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5031:114;;:26;:114;;-1:-1:-1;4895:464:49;;;5319:10;;5331:13;5346:5;5294:58;;;;;;;;;;;;;;:::i;4895:464::-;4548:815;4412:951;;;;;;:::o;2235:182:42:-;2354:57;;23708:66:50;2354:57:42;;;23696:79:50;23791:12;;;23784:28;;;2322:7:42;;23828:12:50;;2354:57:42;23466:380:50;9229:147:31;9292:7;9322:1;9318;:5;:51;;623:9:48;657:13;;;684:2;677:14;;;716:2;703:16;;9318:51:31;;;-1:-1:-1;623:9:48;657:13;;;684:2;677:14;716:2;703:16;;;9229:147:31:o;4625:582:28:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:28;;;;:23;5045:49;5041:119;;;5121:24;;;;;8781:42:50;8769:55;;5121:24:28;;;8751:74:50;8724:18;;5121:24:28;8585:246:50;5041:119:28;-1:-1:-1;5180:10:28;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:177:50;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:196::-;706:20;;766:42;755:54;;745:65;;735:93;;824:1;821;814:12;735:93;638:196;;;:::o;839:347::-;890:8;900:6;954:3;947:4;939:6;935:17;931:27;921:55;;972:1;969;962:12;921:55;-1:-1:-1;995:20:50;;1038:18;1027:30;;1024:50;;;1070:1;1067;1060:12;1024:50;1107:4;1099:6;1095:17;1083:29;;1159:3;1152:4;1143:6;1135;1131:19;1127:30;1124:39;1121:59;;;1176:1;1173;1166:12;1121:59;839:347;;;;;:::o;1191:672::-;1288:6;1296;1304;1312;1320;1373:3;1361:9;1352:7;1348:23;1344:33;1341:53;;;1390:1;1387;1380:12;1341:53;1413:29;1432:9;1413:29;:::i;:::-;1403:39;;1461:38;1495:2;1484:9;1480:18;1461:38;:::i;:::-;1451:48;-1:-1:-1;1568:2:50;1553:18;;1540:32;;-1:-1:-1;1647:2:50;1632:18;;1619:32;1674:18;1663:30;;1660:50;;;1706:1;1703;1696:12;1660:50;1745:58;1795:7;1786:6;1775:9;1771:22;1745:58;:::i;:::-;1191:672;;;;-1:-1:-1;1191:672:50;;-1:-1:-1;1822:8:50;;1719:84;1191:672;-1:-1:-1;;;1191:672:50:o;2121:523::-;2200:6;2208;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2330:23;;;-1:-1:-1;2428:2:50;2413:18;;2400:32;2455:18;2444:30;;2441:50;;;2487:1;2484;2477:12;2441:50;2526:58;2576:7;2567:6;2556:9;2552:22;2526:58;:::i;:::-;2121:523;;2603:8;;-1:-1:-1;2500:84:50;;-1:-1:-1;;;;2121:523:50:o;2649:633::-;2765:6;2773;2781;2834:2;2822:9;2813:7;2809:23;2805:32;2802:52;;;2850:1;2847;2840:12;2802:52;2890:9;2877:23;2923:18;2915:6;2912:30;2909:50;;;2955:1;2952;2945:12;2909:50;2978:22;;3034:3;3016:16;;;3012:26;3009:46;;;3051:1;3048;3041:12;3009:46;3074:2;3145;3130:18;;3117:32;;-1:-1:-1;3246:2:50;3231:18;;;3218:32;;2649:633;-1:-1:-1;;;2649:633:50:o;3469:712::-;3559:6;3567;3575;3583;3636:2;3624:9;3615:7;3611:23;3607:32;3604:52;;;3652:1;3649;3642:12;3604:52;3692:9;3679:23;3725:18;3717:6;3714:30;3711:50;;;3757:1;3754;3747:12;3711:50;3796:58;3846:7;3837:6;3826:9;3822:22;3796:58;:::i;:::-;3873:8;;-1:-1:-1;3770:84:50;-1:-1:-1;;3961:2:50;3946:18;;3933:32;3990:18;3977:32;;3974:52;;;4022:1;4019;4012:12;3974:52;4061:60;4113:7;4102:8;4091:9;4087:24;4061:60;:::i;:::-;3469:712;;;;-1:-1:-1;4140:8:50;-1:-1:-1;;;;3469:712:50:o;4186:226::-;4245:6;4298:2;4286:9;4277:7;4273:23;4269:32;4266:52;;;4314:1;4311;4304:12;4266:52;-1:-1:-1;4359:23:50;;4186:226;-1:-1:-1;4186:226:50:o;4417:367::-;4480:8;4490:6;4544:3;4537:4;4529:6;4525:17;4521:27;4511:55;;4562:1;4559;4552:12;4511:55;-1:-1:-1;4585:20:50;;4628:18;4617:30;;4614:50;;;4660:1;4657;4650:12;4614:50;4697:4;4689:6;4685:17;4673:29;;4757:3;4750:4;4740:6;4737:1;4733:14;4725:6;4721:27;4717:38;4714:47;4711:67;;;4774:1;4771;4764:12;4789:1110;4958:6;4966;4974;4982;4990;4998;5051:2;5039:9;5030:7;5026:23;5022:32;5019:52;;;5067:1;5064;5057:12;5019:52;5107:9;5094:23;5140:18;5132:6;5129:30;5126:50;;;5172:1;5169;5162:12;5126:50;5211:70;5273:7;5264:6;5253:9;5249:22;5211:70;:::i;:::-;5300:8;;-1:-1:-1;5185:96:50;-1:-1:-1;;5388:2:50;5373:18;;5360:32;5417:18;5404:32;;5401:52;;;5449:1;5446;5439:12;5401:52;5488:72;5552:7;5541:8;5530:9;5526:24;5488:72;:::i;:::-;5579:8;;-1:-1:-1;5462:98:50;-1:-1:-1;;5667:2:50;5652:18;;5639:32;5696:18;5683:32;;5680:52;;;5728:1;5725;5718:12;5680:52;5767:72;5831:7;5820:8;5809:9;5805:24;5767:72;:::i;:::-;4789:1110;;;;-1:-1:-1;4789:1110:50;;-1:-1:-1;4789:1110:50;;5858:8;;4789:1110;-1:-1:-1;;;4789:1110:50:o;5904:184::-;5956:77;5953:1;5946:88;6053:4;6050:1;6043:15;6077:4;6074:1;6067:15;6093:334;6164:2;6158:9;6220:2;6210:13;;6225:66;6206:86;6194:99;;6323:18;6308:34;;6344:22;;;6305:62;6302:88;;;6370:18;;:::i;:::-;6406:2;6399:22;6093:334;;-1:-1:-1;6093:334:50:o;6432:617::-;6474:5;6527:3;6520:4;6512:6;6508:17;6504:27;6494:55;;6545:1;6542;6535:12;6494:55;6585:6;6572:20;6615:18;6607:6;6604:30;6601:56;;;6637:18;;:::i;:::-;6681:118;6793:4;6724:66;6717:4;6709:6;6705:17;6701:90;6697:101;6681:118;:::i;:::-;6824:6;6815:7;6808:23;6878:3;6871:4;6862:6;6854;6850:19;6846:30;6843:39;6840:59;;;6895:1;6892;6885:12;6840:59;6960:6;6953:4;6945:6;6941:17;6934:4;6925:7;6921:18;6908:59;7016:1;6987:20;;;7009:4;6983:31;6976:42;;;;6991:7;6432:617;-1:-1:-1;;;6432:617:50:o;7054:394::-;7131:6;7139;7192:2;7180:9;7171:7;7167:23;7163:32;7160:52;;;7208:1;7205;7198:12;7160:52;7231:29;7250:9;7231:29;:::i;:::-;7221:39;;7311:2;7300:9;7296:18;7283:32;7338:18;7330:6;7327:30;7324:50;;;7370:1;7367;7360:12;7324:50;7393:49;7434:7;7425:6;7414:9;7410:22;7393:49;:::i;:::-;7383:59;;;7054:394;;;;;:::o;8103:477::-;8252:2;8241:9;8234:21;8215:4;8284:6;8278:13;8327:6;8322:2;8311:9;8307:18;8300:34;8386:6;8381:2;8373:6;8369:15;8364:2;8353:9;8349:18;8343:50;8442:1;8437:2;8428:6;8417:9;8413:22;8409:31;8402:42;8571:2;8501:66;8496:2;8488:6;8484:15;8480:88;8469:9;8465:104;8461:113;8453:121;;;8103:477;;;;:::o;8836:597::-;8924:6;8932;8940;8948;9001:2;8989:9;8980:7;8976:23;8972:32;8969:52;;;9017:1;9014;9007:12;8969:52;9040:29;9059:9;9040:29;:::i;:::-;9030:39;-1:-1:-1;9138:2:50;9123:18;;9110:32;;-1:-1:-1;9217:2:50;9202:18;;9189:32;9244:18;9233:30;;9230:50;;;9276:1;9273;9266:12;9438:1221;9598:6;9606;9614;9622;9630;9638;9646;9654;9707:3;9695:9;9686:7;9682:23;9678:33;9675:53;;;9724:1;9721;9714:12;9675:53;9747:29;9766:9;9747:29;:::i;:::-;9737:39;;9795:38;9829:2;9818:9;9814:18;9795:38;:::i;:::-;9785:48;;9884:2;9873:9;9869:18;9856:32;9911:18;9903:6;9900:30;9897:50;;;9943:1;9940;9933:12;9897:50;9982:70;10044:7;10035:6;10024:9;10020:22;9982:70;:::i;:::-;10071:8;;-1:-1:-1;9956:96:50;-1:-1:-1;;10159:2:50;10144:18;;10131:32;10188:18;10175:32;;10172:52;;;10220:1;10217;10210:12;10172:52;10259:72;10323:7;10312:8;10301:9;10297:24;10259:72;:::i;:::-;10350:8;;-1:-1:-1;10233:98:50;-1:-1:-1;;10438:3:50;10423:19;;10410:33;10468:18;10455:32;;10452:52;;;10500:1;10497;10490:12;10452:52;10539:60;10591:7;10580:8;10569:9;10565:24;10539:60;:::i;:::-;9438:1221;;;;-1:-1:-1;9438:1221:50;;-1:-1:-1;9438:1221:50;;;;;;10618:8;-1:-1:-1;;;9438:1221:50:o;10664:793::-;10770:6;10778;10786;10794;10802;10810;10863:3;10851:9;10842:7;10838:23;10834:33;10831:53;;;10880:1;10877;10870:12;10831:53;10903:29;10922:9;10903:29;:::i;:::-;10893:39;;10951:38;10985:2;10974:9;10970:18;10951:38;:::i;:::-;10941:48;-1:-1:-1;11058:2:50;11043:18;;11030:32;;-1:-1:-1;11159:2:50;11144:18;;11131:32;;-1:-1:-1;11240:3:50;11225:19;;11212:33;11268:18;11257:30;;11254:50;;;11300:1;11297;11290:12;11254:50;11339:58;11389:7;11380:6;11369:9;11365:22;11339:58;:::i;11462:271::-;11645:6;11637;11632:3;11619:33;11601:3;11671:16;;11696:13;;;11671:16;11462:271;-1:-1:-1;11462:271:50:o;12437:184::-;12489:77;12486:1;12479:88;12586:4;12583:1;12576:15;12610:4;12607:1;12600:15;12626:186;12685:6;12738:2;12726:9;12717:7;12713:23;12709:32;12706:52;;;12754:1;12751;12744:12;12706:52;12777:29;12796:9;12777:29;:::i;12817:580::-;12894:4;12900:6;12960:11;12947:25;13050:66;13039:8;13023:14;13019:29;13015:102;12995:18;12991:127;12981:155;;13132:1;13129;13122:12;12981:155;13159:33;;13211:20;;;-1:-1:-1;13254:18:50;13243:30;;13240:50;;;13286:1;13283;13276:12;13240:50;13319:4;13307:17;;-1:-1:-1;13350:14:50;13346:27;;;13336:38;;13333:58;;;13387:1;13384;13377:12;14236:184;14306:6;14359:2;14347:9;14338:7;14334:23;14330:32;14327:52;;;14375:1;14372;14365:12;14327:52;-1:-1:-1;14398:16:50;;14236:184;-1:-1:-1;14236:184:50:o;14782:331::-;14887:9;14898;14940:8;14928:10;14925:24;14922:44;;;14962:1;14959;14952:12;14922:44;14991:6;14981:8;14978:20;14975:40;;;15011:1;15008;15001:12;14975:40;-1:-1:-1;;15037:23:50;;;15082:25;;;;;-1:-1:-1;14782:331:50:o;15118:1324::-;15229:6;15237;15245;15298:2;15286:9;15277:7;15273:23;15269:32;15266:52;;;15314:1;15311;15304:12;15266:52;15359:23;;;-1:-1:-1;15457:2:50;15442:18;;15429:32;15484:18;15473:30;;15470:50;;;15516:1;15513;15506:12;15470:50;15539:22;;15592:4;15584:13;;15580:27;-1:-1:-1;15570:55:50;;15621:1;15618;15611:12;15570:55;15661:2;15648:16;15687:18;15679:6;15676:30;15673:56;;;15709:18;;:::i;:::-;15755:6;15752:1;15748:14;15782:28;15806:2;15802;15798:11;15782:28;:::i;:::-;15844:19;;;15888:2;15918:11;;;15914:20;;;15879:12;;;;15946:19;;;15943:39;;;15978:1;15975;15968:12;15943:39;16010:2;16006;16002:11;15991:22;;16022:202;16038:6;16033:3;16030:15;16022:202;;;16132:17;;16162:20;;;16211:2;16055:12;;;;16132:17;;-1:-1:-1;16202:12:50;;;;16022:202;;;16243:5;-1:-1:-1;;;;16301:2:50;16286:18;;16273:32;;-1:-1:-1;16330:18:50;16317:32;;16314:52;;;16362:1;16359;16352:12;16314:52;16385:51;16428:7;16417:8;16406:9;16402:24;16385:51;:::i;:::-;16375:61;;;15118:1324;;;;;:::o;16700:184::-;16752:77;16749:1;16742:88;16849:4;16846:1;16839:15;16873:4;16870:1;16863:15;16889:168;16962:9;;;16993;;17010:15;;;17004:22;;16990:37;16980:71;;17031:18;;:::i;17062:125::-;17127:9;;;17148:10;;;17145:36;;;17161:18;;:::i;17402:301::-;17531:3;17569:6;17563:13;17615:6;17608:4;17600:6;17596:17;17591:3;17585:37;17677:1;17641:16;;17666:13;;;-1:-1:-1;17641:16:50;17402:301;-1:-1:-1;17402:301:50:o;18724:325::-;18812:6;18807:3;18800:19;18864:6;18857:5;18850:4;18845:3;18841:14;18828:43;;18916:1;18909:4;18900:6;18895:3;18891:16;18887:27;18880:38;18782:3;19038:4;18968:66;18963:2;18955:6;18951:15;18947:88;18942:3;18938:98;18934:109;18927:116;;18724:325;;;;:::o;19054:392::-;19273:2;19262:9;19255:21;19236:4;19293:61;19350:2;19339:9;19335:18;19327:6;19319;19293:61;:::i;:::-;19385:2;19370:18;;19363:34;;;;-1:-1:-1;19428:2:50;19413:18;19406:34;19285:69;19054:392;-1:-1:-1;;19054:392:50:o;19704:441::-;19923:6;19912:9;19905:25;19978:42;19970:6;19966:55;19961:2;19950:9;19946:18;19939:83;20058:2;20053;20042:9;20038:18;20031:30;19886:4;20078:61;20135:2;20124:9;20120:18;20112:6;20104;20078:61;:::i;:::-;20070:69;19704:441;-1:-1:-1;;;;;;19704:441:50:o;20150:244::-;20307:2;20296:9;20289:21;20270:4;20327:61;20384:2;20373:9;20369:18;20361:6;20353;20327:61;:::i;20399:128::-;20466:9;;;20487:11;;;20484:37;;;20501:18;;:::i;20532:315::-;20717:2;20706:9;20699:21;20680:4;20737:61;20794:2;20783:9;20779:18;20771:6;20763;20737:61;:::i;:::-;20729:69;;20834:6;20829:2;20818:9;20814:18;20807:34;20532:315;;;;;;:::o;20852:324::-;21035:2;21024:9;21017:21;20998:4;21055:61;21112:2;21101:9;21097:18;21089:6;21081;21055:61;:::i;:::-;21047:69;;21164:4;21156:6;21152:17;21147:2;21136:9;21132:18;21125:45;20852:324;;;;;;:::o;21969:396::-;22176:2;22165:9;22158:21;22139:4;22196:61;22253:2;22242:9;22238:18;22230:6;22222;22196:61;:::i;:::-;22288:2;22273:18;;22266:34;;;;-1:-1:-1;22343:14:50;;22336:22;22331:2;22316:18;;;22309:50;22188:69;21969:396;-1:-1:-1;;21969:396:50:o;22370:321::-;22561:6;22550:9;22543:25;22604:2;22599;22588:9;22584:18;22577:30;22524:4;22624:61;22681:2;22670:9;22666:18;22658:6;22650;22624:61;:::i;22696:249::-;22765:6;22818:2;22806:9;22797:7;22793:23;22789:32;22786:52;;;22834:1;22831;22824:12;22786:52;22866:9;22860:16;22885:30;22909:5;22885:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "49": [
        { "start": 1115, "length": 32 },
        { "start": 3119, "length": 32 },
        { "start": 3622, "length": 32 },
        { "start": 6225, "length": 32 }
      ],
      "5045": [
        { "start": 4717, "length": 32 },
        { "start": 4758, "length": 32 },
        { "start": 5360, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "SET_IMAGE_HASH_TYPE_HASH()": "57c56d6b",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "VERSION()": "ffa1ad74",
    "entryPoint()": "b0d691fe",
    "execute(address,uint256,bytes)": "b61d27f6",
    "executeBatch(address[],uint256[],bytes[])": "47e1da2a",
    "getNonce()": "d087d288",
    "imageHash()": "51605d80",
    "initialize(bytes32)": "9498bd71",
    "isValidSignature(bytes,bytes)": "20c13b0b",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "proxiableUUID()": "52d1902d",
    "signatureRecovery(bytes32,bytes)": "853c5068",
    "supportsInterface(bytes4)": "01ffc9a7",
    "updateImageHash(bytes32)": "29561426",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"LightWalletInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@shunkakinoki\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Should be set to the address of the EntryPoint contract The official EntryPoint contract is at https://etherscan.io/address/0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789\",\"params\":{\"anEntryPoint\":\"The address of the entrypoint contract.\"}},\"execute(address,uint256,bytes)\":{\"params\":{\"dest\":\"The address of the target contract to call.\",\"func\":\"The calldata to send to the target contract.\",\"value\":\"The amount of Wei (ETH) to send along with the call.\"}},\"executeBatch(address[],uint256[],bytes[])\":{\"details\":\"to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\",\"params\":{\"dest\":\"The array of address of the target contract to call.\",\"func\":\"The array of calldata to send to the target contract.\",\"value\":\"The array of amount of Wei (ETH) to send along with the call.\"}},\"initialize(bytes32)\":{\"params\":{\"imageHash\":\"The hash to validate the signature against.\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"title\":\"LightWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"The name for this contract\"},\"VERSION()\":{\"notice\":\"The version for this contract\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Executes a transaction (called directly by entryPoint)\"},\"executeBatch(address[],uint256[],bytes[])\":{\"notice\":\"Executes a sequence of transactions (called directly by entryPoint)\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"},\"initialize(bytes32)\":{\"notice\":\"The _entryPoint member is immutable, to reduce gas consumption. To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"LightWallet is an account abstraction contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/LightWallet.sol\":\"LightWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@/bytecodes/=contracts/bytecodes/\",\":@/circuits/=contracts/circuits/\",\":@/constants/=contracts/constants/\",\":@/contracts/=contracts/src/\",\":@/script/=contracts/script/\",\":@/test/=contracts/test/\",\":@0xsequence/wallet-contracts/=lib/wallet-contracts/\",\":@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/\",\":@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/\",\":@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":@asynchronous-vault/=lib/asynchronous-vault/src/\",\":@biconomy/account-contracts/=lib/scw-contracts/\",\":@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/\",\":@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/\",\":@eth-infinitism/account-abstraction/=lib/account-abstraction/\",\":@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/\",\":@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/\",\":@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/\",\":@safe-global/safe-contracts/=lib/safe-contracts/\",\":@source/=lib/soul-wallet-contract/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":@zerodevapp/contracts/=lib/kernel/src/\",\":account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/\",\":account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/\",\":asynchronous-vault/=lib/asynchronous-vault/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":magic-spend/=lib/magic-spend/src/\",\":murky/=lib/murky/src/\",\":nexus/=lib/nexus/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":seaport/=lib/seaport/\",\":singleton-paymaster/=lib/singleton-paymaster/src/\",\":solady/=lib/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solmate/=lib/solmate/src/\",\":src/=lib/kernel/src/\",\":surl/=lib/surl/src/\"]},\"sources\":{\"contracts/src/LightWallet.sol\":{\"keccak256\":\"0xa3acefa7546772bacf1da1ed3e1967f197a1f9b5bc76f6c9bb7421475be2faf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f741fb2b44a3732f2d453999b512c411739b987ab31637068f8d672e15de94f8\",\"dweb:/ipfs/QmTrapRr1WmM4uAFv1BjcAy6xwZGvQqCYf2TEvEuCmrnEk\"]},\"contracts/src/interfaces/IERC1271.sol\":{\"keccak256\":\"0xf92f6c185e197d29ab617e6e412beb958f2fc50d5b7a1d218ffd596db70e44b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c522a161f9b5c567d044843a0e998bfbf0f7ca8c0186d8338c952f48c71223e3\",\"dweb:/ipfs/QmQd2jpoJaXrT38hERBSFQDFNaVQAwpuYS1FeWJobfu3Mm\"]},\"contracts/src/interfaces/ILightWallet.sol\":{\"keccak256\":\"0x85f0a4b8e8a6f9d4cef90bd1f78b8b83a792c80df693c0e04768e01965625cc6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b92989eb3e59cb84f176bb24da1a18f9aa995966f44115b8d4adbe05c4afb4e3\",\"dweb:/ipfs/QmfHQf6M6fY2kP3SETvqbD4Q8EXJWohK3Ce6EAXk65vbks\"]},\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe\",\"dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/wallet-contracts/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0xd5b77e8a67d37eddc09b1ed8e6c928ecc087a007500fb0a5ba9b4f62c03523c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c3e505c269edd609ec16609c584709d1dedb95dae97358e23e842b63b89d83f6\",\"dweb:/ipfs/QmSkaHKc4xw1MESJtTEPYsjLANHGKWtgVaoTM7bQ2yXavx\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0xe60c6f06605e36bf8796a672afc8adf6b803b8dd2200d9b4eb22a567dd0ca0e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e987eaa5ad2b15b6fe5900eae103553b66290bfc6bfa30726b81a8044d70f087\",\"dweb:/ipfs/QmU87dwmFHfcJjnmJqzKcEru1JUR4EZgcu5c3W1E4hHm5B\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleAuthUpgradable.sol\":{\"keccak256\":\"0x24d9f069d0e13ae0c33bcb280bee2572f4ccbfae006f3b581741a6c6f2bc52ee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44cb3390aed7a6782e76255386e760f64323b2b1f00855e560929e87431deaae\",\"dweb:/ipfs/QmSiKZ2A5LVcRUyh7vpKPicUcrU4p7oLCrHmdhJy9h8UZr\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0x9d60bfafc106bf0d36f6d3afd0958c02a0b6564c0d7aebc7df4a4ab0bc84d6b2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2be58dfe657761a82446c8c2bab2c620f22b4d6cb5c012774bceb4bf37dc955b\",\"dweb:/ipfs/QmQWTpfLvSBM7tA6vzud9A6TuS78n3MPymByQsJmhphca1\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0xb679203e33fbbe15f492af6d9d9a173dd9ad04019cc82b6577642617cb7e5d2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://087ba33db9449a77b4c904f2617cc9df5c73e84224666cac88ff1ece2b4f8033\",\"dweb:/ipfs/QmQP6jKGGaDfyY1z1tm7WYfosnkKg3H5ADqR9ftCRBJL9R\"]},\"lib/wallet-contracts/contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x62aea3f4f8ef814ec443dd5f7e44efd4f2b18b44187b2cf938d6c39f27f2b2d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64558bd50aecdb88893cd8edc8cde2b85770f62b0e40613f280775402fc737bf\",\"dweb:/ipfs/QmeHKeZWaFfMpHXyHtpXvEpvgjcnsECX9CMn4fURJRcgCc\"]},\"lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x0cd19d5eeadd30f6de13cc9127b0e05af7633aa5b1d5cd70f7da74989ae5abb2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://572c801c1a232d5616f02c17222362e9f7051169be54b67f524c009151b00f4d\",\"dweb:/ipfs/QmV2YsNoy6fErAjZF68nUu6RBMYTDXQUqNtGL35PWBcGnZ\"]},\"lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x951597313801c9d6efa4cc00dd2a6e0e01f80a0a6f27c1e28cf72c94a860fc8d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93bf704ada9a2929b850ce45436d0117738a568cfd30572a36d553c8d05d768d\",\"dweb:/ipfs/QmQioto3qH8YLwy5nzYoPC1dhD9rpeVTEm4YJWL43huZeZ\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x1e6e16590f5b517f94057b62303bcc49e2b87e19e22a15002c9d5103b4a46bcf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c98970fb1b3ea998709379ea31ecdcf309b160f724206b96e2d2c4a892a2a6bb\",\"dweb:/ipfs/QmdnMd6N8UZg4K6oC1HpF4CkToKP9NVzf9gFCvD6QGQF9X\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x61e4635b7dab63362caac2c714bc71cb1f527bca1d29139767389a7d59ef5255\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aa727d4b51339ec9bb5e053c8be0d2f2616203afa2971c0a6530bdc51c4e520a\",\"dweb:/ipfs/QmQAQW6og8rweuNuD4513EC1F85ciwLSAEGU1zYWUsQwoK\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x7fd6759893c46259f1d658df3b6da7faed3bb3cc0adb698775364dbf975e3efe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e0bbee3f20bd14333b9159841beb10fb143a1de85f3e2e155723c7973a70a272\",\"dweb:/ipfs/QmY8nsfDHbB8uL8onKQoi9T8HShytrK5XmEyqR32EUbwZa\"]},\"lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xe8c45e4a0bdcd33a6b4d6cfd8aeb10f3a0bddb83d2eae4bdd078dc9b120ec99d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://427c63f11f40bf683214f8ddb9eff3a8bc43681a8f165a191a159693f5d68ec1\",\"dweb:/ipfs/QmeT8t6X77eEkigWAKqfaVH4XBqFKs2amC7PptAa5J51Xj\"]},\"lib/wallet-contracts/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x49fc5e7066a52b984ac3d8a89c4a7346b31b8e094f31866c87bf1bfedadeb1ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://612da99bc260e9682fcd9c168be6fdfbd5fa24642fc555f1c994370d98135863\",\"dweb:/ipfs/QmVbnRETAJQPyHh3i5BCft9U3XZ7zJQeAqbLgGAMv5yvJ3\"]},\"lib/wallet-contracts/contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x20cc4cc1175833261cf1e6ebbcf4cfad07cb4ed0d999c7d40e0d1e67c8e9839b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b03e2a9b13bfa48ff090df85c4e06498bd65895482f6345c42a2f0cadc4e3b90\",\"dweb:/ipfs/QmcMkEM9JU4xv9cXzVGibpcoUiwJxWXgWJLqw6Z2KsEmD9\"]},\"lib/wallet-contracts/contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x32ad5763ec0efb4aa66ce8056d320264cf1d32167f8d564ab32be38622a3cca6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff2644d690b3aaea9e84e4f938415ef45dfa7a0af390b2ad7e9d5f72b9a99a37\",\"dweb:/ipfs/QmXPUXuhKdSos5frqJYzBjos9sKb1PiyeZSUzfBYiFdy8U\"]},\"lib/wallet-contracts/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x6a309da4b71b9d267b5f196e08b23628d870f9d208a47c5c06d564f26238dec4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b7b6cd6ce4f31a5432a430bbe3e97dceb0b4159ac75550dc13b04cba6dae43ec\",\"dweb:/ipfs/Qmd8aGwgcVYU7cZDasfGru6NoehfNYdUgzW5ujyqB22kbt\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "anEntryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EmptySignature" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "ImageHashIsZero" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "root", "type": "bytes32" },
            { "internalType": "bytes32", "name": "leaf", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_hash", "type": "bytes32" },
            { "internalType": "address", "name": "_addr", "type": "address" },
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "InvalidNestedSignature"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "bytes32", "name": "_s", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidSValue"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_flag", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidSignatureFlag"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [
            { "internalType": "bytes1", "name": "_type", "type": "bytes1" }
          ],
          "type": "error",
          "name": "InvalidSignatureType"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "uint256", "name": "_v", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidVValue"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_weight", "type": "uint256" }
          ],
          "type": "error",
          "name": "LowWeightChainedSignature"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "address", "name": "_sender", "type": "address" },
            { "internalType": "address", "name": "_self", "type": "address" }
          ],
          "type": "error",
          "name": "OnlySelfAuth"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "type": "error",
          "name": "SignerIsAddress0"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_signature", "type": "bytes" },
            { "internalType": "uint256", "name": "_type", "type": "uint256" },
            { "internalType": "bool", "name": "_recoverMode", "type": "bool" }
          ],
          "type": "error",
          "name": "UnsupportedSignatureType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_current",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_prev", "type": "uint256" }
          ],
          "type": "error",
          "name": "WrongChainedCheckpointOrder"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "newImageHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ImageHashUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LightWalletInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SET_IMAGE_HASH_TYPE_HASH",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "dest", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "bytes", "name": "func", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "dest",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            { "internalType": "bytes[]", "name": "func", "type": "bytes[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "imageHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "imageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
            { "internalType": "bytes", "name": "signatures", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_data", "type": "bytes" },
            { "internalType": "bytes", "name": "_signatures", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" },
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "_digest", "type": "bytes32" },
            { "internalType": "bytes", "name": "_signature", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signatureRecovery",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "weight", "type": "uint256" },
            {
              "internalType": "bytes32",
              "name": "imageHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "subdigest",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "checkpoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_imageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateImageHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Should be set to the address of the EntryPoint contract The official EntryPoint contract is at https://etherscan.io/address/0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789",
            "params": {
              "anEntryPoint": "The address of the entrypoint contract."
            }
          },
          "execute(address,uint256,bytes)": {
            "params": {
              "dest": "The address of the target contract to call.",
              "func": "The calldata to send to the target contract.",
              "value": "The amount of Wei (ETH) to send along with the call."
            }
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "details": "to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value",
            "params": {
              "dest": "The array of address of the target contract to call.",
              "func": "The array of calldata to send to the target contract.",
              "value": "The array of amount of Wei (ETH) to send along with the call."
            }
          },
          "initialize(bytes32)": {
            "params": {
              "imageHash": "The hash to validate the signature against."
            }
          },
          "isValidSignature(bytes,bytes)": {
            "details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
            "params": {
              "_data": "Arbitrary length data signed on the behalf of address(this)",
              "_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
            },
            "returns": {
              "_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
            "params": {
              "_hash": "keccak256 hash that was signed",
              "_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
            },
            "returns": {
              "_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "signatureRecovery(bytes32,bytes)": {
            "details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
            "params": {
              "_digest": "Digest of the signed data.",
              "_signature": "A Sequence signature."
            },
            "returns": {
              "checkpoint": "A nonce that is incremented every time a new configuration is set.",
              "imageHash": "The imageHash of the configuration that signed the message.",
              "subdigest": "A modified version of the original digest, unique for each wallet/network.",
              "threshold": "The required number of signatures needed to consider the signature valid.",
              "weight": "The actual number of signatures collected in the signature."
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "_interfaceID": "The interface identifier, as specified in ERC-165"
            },
            "returns": {
              "_0": "`true` if the contract implements `_interfaceID`"
            }
          },
          "updateImageHash(bytes32)": {
            "params": {
              "_imageHash": "New required image hash of the signature"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
            "params": {
              "missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
              "userOp": "- The operation that is about to be executed.",
              "userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
            },
            "returns": {
              "validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NAME()": { "notice": "The name for this contract" },
          "VERSION()": { "notice": "The version for this contract" },
          "entryPoint()": {
            "notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
          },
          "execute(address,uint256,bytes)": {
            "notice": "Executes a transaction (called directly by entryPoint)"
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "notice": "Executes a sequence of transactions (called directly by entryPoint)"
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "imageHash()": {
            "notice": "Returns the current image hash of the wallet"
          },
          "initialize(bytes32)": {
            "notice": "The _entryPoint member is immutable, to reduce gas consumption. To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`"
          },
          "isValidSignature(bytes,bytes)": {
            "notice": "Verifies whether the provided signature is valid with respect to the provided data"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies whether the provided signature is valid with respect to the provided hash"
          },
          "signatureRecovery(bytes32,bytes)": {
            "notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface"
          },
          "updateImageHash(bytes32)": {
            "notice": "Updates the signers configuration of the wallet"
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@/bytecodes/=contracts/bytecodes/",
        "@/circuits/=contracts/circuits/",
        "@/constants/=contracts/constants/",
        "@/contracts/=contracts/src/",
        "@/script/=contracts/script/",
        "@/test/=contracts/test/",
        "@0xsequence/wallet-contracts/=lib/wallet-contracts/",
        "@0xsequence/wallet-contracts0v3/=lib/wallet-contracts-v3/",
        "@account-abstraction-v6/=lib/account-abstraction-v0.6/contracts/",
        "@account-abstraction-v7/=lib/account-abstraction-v0.7/contracts/",
        "@account-abstraction/=lib/account-abstraction/contracts/",
        "@asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "@asynchronous-vault/=lib/asynchronous-vault/src/",
        "@biconomy/account-contracts/=lib/scw-contracts/",
        "@eth-infinitism/account-abstraction-v0.6/=lib/account-abstraction-v0.6/",
        "@eth-infinitism/account-abstraction-v0.7/=lib/account-abstraction-v0.7/",
        "@eth-infinitism/account-abstraction/=lib/account-abstraction/",
        "@openzeppelin-v5.0.2/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable-v4.9/=lib/openzeppelin-contracts-upgradeable-v4.9/contracts/",
        "@openzeppelin/contracts-upgradeable-v5.0/=lib/openzeppelin-contracts-upgradeable-v5.0/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-v4.9/=lib/openzeppelin-contracts-v4.9/contracts/",
        "@openzeppelin/contracts-v5.0/=lib/openzeppelin-contracts-v5.0/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@proofofsoulprotocol/soul-wallet-contract/=lib/soul-wallet-contract/",
        "@safe-global/safe-contracts/=lib/safe-contracts/",
        "@source/=lib/soul-wallet-contract/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "@zerodevapp/contracts/=lib/kernel/src/",
        "account-abstraction-v0.6/=lib/account-abstraction-v0.6/contracts/",
        "account-abstraction-v0.7/=lib/account-abstraction-v0.7/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "asynchronous-vault-patch/=lib/asynchronous-vault-patch/src/",
        "asynchronous-vault/=lib/asynchronous-vault/src/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "magic-spend/=lib/magic-spend/src/",
        "murky/=lib/murky/src/",
        "nexus/=lib/nexus/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "seaport/=lib/seaport/",
        "singleton-paymaster/=lib/singleton-paymaster/src/",
        "solady/=lib/solady/",
        "solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/kernel/src/",
        "surl/=lib/surl/src/"
      ],
      "optimizer": { "enabled": true, "runs": 4294967295 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "contracts/src/LightWallet.sol": "LightWallet" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "contracts/src/LightWallet.sol": {
        "keccak256": "0xa3acefa7546772bacf1da1ed3e1967f197a1f9b5bc76f6c9bb7421475be2faf1",
        "urls": [
          "bzz-raw://f741fb2b44a3732f2d453999b512c411739b987ab31637068f8d672e15de94f8",
          "dweb:/ipfs/QmTrapRr1WmM4uAFv1BjcAy6xwZGvQqCYf2TEvEuCmrnEk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IERC1271.sol": {
        "keccak256": "0xf92f6c185e197d29ab617e6e412beb958f2fc50d5b7a1d218ffd596db70e44b5",
        "urls": [
          "bzz-raw://c522a161f9b5c567d044843a0e998bfbf0f7ca8c0186d8338c952f48c71223e3",
          "dweb:/ipfs/QmQd2jpoJaXrT38hERBSFQDFNaVQAwpuYS1FeWJobfu3Mm"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/ILightWallet.sol": {
        "keccak256": "0x85f0a4b8e8a6f9d4cef90bd1f78b8b83a792c80df693c0e04768e01965625cc6",
        "urls": [
          "bzz-raw://b92989eb3e59cb84f176bb24da1a18f9aa995966f44115b8d4adbe05c4afb4e3",
          "dweb:/ipfs/QmfHQf6M6fY2kP3SETvqbD4Q8EXJWohK3Ce6EAXk65vbks"
        ],
        "license": "Apache-2.0"
      },
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358",
        "urls": [
          "bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07",
          "dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
        "urls": [
          "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
          "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
        "urls": [
          "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
          "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
        "urls": [
          "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
          "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
        "urls": [
          "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
          "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7",
        "urls": [
          "bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe",
          "dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7",
        "urls": [
          "bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd",
          "dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3",
        "urls": [
          "bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23",
          "dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/wallet-contracts/contracts/interfaces/IERC1271Wallet.sol": {
        "keccak256": "0xd5b77e8a67d37eddc09b1ed8e6c928ecc087a007500fb0a5ba9b4f62c03523c0",
        "urls": [
          "bzz-raw://c3e505c269edd609ec16609c584709d1dedb95dae97358e23e842b63b89d83f6",
          "dweb:/ipfs/QmSkaHKc4xw1MESJtTEPYsjLANHGKWtgVaoTM7bQ2yXavx"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleAuth.sol": {
        "keccak256": "0xe60c6f06605e36bf8796a672afc8adf6b803b8dd2200d9b4eb22a567dd0ca0e6",
        "urls": [
          "bzz-raw://e987eaa5ad2b15b6fe5900eae103553b66290bfc6bfa30726b81a8044d70f087",
          "dweb:/ipfs/QmU87dwmFHfcJjnmJqzKcEru1JUR4EZgcu5c3W1E4hHm5B"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleAuthUpgradable.sol": {
        "keccak256": "0x24d9f069d0e13ae0c33bcb280bee2572f4ccbfae006f3b581741a6c6f2bc52ee",
        "urls": [
          "bzz-raw://44cb3390aed7a6782e76255386e760f64323b2b1f00855e560929e87431deaae",
          "dweb:/ipfs/QmSiKZ2A5LVcRUyh7vpKPicUcrU4p7oLCrHmdhJy9h8UZr"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleERC165.sol": {
        "keccak256": "0x9d60bfafc106bf0d36f6d3afd0958c02a0b6564c0d7aebc7df4a4ab0bc84d6b2",
        "urls": [
          "bzz-raw://2be58dfe657761a82446c8c2bab2c620f22b4d6cb5c012774bceb4bf37dc955b",
          "dweb:/ipfs/QmQWTpfLvSBM7tA6vzud9A6TuS78n3MPymByQsJmhphca1"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleSelfAuth.sol": {
        "keccak256": "0xb679203e33fbbe15f492af6d9d9a173dd9ad04019cc82b6577642617cb7e5d2b",
        "urls": [
          "bzz-raw://087ba33db9449a77b4c904f2617cc9df5c73e84224666cac88ff1ece2b4f8033",
          "dweb:/ipfs/QmQP6jKGGaDfyY1z1tm7WYfosnkKg3H5ADqR9ftCRBJL9R"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/ModuleStorage.sol": {
        "keccak256": "0x62aea3f4f8ef814ec443dd5f7e44efd4f2b18b44187b2cf938d6c39f27f2b2d6",
        "urls": [
          "bzz-raw://64558bd50aecdb88893cd8edc8cde2b85770f62b0e40613f280775402fc737bf",
          "dweb:/ipfs/QmeHKeZWaFfMpHXyHtpXvEpvgjcnsECX9CMn4fURJRcgCc"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuth.sol": {
        "keccak256": "0x0cd19d5eeadd30f6de13cc9127b0e05af7633aa5b1d5cd70f7da74989ae5abb2",
        "urls": [
          "bzz-raw://572c801c1a232d5616f02c17222362e9f7051169be54b67f524c009151b00f4d",
          "dweb:/ipfs/QmV2YsNoy6fErAjZF68nUu6RBMYTDXQUqNtGL35PWBcGnZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol": {
        "keccak256": "0x951597313801c9d6efa4cc00dd2a6e0e01f80a0a6f27c1e28cf72c94a860fc8d",
        "urls": [
          "bzz-raw://93bf704ada9a2929b850ce45436d0117738a568cfd30572a36d553c8d05d768d",
          "dweb:/ipfs/QmQioto3qH8YLwy5nzYoPC1dhD9rpeVTEm4YJWL43huZeZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
        "keccak256": "0x1e6e16590f5b517f94057b62303bcc49e2b87e19e22a15002c9d5103b4a46bcf",
        "urls": [
          "bzz-raw://c98970fb1b3ea998709379ea31ecdcf309b160f724206b96e2d2c4a892a2a6bb",
          "dweb:/ipfs/QmdnMd6N8UZg4K6oC1HpF4CkToKP9NVzf9gFCvD6QGQF9X"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
        "keccak256": "0x61e4635b7dab63362caac2c714bc71cb1f527bca1d29139767389a7d59ef5255",
        "urls": [
          "bzz-raw://aa727d4b51339ec9bb5e053c8be0d2f2616203afa2971c0a6530bdc51c4e520a",
          "dweb:/ipfs/QmQAQW6og8rweuNuD4513EC1F85ciwLSAEGU1zYWUsQwoK"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
        "keccak256": "0x7fd6759893c46259f1d658df3b6da7faed3bb3cc0adb698775364dbf975e3efe",
        "urls": [
          "bzz-raw://e0bbee3f20bd14333b9159841beb10fb143a1de85f3e2e155723c7973a70a272",
          "dweb:/ipfs/QmY8nsfDHbB8uL8onKQoi9T8HShytrK5XmEyqR32EUbwZa"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
        "keccak256": "0xe8c45e4a0bdcd33a6b4d6cfd8aeb10f3a0bddb83d2eae4bdd078dc9b120ec99d",
        "urls": [
          "bzz-raw://427c63f11f40bf683214f8ddb9eff3a8bc43681a8f165a191a159693f5d68ec1",
          "dweb:/ipfs/QmeT8t6X77eEkigWAKqfaVH4XBqFKs2amC7PptAa5J51Xj"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibBytes.sol": {
        "keccak256": "0x49fc5e7066a52b984ac3d8a89c4a7346b31b8e094f31866c87bf1bfedadeb1ac",
        "urls": [
          "bzz-raw://612da99bc260e9682fcd9c168be6fdfbd5fa24642fc555f1c994370d98135863",
          "dweb:/ipfs/QmVbnRETAJQPyHh3i5BCft9U3XZ7zJQeAqbLgGAMv5yvJ3"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibBytesPointer.sol": {
        "keccak256": "0x20cc4cc1175833261cf1e6ebbcf4cfad07cb4ed0d999c7d40e0d1e67c8e9839b",
        "urls": [
          "bzz-raw://b03e2a9b13bfa48ff090df85c4e06498bd65895482f6345c42a2f0cadc4e3b90",
          "dweb:/ipfs/QmcMkEM9JU4xv9cXzVGibpcoUiwJxWXgWJLqw6Z2KsEmD9"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/LibOptim.sol": {
        "keccak256": "0x32ad5763ec0efb4aa66ce8056d320264cf1d32167f8d564ab32be38622a3cca6",
        "urls": [
          "bzz-raw://ff2644d690b3aaea9e84e4f938415ef45dfa7a0af390b2ad7e9d5f72b9a99a37",
          "dweb:/ipfs/QmXPUXuhKdSos5frqJYzBjos9sKb1PiyeZSUzfBYiFdy8U"
        ],
        "license": "Apache-2.0"
      },
      "lib/wallet-contracts/contracts/utils/SignatureValidator.sol": {
        "keccak256": "0x6a309da4b71b9d267b5f196e08b23628d870f9d208a47c5c06d564f26238dec4",
        "urls": [
          "bzz-raw://b7b6cd6ce4f31a5432a430bbe3e97dceb0b4159ac75550dc13b04cba6dae43ec",
          "dweb:/ipfs/Qmd8aGwgcVYU7cZDasfGru6NoehfNYdUgzW5ujyqB22kbt"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "id": 0
}
