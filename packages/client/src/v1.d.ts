// Copyright (C) 2023 Light, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/check": {
    /**
     * Check if the server is running.
     * @description Check if the server is running.
     */
    get: operations["handler"];
  };
  "/v1/configuration/create": {
    /**
     * Create a configuration
     * @description Create a configuration
     */
    post: operations["v1_post_handler"];
  };
  "/v1/configuration/get": {
    /**
     * Get a configuration
     * @description Get a configuration
     */
    get: operations["v1_get_handler"];
  };
  "/v1/health": {
    /**
     * Check the health of the server.
     * @description Check the health of the server.
     */
    get: operations["handler"];
  };
  "/v1/wallet/create": {
    /**
     * Create a wallet
     * @description Create a wallet
     */
    post: operations["v1_post_handler"];
  };
  "/v1/wallet/get": {
    /**
     * Get a wallet
     * @description Get a wallet
     */
    get: operations["v1_get_handler"];
  };
  "/v1/wallet/list": {
    /**
     * Returns a list of wallets.
     * @description Returns a list of wallets.
     */
    get: operations["v1_list_handler"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description Item to do. */
    Configuration: {
      address: string;
      id: string;
    };
    /** @description Item to do. */
    Wallet: {
      address: string;
      factory_address: string;
      id: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /**
   * Check the health of the server.
   * @description Check the health of the server.
   */
  handler: {
    responses: {
      /** @description Health returned successfully */
      200: {
        content: never;
      };
    };
  };
  /**
   * Create a wallet
   * @description Create a wallet
   */
  v1_post_handler: {
    parameters: {
      query: {
        address: string;
      };
    };
    responses: {
      /** @description Wallet created successfully */
      200: {
        content: {
          "application/json": components["schemas"]["Wallet"];
        };
      };
    };
  };
  /**
   * Get a wallet
   * @description Get a wallet
   */
  v1_get_handler: {
    parameters: {
      query: {
        address: string;
      };
    };
    responses: {
      /** @description Wallet returned successfully */
      200: {
        content: {
          "application/json": components["schemas"]["Wallet"];
        };
      };
    };
  };
  /**
   * Returns a list of wallets.
   * @description Returns a list of wallets.
   */
  v1_list_handler: {
    parameters: {
      query?: {
        offset?: number | null;
        limit?: number | null;
      };
    };
    responses: {
      /** @description Wallets returned successfully */
      200: {
        content: {
          "application/json": components["schemas"]["Wallet"][];
        };
      };
    };
  };
}
